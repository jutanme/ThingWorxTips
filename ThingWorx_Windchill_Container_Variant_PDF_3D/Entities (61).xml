<?xml version="1.0" encoding="UTF-8" standalone="no"?><Entities build="b1190" majorVersion="9" minorVersion="3" modelPersistenceProviderPackage="PostgresPersistenceProviderPackage" revision="4" schemaVersion="1134" universal=""><StyleDefinitions/><Networks/><PersistenceProviderPackages/><Mashups><Mashup aspect.isFlex="true" aspect.isResponsive="true" aspect.mashupType="mashup" columns="0.0" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-09-03T09:13:01.422Z" name="JE.DrawingSearch.Mash" projectName="JE" rows="0.0" tags=""><Owner name="pat" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Mashup Mobile Settings" isHidden="true" isMultiRow="false" name="MobileSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="false" aspect.friendlyName="Disable Zoom" baseType="BOOLEAN" description="Disables zooming in and out within the mashup" name="disableZoom" ordinal="0"/><FieldDefinition aspect.defaultValue="true" aspect.friendlyName="Full Screen Mode" baseType="BOOLEAN" description="Open the mashup in full screen mode" name="fullScreenMode" ordinal="0"/><FieldDefinition aspect.friendlyName="Height" baseType="STRING" description="The height of the mashup page" name="height" ordinal="0"/><FieldDefinition aspect.defaultValue="device-height" aspect.friendlyName="Height Type" baseType="STRING" description="Use the height of the device display, or a custom height (in px)" name="heightType" ordinal="0"/><FieldDefinition aspect.defaultValue="1.0" aspect.friendlyName="Initial Scale" baseType="NUMBER" description="The initial zoom scale when the mashup is loaded for the first time" name="initialScale" ordinal="0"/><FieldDefinition aspect.friendlyName="Shortcut Icon Title" baseType="STRING" description="A title for the mashup shortcut on the iOS home screen" name="iosShortcutIconTitle" ordinal="0"/><FieldDefinition aspect.defaultValue="black-translucent" aspect.friendlyName="Status Bar Appearance" baseType="STRING" description="The style of the iOS status bar" name="iosStatusBarAppearance" ordinal="0"/><FieldDefinition aspect.defaultValue="10.0" aspect.friendlyName="Maximum Scale" baseType="NUMBER" description="The maximum scale that users can zoom out to" name="maximumScale" ordinal="0"/><FieldDefinition aspect.defaultValue="0.1" aspect.friendlyName="Minimum Scale" baseType="NUMBER" description="The minimum scale that users can zoom out to" name="minimumScale" ordinal="0"/><FieldDefinition aspect.friendlyName="Width" baseType="STRING" description="The width of the mashup page" name="width" ordinal="0"/><FieldDefinition aspect.defaultValue="device-width" aspect.friendlyName="Width Type" baseType="STRING" description="Use the width of the device display, or a custom width (in px)" name="widthType" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><disableZoom>false</disableZoom><fullScreenMode>true</fullScreenMode><height><![CDATA[device-height]]></height><heightType><![CDATA[device-height]]></heightType><initialScale>1.0</initialScale><iosShortcutIconTitle/><iosStatusBarAppearance><![CDATA[black-translucent]]></iosStatusBarAppearance><maximumScale>10.0</maximumScale><minimumScale>0.1</minimumScale><width><![CDATA[device-width]]></width><widthType><![CDATA[device-width]]></widthType></Row></Rows></ConfigurationTable></ConfigurationTables><ParameterDefinitions/><Things/><ThingShapes/><ThingTemplates/><mashupContent><![CDATA[{
  "CustomMashupCss" : "",
  "Data" : {
    "Session" : {
      "DataName" : "Session",
      "EntityName" : "",
      "EntityType" : "Session",
      "Id" : "session",
      "Services" : [ {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "SessionInterface",
        "Name" : "GetGlobalSessionValues",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetGlobalSessionValues"
      } ]
    },
    "UserExtensions" : {
      "DataName" : "UserExtensions",
      "EntityName" : "",
      "EntityType" : "UserExtensions",
      "Id" : "UserExtensions",
      "Services" : [ {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "UserExtensionInterface",
        "Name" : "GetCurrentUserExtensionProperties",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetCurrentUserExtensionProperties"
      } ]
    }
  },
  "DataBindings" : [ ],
  "DesignTimePermissions" : { },
  "Events" : [ ],
  "RunTimePermissions" : { },
  "UI" : {
    "Properties" : {
      "AddToDashboardButton" : "SimplePlus",
      "AddToDashboardButtonStyle" : "DefaultAddToDashboardButtonStyle",
      "Area" : "Mashup",
      "BGImage" : "",
      "BGImageRepeat" : "no-repeat",
      "BGImageSize" : "auto",
      "Columns" : 0,
      "ConfigureGadgetButton" : "SimpleGear",
      "ConfigureGadgetButtonStyle" : "DefaultConfigureGadgetButtonStyle",
      "DisplayName" : "Mashup",
      "EnableParameterEditing" : false,
      "Height" : 618,
      "Id" : "mashup-root",
      "IgnoreWarningsInViewMashup" : false,
      "IsPrintLayout" : false,
      "Left" : 0,
      "MashupToEditGadget" : "DefaultMashupToEditGadget",
      "MinHeight" : 0,
      "MinWidth" : 0,
      "ResponsiveLayout" : true,
      "Rows" : 0,
      "ShowDataLoading" : true,
      "Style" : "DefaultMashupStyle",
      "StyleProperties" : {
        "data" : { },
        "meta" : {
          "type" : "WidgetStyler",
          "version" : "1.0"
        }
      },
      "StyleTheme" : "PTC Convergence Theme",
      "Title" : "",
      "TitleBar" : false,
      "TitleBarStyle" : "DefaultTitleBarStyle",
      "TitleBarText" : "Gadget Title Here",
      "Top" : 0,
      "Type" : "mashup",
      "UseMasterTheme" : false,
      "UseTheme" : false,
      "UseThemeForHybrids" : false,
      "Visible" : true,
      "Width" : 1024,
      "Z-index" : 10,
      "__TypeDisplayName" : "Mashup",
      "id_index" : 19,
      "supportsAutoResize" : true
    },
    "Widgets" : [ {
      "Properties" : {
        "Area" : "UI",
        "DisplayName" : "container-2",
        "EnableExpandCollapse" : false,
        "ExpandCollapseTabLocation" : "inside",
        "Expanded" : true,
        "Id" : "flexcontainer-2",
        "LastContainer" : true,
        "Overlay" : false,
        "ResponsiveLayout" : true,
        "ShowDataLoading" : true,
        "ShowExpandCollapseTab" : false,
        "SourceURL" : "",
        "Style" : "DefaultContainerStyle",
        "StyleProperties" : { },
        "Type" : "flexcontainer",
        "UseTheme" : true,
        "Visible" : true,
        "Z-index" : 10,
        "__TypeDisplayName" : "Responsive Container",
        "align-content" : "flex-start",
        "align-items" : "flex-start",
        "flex-basis" : "auto",
        "flex-direction" : "row",
        "flex-grow" : 1,
        "flex-max-height" : "",
        "flex-max-width" : "",
        "flex-min-height" : "",
        "flex-min-width" : "",
        "flex-shrink" : 1,
        "flex-size" : "default",
        "flex-wrap" : "nowrap",
        "iconClass" : "widgets-flexcontainer",
        "justify-content" : "flex-start",
        "positioning" : "responsive",
        "userCannotRemove" : true
      },
      "Widgets" : [ {
        "Properties" : {
          "Area" : "UI",
          "DisplayName" : "container-4",
          "EnableExpandCollapse" : false,
          "ExpandCollapseTabLocation" : "inside",
          "Expanded" : true,
          "Id" : "flexcontainer-4",
          "LastContainer" : false,
          "Overlay" : false,
          "ResponsiveLayout" : false,
          "ShowDataLoading" : true,
          "ShowExpandCollapseTab" : false,
          "SourceURL" : "",
          "Style" : "DefaultContainerStyle",
          "StyleProperties" : { },
          "Type" : "flexcontainer",
          "UseTheme" : true,
          "Visible" : true,
          "Z-index" : 10,
          "__TypeDisplayName" : "Responsive Container",
          "align-content" : "flex-start",
          "align-items" : "flex-start",
          "flex-basis" : "auto",
          "flex-direction" : "column",
          "flex-grow" : 1,
          "flex-max-height" : "",
          "flex-max-width" : "416px",
          "flex-min-height" : "",
          "flex-min-width" : "416px",
          "flex-shrink" : 1,
          "flex-size" : "fixed",
          "flex-wrap" : "nowrap",
          "iconClass" : "widgets-flexcontainer-fixed",
          "isLocked" : false,
          "justify-content" : "flex-start",
          "positioning" : "responsive",
          "userCannotRemove" : false
        },
        "Widgets" : [ {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "container-6",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-6",
            "LastContainer" : false,
            "Overlay" : false,
            "ResponsiveLayout" : false,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Responsive Container",
            "align-content" : "flex-start",
            "align-items" : "center",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-max-height" : "44px",
            "flex-max-width" : "",
            "flex-min-height" : "44px",
            "flex-min-width" : "",
            "flex-shrink" : 1,
            "flex-size" : "fixed",
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer-fixed",
            "isLocked" : false,
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : false
          },
          "Widgets" : [ {
            "Properties" : {
              "Area" : "UI",
              "Disabled" : false,
              "DisplayName" : "ptcs-radio-8",
              "Id" : "ptcsradio-8",
              "Label" : "Windchill",
              "LastContainer" : false,
              "Left" : 34,
              "Margin" : "5",
              "Radiogroup" : "",
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "State" : true,
              "TabSequence" : 0,
              "Top" : 17.199996948242188,
              "Type" : "ptcsradio",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Radio Button"
            },
            "Widgets" : [ ]
          } ]
        }, {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "container-7",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-7",
            "LastContainer" : false,
            "Overlay" : false,
            "ResponsiveLayout" : true,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Responsive Container",
            "align-content" : "flex-start",
            "align-items" : "flex-end",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-max-height" : "67px",
            "flex-max-width" : "",
            "flex-min-height" : "67px",
            "flex-min-width" : "",
            "flex-shrink" : 1,
            "flex-size" : "fixed",
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer-fixed",
            "isLocked" : false,
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : false
          },
          "Widgets" : [ {
            "Properties" : {
              "Area" : "UI",
              "Counter" : false,
              "Disabled" : false,
              "DisplayName" : "ptcs-textfield-9",
              "Id" : "ptcstextfield-9",
              "Label" : "図書/図面番号",
              "LabelAlignment" : "left",
              "LastContainer" : false,
              "Left" : 24,
              "Margin" : "5",
              "MaxNumberOfCharacters" : 100,
              "Password" : false,
              "ReadOnly" : false,
              "ResponsiveLayout" : false,
              "ShowClearText" : true,
              "ShowDataLoading" : true,
              "TabSequence" : 0,
              "TextAlignment" : "left",
              "Top" : 11.666664123535156,
              "Type" : "ptcstextfield",
              "UseTheme" : true,
              "Visible" : true,
              "Width" : 273,
              "Z-index" : 10,
              "__TypeDisplayName" : "Text Field"
            },
            "Widgets" : [ ]
          }, {
            "Properties" : {
              "Area" : "UI",
              "ButtonType" : "primary",
              "ContextID" : "",
              "Disabled" : false,
              "DisplayName" : "ptcs-button-10",
              "Id" : "ptcsbutton-10",
              "Label" : "検索",
              "LabelAlignment" : "center",
              "LastContainer" : false,
              "Left" : 314,
              "Margin" : "5",
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "TabSequence" : 0,
              "Top" : 16.666664123535156,
              "Type" : "ptcsbutton",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Button"
            },
            "Widgets" : [ ]
          } ]
        }, {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "container-5",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-5",
            "LastContainer" : true,
            "Overlay" : false,
            "ResponsiveLayout" : false,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Responsive Container",
            "align-content" : "flex-start",
            "align-items" : "flex-start",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-max-height" : "",
            "flex-max-width" : "",
            "flex-min-height" : "",
            "flex-min-width" : "",
            "flex-shrink" : 1,
            "flex-size" : "default",
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer",
            "isLocked" : true,
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : false
          },
          "Widgets" : [ {
            "Properties" : {
              "Area" : "UI",
              "AutoScroll" : true,
              "CellBorderStyle" : "DefaultGridAdvancedCellBorderStyle",
              "CellValidationErrorStyle" : "DefaultGridAdvancedCellValidationErrorStyle",
              "CellValidationErrorTooltipStyle" : "DefaultGridAdvancedCellValidationErrorTooltipStyle",
              "Configuration" : "",
              "ConfigurationId" : 0,
              "CookiePersistence" : true,
              "DataOverflow" : "clipped",
              "DataServiceBindingDef" : {
                "dataName" : "Things_JE.WindchillAPI_Base",
                "entityName" : "JE.WindchillAPI_Base",
                "entityType" : "Things",
                "sourceId" : "GetPdfDrawingList",
                "target" : "GetPdfDrawingList"
              },
              "DefaultSelectedRows" : "",
              "DisplayName" : "gridadvanced-11",
              "DisplayOnlyMode" : false,
              "EditButtonsLocation" : "top-right",
              "EnableAddDeleteButtons" : false,
              "EnableCallbackOnSelectedRowsChange" : true,
              "EnableContextMenu" : true,
              "EnableEditButtons" : false,
              "EnableFilterEventOnConfigChange" : true,
              "EnableFooter" : false,
              "EnableGridReset" : false,
              "EnableGridSearch" : false,
              "EnableKeyboardNavigation" : true,
              "EnableSorting" : false,
              "FocusStyle" : "DefaultFocusStyle",
              "GridResetButtonLocation" : "top-right",
              "GridSearchLocation" : "top-left",
              "HeaderOverflow" : "tooltip",
              "Height" : 200,
              "IDFieldName" : "id",
              "Id" : "gridadvanced-11",
              "IsEditable" : false,
              "LastContainer" : false,
              "Left" : 84,
              "MaxHeaderHeight" : 100,
              "MinRowHeight" : 30,
              "ResponsiveLayout" : true,
              "RowAlternateBackgroundStyle" : "DefaultGridAdvancedRowAlternateBackgroundStyle",
              "RowBackgroundStyle" : "DefaultGridAdvancedRowBackgroundStyle",
              "RowBorderStyle" : "DefaultGridAdvancedRowBorderStyle",
              "RowFormat_StateParameters" : [ ],
              "RowHoverStyle" : "DefaultGridAdvancedRowHoverStyle",
              "RowSelectedStyle" : "DefaultGridAdvancedRowSelectedStyle",
              "RowSelection" : "none",
              "SelectedRows" : "",
              "ShowDataLoading" : true,
              "SortAscendingStyle" : "DefaultSortAscendingStyle",
              "SortDescendingStyle" : "DefaultSortDescendingStyle",
              "TableFooterStyle" : "DefaultGridAdvancedFooterStyle",
              "TableHeaderStyle" : "DefaultGridAdvancedHeaderStyle",
              "TableWrapperStyle" : "DefaultGridAdvancedWrapperStyle",
              "ToolbarStyle" : "DefaultToolbarStyle",
              "TooltipStyle" : "DefaultTooltipStyle",
              "Top" : 121.66666412353516,
              "Type" : "gridadvanced",
              "UseTheme" : false,
              "Visible" : true,
              "Width" : 400,
              "Z-index" : 10,
              "__TypeDisplayName" : "Grid Advanced"
            },
            "Widgets" : [ ]
          } ]
        } ]
      }, {
        "Properties" : {
          "Area" : "UI",
          "DisplayName" : "container-3",
          "EnableExpandCollapse" : false,
          "ExpandCollapseTabLocation" : "inside",
          "Expanded" : true,
          "Id" : "flexcontainer-3",
          "LastContainer" : true,
          "Overlay" : false,
          "ResponsiveLayout" : false,
          "ShowDataLoading" : true,
          "ShowExpandCollapseTab" : false,
          "SourceURL" : "",
          "Style" : "DefaultContainerStyle",
          "StyleProperties" : { },
          "Type" : "flexcontainer",
          "UseTheme" : true,
          "Visible" : true,
          "Z-index" : 10,
          "__TypeDisplayName" : "Responsive Container",
          "align-content" : "flex-start",
          "align-items" : "flex-start",
          "flex-basis" : "auto",
          "flex-direction" : "column",
          "flex-grow" : 1,
          "flex-max-height" : "",
          "flex-max-width" : "",
          "flex-min-height" : "",
          "flex-min-width" : "",
          "flex-shrink" : 1,
          "flex-size" : "default",
          "flex-wrap" : "nowrap",
          "iconClass" : "widgets-flexcontainer",
          "isLocked" : true,
          "justify-content" : "flex-start",
          "positioning" : "responsive",
          "userCannotRemove" : false
        },
        "Widgets" : [ {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "container-13",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-13",
            "LastContainer" : false,
            "Overlay" : false,
            "ResponsiveLayout" : false,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Responsive Container",
            "align-content" : "flex-start",
            "align-items" : "flex-end",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-max-height" : "84px",
            "flex-max-width" : "",
            "flex-min-height" : "84px",
            "flex-min-width" : "",
            "flex-shrink" : 1,
            "flex-size" : "fixed",
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer-fixed",
            "isLocked" : false,
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : false
          },
          "Widgets" : [ {
            "Properties" : {
              "Area" : "UI",
              "Counter" : false,
              "Disabled" : false,
              "DisplayName" : "ptcs-textfield-14",
              "Id" : "ptcstextfield-14",
              "Label" : "",
              "LabelAlignment" : "left",
              "LastContainer" : false,
              "Left" : 84,
              "Margin" : "5",
              "MaxNumberOfCharacters" : 100,
              "Password" : false,
              "ReadOnly" : false,
              "ResponsiveLayout" : false,
              "ShowClearText" : true,
              "ShowDataLoading" : true,
              "TabSequence" : 0,
              "TextAlignment" : "left",
              "Top" : 56.666664123535156,
              "Type" : "ptcstextfield",
              "UseTheme" : true,
              "Visible" : true,
              "Width" : 273,
              "Z-index" : 10,
              "__TypeDisplayName" : "Text Field"
            },
            "Widgets" : [ ]
          }, {
            "Properties" : {
              "Alignment" : "left",
              "AllLabel" : "[[all]]",
              "Area" : "UI",
              "AutoSelectFirstRow" : false,
              "ClearSelectedItemsLabel" : "[[clearSelectedItems]]",
              "ClearSelectionItem" : true,
              "ClearSelectionLabel" : "(None)",
              "Disabled" : false,
              "DisplayName" : "ptcs-dropdown-15",
              "FilterHintText" : "Filter",
              "HintText" : "Select...",
              "Id" : "ptcsdropdown-15",
              "ItemMeta" : {
                "type" : "text"
              },
              "Label" : "",
              "LabelAlignment" : "left",
              "LastContainer" : false,
              "Left" : 379,
              "ListFormat_StateParameters" : [ ],
              "Margin" : "5",
              "MultiSelect" : false,
              "ResponsiveLayout" : false,
              "RowHeight" : 34,
              "SelectAllLabel" : "[[selectAll]]",
              "SelectedLabel" : "[[selected]]",
              "ShowDataLoading" : true,
              "ShowListFilter" : false,
              "TabSequence" : 0,
              "Top" : 26.666664123535156,
              "Type" : "ptcsdropdown",
              "UseTheme" : true,
              "Visible" : true,
              "Width" : 273,
              "Z-index" : 10,
              "__TypeDisplayName" : "DropDown"
            },
            "Widgets" : [ ]
          }, {
            "Properties" : {
              "Area" : "UI",
              "ButtonType" : "primary",
              "ContextID" : "",
              "Disabled" : false,
              "DisplayName" : "ptcs-button-16",
              "Id" : "ptcsbutton-16",
              "Label" : "図面",
              "LabelAlignment" : "center",
              "LastContainer" : false,
              "Left" : 654,
              "Margin" : "5",
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "TabSequence" : 0,
              "Top" : 16.666664123535156,
              "Type" : "ptcsbutton",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Button"
            },
            "Widgets" : [ ]
          }, {
            "Properties" : {
              "Area" : "UI",
              "ButtonType" : "primary",
              "ContextID" : "",
              "Disabled" : false,
              "DisplayName" : "ptcs-button-17",
              "Id" : "ptcsbutton-17",
              "Label" : "3Dモデル",
              "LabelAlignment" : "center",
              "LastContainer" : false,
              "Left" : 689,
              "Margin" : "5",
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "TabSequence" : 0,
              "Top" : 1.6666641235351562,
              "Type" : "ptcsbutton",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Button"
            },
            "Widgets" : [ ]
          } ]
        }, {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "container-12",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-12",
            "LastContainer" : true,
            "Overlay" : false,
            "ResponsiveLayout" : false,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Responsive Container",
            "align-content" : "flex-start",
            "align-items" : "flex-start",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-max-height" : "",
            "flex-max-width" : "",
            "flex-min-height" : "",
            "flex-min-width" : "",
            "flex-shrink" : 1,
            "flex-size" : "default",
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer",
            "isLocked" : true,
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : false
          },
          "Widgets" : [ {
            "Properties" : {
              "Area" : "UI",
              "DisplayName" : "webframe-18",
              "Height" : 200,
              "Id" : "webframe-18",
              "LastContainer" : false,
              "Left" : 254,
              "ResponsiveLayout" : true,
              "ShowDataLoading" : true,
              "Top" : 166.66666412353516,
              "Type" : "webframe",
              "URL" : "",
              "Visible" : true,
              "Width" : 200,
              "Z-index" : 10,
              "__TypeDisplayName" : "Web Frame"
            },
            "Widgets" : [ ]
          } ]
        } ]
      } ]
    } ]
  },
  "mashupType" : "mashup"
}]]></mashupContent><preview/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated&#10;" timestamp="2023-08-18T01:03:54.026Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:04:55.581Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:05:09.086Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T02:34:54.570Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T02:41:57.338Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T02:48:54.320Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T02:50:24.080Z" user="pat"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-09-03T09:13:01.422Z" user="pat"/></ConfigurationChanges></Mashup><Mashup aspect.isFlex="true" aspect.isResponsive="true" aspect.mashupType="mashup" columns="0.0" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-09-03T09:13:01.407Z" name="JE.BomDrawingSearch.Mash" projectName="JE" rows="0.0" tags=""><Owner name="pat" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Mashup Mobile Settings" isHidden="true" isMultiRow="false" name="MobileSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="false" aspect.friendlyName="Disable Zoom" baseType="BOOLEAN" description="Disables zooming in and out within the mashup" name="disableZoom" ordinal="0"/><FieldDefinition aspect.defaultValue="true" aspect.friendlyName="Full Screen Mode" baseType="BOOLEAN" description="Open the mashup in full screen mode" name="fullScreenMode" ordinal="0"/><FieldDefinition aspect.friendlyName="Height" baseType="STRING" description="The height of the mashup page" name="height" ordinal="0"/><FieldDefinition aspect.defaultValue="device-height" aspect.friendlyName="Height Type" baseType="STRING" description="Use the height of the device display, or a custom height (in px)" name="heightType" ordinal="0"/><FieldDefinition aspect.defaultValue="1.0" aspect.friendlyName="Initial Scale" baseType="NUMBER" description="The initial zoom scale when the mashup is loaded for the first time" name="initialScale" ordinal="0"/><FieldDefinition aspect.friendlyName="Shortcut Icon Title" baseType="STRING" description="A title for the mashup shortcut on the iOS home screen" name="iosShortcutIconTitle" ordinal="0"/><FieldDefinition aspect.defaultValue="black-translucent" aspect.friendlyName="Status Bar Appearance" baseType="STRING" description="The style of the iOS status bar" name="iosStatusBarAppearance" ordinal="0"/><FieldDefinition aspect.defaultValue="10.0" aspect.friendlyName="Maximum Scale" baseType="NUMBER" description="The maximum scale that users can zoom out to" name="maximumScale" ordinal="0"/><FieldDefinition aspect.defaultValue="0.1" aspect.friendlyName="Minimum Scale" baseType="NUMBER" description="The minimum scale that users can zoom out to" name="minimumScale" ordinal="0"/><FieldDefinition aspect.friendlyName="Width" baseType="STRING" description="The width of the mashup page" name="width" ordinal="0"/><FieldDefinition aspect.defaultValue="device-width" aspect.friendlyName="Width Type" baseType="STRING" description="Use the width of the device display, or a custom width (in px)" name="widthType" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><disableZoom>false</disableZoom><fullScreenMode>true</fullScreenMode><height><![CDATA[device-height]]></height><heightType><![CDATA[device-height]]></heightType><initialScale>1.0</initialScale><iosShortcutIconTitle/><iosStatusBarAppearance><![CDATA[black-translucent]]></iosStatusBarAppearance><maximumScale>10.0</maximumScale><minimumScale>0.1</minimumScale><width><![CDATA[device-width]]></width><widthType><![CDATA[device-width]]></widthType></Row></Rows></ConfigurationTable></ConfigurationTables><ParameterDefinitions/><Things/><ThingShapes/><ThingTemplates/><mashupContent><![CDATA[{
  "CustomMashupCss" : "",
  "Data" : {
    "Session" : {
      "DataName" : "Session",
      "EntityName" : "",
      "EntityType" : "Session",
      "Id" : "session",
      "Services" : [ {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "SessionInterface",
        "Name" : "GetGlobalSessionValues",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetGlobalSessionValues"
      } ]
    },
    "Things_LeeJE.WindchillAPI_Base" : {
      "DataName" : "Things_LeeJE.WindchillAPI_Base",
      "EntityName" : "LeeJE.WindchillAPI_Base",
      "EntityType" : "Things",
      "Id" : "c7ecdfc7-2374-4d60-b16b-461081abad47",
      "RefreshInterval" : 0,
      "Services" : [ {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "85b78e04-6688-482b-9259-5ed32088c096",
        "Name" : "GetContextList",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetContextList"
      }, {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "9633400c-001b-40a0-85c9-2d346f9deca5",
        "Name" : "GetVariantSpecificationList",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetVariantSpecificationList"
      }, {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "b43160ea-1f2a-4727-838e-0b223d81acd2",
        "Name" : "getPartStructuresByVariantID",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "getPartStructuresByVariantID"
      }, {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "da86459c-e811-4479-9a51-62a05d51d627",
        "Name" : "GetDWGListByDWGNo",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetDWGListByDWGNo"
      }, {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "02cf565a-361b-4cd4-9ae1-995a9ed69d37",
        "Name" : "GetPrimaryByDocId",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetPrimaryByDocId"
      } ]
    },
    "UserExtensions" : {
      "DataName" : "UserExtensions",
      "EntityName" : "",
      "EntityType" : "UserExtensions",
      "Id" : "UserExtensions",
      "Services" : [ {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "UserExtensionInterface",
        "Name" : "GetCurrentUserExtensionProperties",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetCurrentUserExtensionProperties"
      } ]
    }
  },
  "DataBindings" : [ {
    "Id" : "fb56a5a2-781f-49a5-bdc0-5adfa28c63c2",
    "PropertyMaps" : [ {
      "SourceProperty" : "",
      "SourcePropertyBaseType" : "INFOTABLE",
      "SourcePropertyType" : "InfoTable",
      "TargetProperty" : "Data",
      "TargetPropertyBaseType" : "INFOTABLE",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "AllData",
    "SourceId" : "GetContextList",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "ptcsdropdown-25",
    "TargetSection" : ""
  }, {
    "Id" : "62c84dd7-ba40-4582-b587-fc44f0bc0574",
    "PropertyMaps" : [ {
      "SourceProperty" : "SelectedText",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Property",
      "TargetProperty" : "context",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "Parameter"
    } ],
    "SourceArea" : "UI",
    "SourceDetails" : "",
    "SourceId" : "ptcsdropdown-25",
    "SourceSection" : "",
    "TargetArea" : "Data",
    "TargetId" : "GetVariantSpecificationList",
    "TargetSection" : "Things_LeeJE.WindchillAPI_Base"
  }, {
    "Id" : "52f59591-9a32-4939-a98f-9733f5d2e1ad",
    "PropertyMaps" : [ {
      "SourceProperty" : "",
      "SourcePropertyBaseType" : "INFOTABLE",
      "SourcePropertyType" : "InfoTable",
      "TargetProperty" : "Data",
      "TargetPropertyBaseType" : "INFOTABLE",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "AllData",
    "SourceId" : "GetVariantSpecificationList",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "ptcslist-44",
    "TargetSection" : ""
  }, {
    "Id" : "941e7f6d-e818-4eb0-8e2f-fda4e1b2c3ee",
    "PropertyMaps" : [ {
      "SourceProperty" : "SelectedText",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Property",
      "TargetProperty" : "VariantID",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "Parameter"
    } ],
    "SourceArea" : "UI",
    "SourceDetails" : "",
    "SourceId" : "ptcslist-44",
    "SourceSection" : "",
    "TargetArea" : "Data",
    "TargetId" : "getPartStructuresByVariantID",
    "TargetSection" : "Things_LeeJE.WindchillAPI_Base"
  }, {
    "Id" : "1f88ceaa-b628-4e18-ac4b-c0b0504e40e9",
    "PropertyMaps" : [ {
      "SourceProperty" : "Name",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Field",
      "TargetProperty" : "Text",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "SelectedRows",
    "SourceId" : "GetVariantSpecificationList",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "ptcstextfield-33",
    "TargetSection" : ""
  }, {
    "Id" : "933fa188-5df2-4a7c-b47f-527adff60bbe",
    "PropertyMaps" : [ {
      "SourceProperty" : "",
      "SourcePropertyBaseType" : "INFOTABLE",
      "SourcePropertyType" : "InfoTable",
      "TargetProperty" : "Data",
      "TargetPropertyBaseType" : "INFOTABLE",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "AllData",
    "SourceId" : "getPartStructuresByVariantID",
    "SourceName" : "getPartStructuresByVariantID",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "treegridadvanced-45",
    "TargetSection" : ""
  }, {
    "Id" : "dbcc80ad-bff1-46b1-8071-09e41c2fe7a5",
    "PropertyMaps" : [ {
      "SourceProperty" : "DWGBRNNO",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Field",
      "TargetProperty" : "dwgno",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "SelectedRows",
    "SourceId" : "getPartStructuresByVariantID",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "expression-49",
    "TargetSection" : ""
  }, {
    "Id" : "3fc262ed-2a07-4488-bc41-97e1c978dc20",
    "PropertyMaps" : [ {
      "SourceProperty" : "Output",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Property",
      "TargetProperty" : "Text",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "UI",
    "SourceId" : "expression-49",
    "SourceSection" : "",
    "TargetArea" : "UI",
    "TargetId" : "ptcstextfield-38",
    "TargetSection" : ""
  }, {
    "Id" : "8d1d82f9-4958-464e-980a-5ab5846ad0ed",
    "PropertyMaps" : [ {
      "SourceProperty" : "",
      "SourcePropertyBaseType" : "INFOTABLE",
      "SourcePropertyType" : "InfoTable",
      "TargetProperty" : "Data",
      "TargetPropertyBaseType" : "INFOTABLE",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "AllData",
    "SourceId" : "GetDWGListByDWGNo",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "ptcsdropdown-39",
    "TargetSection" : ""
  }, {
    "Id" : "19292062-bd9c-4b73-9b02-4b9c0ce8302f",
    "PropertyMaps" : [ {
      "SourceProperty" : "Output",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Property",
      "TargetProperty" : "objectId",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "Parameter"
    } ],
    "SourceArea" : "UI",
    "SourceId" : "expression-49",
    "SourceSection" : "",
    "TargetArea" : "Data",
    "TargetId" : "GetDWGListByDWGNo",
    "TargetSection" : "Things_LeeJE.WindchillAPI_Base"
  }, {
    "Id" : "fb7eaafd-c8ec-49cd-83cb-15f9530d5633",
    "PropertyMaps" : [ {
      "SourceProperty" : "SelectedText",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Property",
      "TargetProperty" : "objectId",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "Parameter"
    } ],
    "SourceArea" : "UI",
    "SourceDetails" : "",
    "SourceId" : "ptcsdropdown-39",
    "SourceSection" : "",
    "TargetArea" : "Data",
    "TargetId" : "GetPrimaryByDocId",
    "TargetSection" : "Things_LeeJE.WindchillAPI_Base"
  }, {
    "Id" : "c5da7a8a-1990-43a6-bbb5-c2cc0d59075d",
    "PropertyMaps" : [ {
      "SourceProperty" : "result",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Field",
      "TargetProperty" : "URL",
      "TargetPropertyBaseType" : "HYPERLINK",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "AllData",
    "SourceId" : "GetPrimaryByDocId",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "webframe-51",
    "TargetSection" : ""
  } ],
  "DesignTimePermissions" : { },
  "Events" : [ {
    "EventHandlerArea" : "Data",
    "EventHandlerId" : "Things_LeeJE.WindchillAPI_Base",
    "EventHandlerService" : "GetContextList",
    "EventTriggerArea" : "Mashup",
    "EventTriggerEvent" : "Loaded",
    "EventTriggerId" : "mashup-root",
    "EventTriggerSection" : "",
    "Id" : "a38e7b9e-640d-43b5-9326-2d88a6113e31"
  }, {
    "EventHandlerArea" : "Data",
    "EventHandlerId" : "Things_LeeJE.WindchillAPI_Base",
    "EventHandlerService" : "getPartStructuresByVariantID",
    "EventTriggerArea" : "UI",
    "EventTriggerEvent" : "Clicked",
    "EventTriggerId" : "ptcsbutton-34",
    "EventTriggerSection" : "",
    "Id" : "99705b38-4d58-4a0b-b3af-8339387fa356"
  }, {
    "EventHandlerArea" : "Data",
    "EventHandlerId" : "Things_LeeJE.WindchillAPI_Base",
    "EventHandlerService" : "GetVariantSpecificationList",
    "EventTriggerArea" : "UI",
    "EventTriggerEvent" : "Clicked",
    "EventTriggerId" : "ptcsbutton-22",
    "EventTriggerSection" : "",
    "Id" : "cfe9f9b0-48d9-41e3-afcd-058f5645bb0f"
  }, {
    "EventHandlerArea" : "UI",
    "EventHandlerId" : "expression-49",
    "EventHandlerService" : "Evaluate",
    "EventTriggerArea" : "UI",
    "EventTriggerEvent" : "SelectedRowsChanged",
    "EventTriggerId" : "treegridadvanced-45",
    "EventTriggerSection" : "",
    "Id" : "b6a1ad68-6e41-4fd7-a08d-4c19793eb82e"
  }, {
    "EventHandlerArea" : "Data",
    "EventHandlerId" : "Things_LeeJE.WindchillAPI_Base",
    "EventHandlerService" : "GetDWGListByDWGNo",
    "EventTriggerArea" : "UI",
    "EventTriggerEvent" : "Changed",
    "EventTriggerId" : "expression-49",
    "EventTriggerSection" : "",
    "Id" : "82233d95-e2f9-4d1d-8629-e1fa3d75af86"
  }, {
    "EventHandlerArea" : "Data",
    "EventHandlerId" : "Things_LeeJE.WindchillAPI_Base",
    "EventHandlerService" : "GetPrimaryByDocId",
    "EventTriggerArea" : "UI",
    "EventTriggerEvent" : "Clicked",
    "EventTriggerId" : "ptcsbutton-40",
    "EventTriggerSection" : "",
    "Id" : "e8a17f84-a111-4a7e-8b7d-e3222cfc831a"
  } ],
  "RunTimePermissions" : { },
  "UI" : {
    "Properties" : {
      "AddToDashboardButton" : "SimplePlus",
      "AddToDashboardButtonStyle" : "DefaultAddToDashboardButtonStyle",
      "Area" : "Mashup",
      "BGImage" : "",
      "BGImageRepeat" : "no-repeat",
      "BGImageSize" : "auto",
      "Columns" : 0,
      "ConfigureGadgetButton" : "SimpleGear",
      "ConfigureGadgetButtonStyle" : "DefaultConfigureGadgetButtonStyle",
      "DisplayName" : "Mashup",
      "EnableParameterEditing" : false,
      "Height" : 618,
      "Id" : "mashup-root",
      "IgnoreWarningsInViewMashup" : false,
      "IsPrintLayout" : false,
      "Left" : 0,
      "MashupResolution" : "1366x768",
      "MashupToEditGadget" : "DefaultMashupToEditGadget",
      "MinHeight" : 0,
      "MinWidth" : 0,
      "ResponsiveLayout" : true,
      "Rows" : 0,
      "ShowDataLoading" : true,
      "Style" : "DefaultMashupStyle",
      "StyleProperties" : {
        "data" : { },
        "meta" : {
          "type" : "WidgetStyler",
          "version" : "1.0"
        }
      },
      "StyleTheme" : "PTC Convergence Theme",
      "Title" : "",
      "TitleBar" : false,
      "TitleBarStyle" : "DefaultTitleBarStyle",
      "TitleBarText" : "Gadget Title Here",
      "Top" : 0,
      "Type" : "mashup",
      "UseMasterTheme" : false,
      "UseTheme" : false,
      "UseThemeForHybrids" : false,
      "Visible" : true,
      "Width" : 1024,
      "Z-index" : 10,
      "__TypeDisplayName" : "Mashup",
      "id_index" : 51,
      "supportsAutoResize" : true
    },
    "Widgets" : [ {
      "Properties" : {
        "Area" : "UI",
        "DisplayName" : "container-2",
        "EnableExpandCollapse" : false,
        "ExpandCollapseTabLocation" : "inside",
        "Expanded" : true,
        "Id" : "flexcontainer-2",
        "LastContainer" : true,
        "Overlay" : false,
        "ResponsiveLayout" : true,
        "ShowDataLoading" : true,
        "ShowExpandCollapseTab" : false,
        "SourceURL" : "",
        "Style" : "DefaultContainerStyle",
        "StyleProperties" : { },
        "Type" : "flexcontainer",
        "UseTheme" : true,
        "Visible" : true,
        "Z-index" : 10,
        "__TypeDisplayName" : "Responsive Container",
        "align-content" : "flex-start",
        "align-items" : "flex-start",
        "flex-basis" : "auto",
        "flex-direction" : "row",
        "flex-grow" : 1,
        "flex-max-height" : "",
        "flex-max-width" : "",
        "flex-min-height" : "",
        "flex-min-width" : "",
        "flex-shrink" : 1,
        "flex-size" : "default",
        "flex-wrap" : "nowrap",
        "iconClass" : "widgets-flexcontainer",
        "isLocked" : true,
        "justify-content" : "flex-start",
        "positioning" : "responsive",
        "userCannotRemove" : true
      },
      "Widgets" : [ {
        "Properties" : {
          "AnchorLocation" : "left",
          "AnimationSpeed" : "200ms",
          "Area" : "UI",
          "Behavior" : "push",
          "ClickOutsideToClose" : false,
          "CollapseByDefault" : false,
          "Disabled" : false,
          "DisplayName" : "ptcs-dynamicpanel-17",
          "Height" : 260,
          "HideDragHandle" : false,
          "HideTriggerButton" : false,
          "Id" : "ptcsdynamicpanel-17",
          "LastContainer" : false,
          "Left" : 199.03125,
          "MaxSizeWhenExpanded" : "100%",
          "MinSizeWhenExpanded" : "50",
          "PanelSize" : "380",
          "ResponsiveLayout" : true,
          "ShowDataLoading" : true,
          "SizeWhenCollapsed" : "0",
          "TabSequence" : 0,
          "Top" : 276,
          "TriggerButtonLocation" : "top",
          "TriggerButtonType" : "type1",
          "Type" : "ptcsdynamicpanel",
          "UseTheme" : true,
          "Visible" : true,
          "Width" : 360,
          "Z-index" : 10,
          "__TypeDisplayName" : "Dynamic Panel"
        },
        "Widgets" : [ {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "ptcs-dynamicpanel-17 #1",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-18",
            "LastContainer" : false,
            "Overlay" : false,
            "ResponsiveLayout" : true,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Responsive Container",
            "align-content" : "flex-start",
            "align-items" : "flex-start",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-max-height" : "",
            "flex-max-width" : "",
            "flex-min-height" : "",
            "flex-min-width" : "",
            "flex-shrink" : 1,
            "flex-size" : "default",
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer",
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : true
          },
          "Widgets" : [ {
            "Properties" : {
              "Area" : "UI",
              "DisplayName" : "container-28",
              "EnableExpandCollapse" : false,
              "ExpandCollapseTabLocation" : "inside",
              "Expanded" : true,
              "Id" : "flexcontainer-28",
              "LastContainer" : false,
              "Overlay" : false,
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "ShowExpandCollapseTab" : false,
              "SourceURL" : "",
              "Style" : "DefaultContainerStyle",
              "StyleProperties" : { },
              "Type" : "flexcontainer",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Responsive Container",
              "align-content" : "flex-start",
              "align-items" : "flex-start",
              "flex-basis" : "auto",
              "flex-direction" : "column",
              "flex-grow" : 1,
              "flex-max-height" : "",
              "flex-max-width" : "374px",
              "flex-min-height" : "",
              "flex-min-width" : "374px",
              "flex-shrink" : 1,
              "flex-size" : "fixed",
              "flex-wrap" : "nowrap",
              "iconClass" : "widgets-flexcontainer-fixed",
              "isLocked" : false,
              "justify-content" : "flex-start",
              "positioning" : "responsive",
              "userCannotRemove" : false
            },
            "Widgets" : [ {
              "Properties" : {
                "Area" : "UI",
                "DisplayName" : "container-30",
                "EnableExpandCollapse" : false,
                "ExpandCollapseTabLocation" : "inside",
                "Expanded" : true,
                "Id" : "flexcontainer-30",
                "LastContainer" : false,
                "Overlay" : false,
                "ResponsiveLayout" : false,
                "ShowDataLoading" : true,
                "ShowExpandCollapseTab" : false,
                "SourceURL" : "",
                "Style" : "DefaultContainerStyle",
                "StyleProperties" : { },
                "Type" : "flexcontainer",
                "UseTheme" : true,
                "Visible" : true,
                "Z-index" : 10,
                "__TypeDisplayName" : "Responsive Container",
                "align-content" : "flex-start",
                "align-items" : "flex-end",
                "flex-basis" : "auto",
                "flex-direction" : "row",
                "flex-grow" : 1,
                "flex-max-height" : "74px",
                "flex-max-width" : "",
                "flex-min-height" : "74px",
                "flex-min-width" : "",
                "flex-shrink" : 1,
                "flex-size" : "fixed",
                "flex-wrap" : "nowrap",
                "iconClass" : "widgets-flexcontainer-fixed",
                "isLocked" : false,
                "justify-content" : "flex-start",
                "positioning" : "responsive",
                "userCannotRemove" : false
              },
              "Widgets" : [ {
                "Properties" : {
                  "Area" : "UI",
                  "Counter" : false,
                  "Disabled" : true,
                  "DisplayName" : "ptcs-textfield-33",
                  "Id" : "ptcstextfield-33",
                  "Label" : "選択バリエーション仕様",
                  "LabelAlignment" : "left",
                  "LastContainer" : false,
                  "Left" : 124.03125,
                  "Margin" : "5",
                  "MaxNumberOfCharacters" : 100,
                  "Password" : false,
                  "ReadOnly" : false,
                  "ResponsiveLayout" : false,
                  "ShowClearText" : true,
                  "ShowDataLoading" : true,
                  "TabSequence" : 0,
                  "TextAlignment" : "left",
                  "Top" : 26,
                  "Type" : "ptcstextfield",
                  "UseTheme" : true,
                  "Visible" : true,
                  "Width" : 173,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Text Field"
                },
                "Widgets" : [ ]
              }, {
                "Properties" : {
                  "Area" : "UI",
                  "ButtonType" : "primary",
                  "ContextID" : "",
                  "Disabled" : false,
                  "DisplayName" : "ptcs-button-34",
                  "Id" : "ptcsbutton-34",
                  "Label" : "BOM検索",
                  "LabelAlignment" : "center",
                  "LastContainer" : false,
                  "Left" : 219.03125,
                  "Margin" : "5",
                  "ResponsiveLayout" : false,
                  "ShowDataLoading" : true,
                  "TabSequence" : 0,
                  "Top" : 6,
                  "Type" : "ptcsbutton",
                  "UseTheme" : true,
                  "Visible" : true,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Button"
                },
                "Widgets" : [ ]
              } ]
            }, {
              "Properties" : {
                "Area" : "UI",
                "DisplayName" : "container-29",
                "EnableExpandCollapse" : false,
                "ExpandCollapseTabLocation" : "inside",
                "Expanded" : true,
                "Id" : "flexcontainer-29",
                "LastContainer" : true,
                "Overlay" : false,
                "ResponsiveLayout" : false,
                "ShowDataLoading" : true,
                "ShowExpandCollapseTab" : false,
                "SourceURL" : "",
                "Style" : "DefaultContainerStyle",
                "StyleProperties" : { },
                "Type" : "flexcontainer",
                "UseTheme" : true,
                "Visible" : true,
                "Z-index" : 10,
                "__TypeDisplayName" : "Responsive Container",
                "align-content" : "flex-start",
                "align-items" : "flex-start",
                "flex-basis" : "auto",
                "flex-direction" : "row",
                "flex-grow" : 1,
                "flex-max-height" : "",
                "flex-max-width" : "",
                "flex-min-height" : "",
                "flex-min-width" : "",
                "flex-shrink" : 1,
                "flex-size" : "default",
                "flex-wrap" : "nowrap",
                "iconClass" : "widgets-flexcontainer",
                "isLocked" : true,
                "justify-content" : "flex-start",
                "positioning" : "responsive",
                "userCannotRemove" : false
              },
              "Widgets" : [ {
                "Properties" : {
                  "Area" : "UI",
                  "AutoScroll" : true,
                  "CellBorderStyle" : "DefaultGridAdvancedCellBorderStyle",
                  "CellValidationErrorStyle" : "DefaultGridAdvancedCellValidationErrorStyle",
                  "CellValidationErrorTooltipStyle" : "DefaultGridAdvancedCellValidationErrorTooltipStyle",
                  "ColumnFormat" : {
                    "formatInfo" : [ {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "Number",
                      "FormatOptions" : {
                        "FormatString" : "full",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Number",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "Name",
                      "FormatOptions" : {
                        "FormatString" : "full",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Name",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "A.1 (Design)",
                      "FieldName" : "Version",
                      "FormatOptions" : {
                        "FormatString" : "full",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Version",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "Path i.e. /Default/Design",
                      "FieldName" : "FolderLocation",
                      "FormatOptions" : {
                        "FormatString" : "full",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "FolderLocation",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "Usage Link ID",
                      "FieldName" : "ParentId",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "ParentId",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "PartNumber",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "PartNumber",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "200px",
                      "headerTextAlignment" : "left",
                      "hidden" : false,
                      "inLayout" : true
                    }, {
                      "Align" : "left",
                      "AllowEdit" : true,
                      "Description" : "",
                      "FieldName" : "hasChildren",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "BOOLEAN",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "hasChildren",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "TypeIcon.Path",
                      "FieldName" : "TypeIconURL",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "IMAGELINK",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "TypeIconURL",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : false,
                      "inLayout" : true
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "PartUse.Quantity",
                      "FieldName" : "Quantity",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "NUMBER",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Quantity",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : false,
                      "inLayout" : true
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "PartUse.Unit.Display",
                      "FieldName" : "Unit",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Unit",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "Source.Display",
                      "FieldName" : "Source",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Source",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "PartUse.LineNumber",
                      "FieldName" : "LineNumber",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "LineNumber",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "PathId",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "PathId",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "LastModified",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "DATETIME",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "LastModified",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "treeId",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "treeId",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "idPath",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "idPath",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "PartName",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "PartName",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "State.Display",
                      "FieldName" : "State",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "State",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "PVParentTreeId",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "PVParentTreeId",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "CreatedOn",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "DATETIME",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "CreatedOn",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "Type - Number, Name, Version (View)",
                      "FieldName" : "Identity",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Identity",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "PVTreeId",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "PVTreeId",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "oid of part",
                      "FieldName" : "PartId",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "PartId",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "ID",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "ID",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "DWGBRNNO",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "DWGBRNNO",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : false,
                      "inLayout" : true
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "Revision",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Revision",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : false,
                      "inLayout" : true
                    } ]
                  },
                  "Configuration" : "",
                  "ConfigurationId" : 1,
                  "CookiePersistence" : true,
                  "DataOverflow" : "clipped",
                  "DataServiceBindingDef" : {
                    "dataName" : "Things_LeeJE.WindchillAPI_Base",
                    "entityName" : "LeeJE.WindchillAPI_Base",
                    "entityType" : "Things",
                    "sourceId" : "getPartStructuresByVariantID",
                    "target" : "getPartStructuresByVariantID"
                  },
                  "DefaultSelectedRows" : "",
                  "DisplayName" : "treegridadvanced-45",
                  "DisplayOnlyMode" : false,
                  "EditButtonsLocation" : "top-right",
                  "EnableAddDeleteButtons" : false,
                  "EnableCallbackOnSelectedRowsChange" : true,
                  "EnableContextMenu" : true,
                  "EnableEditButtons" : false,
                  "EnableFilterEventOnConfigChange" : true,
                  "EnableFooter" : false,
                  "EnableGridReset" : true,
                  "EnableGridSearch" : true,
                  "EnableKeyboardNavigation" : true,
                  "EnableSorting" : false,
                  "ExpandLoadedRows" : true,
                  "ExpandRowOnDoubleClick" : false,
                  "FocusStyle" : "DefaultFocusStyle",
                  "GridResetButtonLocation" : "top-right",
                  "GridSearchLocation" : "top-left",
                  "HasChildrenFieldName" : "hasChildren",
                  "HeaderOverflow" : "tooltip",
                  "Height" : 200,
                  "IDFieldName" : "PVTreeId",
                  "IDPathSeparator" : ":;",
                  "Id" : "treegridadvanced-45",
                  "IncludeRowExpansionParents" : false,
                  "IsEditable" : false,
                  "LastContainer" : false,
                  "Left" : 204,
                  "MaxHeaderHeight" : 100,
                  "MaxRowCacheSize" : 50000,
                  "MinRowHeight" : 30,
                  "ParentIDFieldName" : "PVParentTreeId",
                  "PreserveRowExpansion" : false,
                  "ResponsiveLayout" : true,
                  "RowAlternateBackgroundStyle" : "DefaultGridAdvancedRowAlternateBackgroundStyle",
                  "RowBackgroundStyle" : "DefaultGridAdvancedRowBackgroundStyle",
                  "RowBorderStyle" : "DefaultGridAdvancedRowBorderStyle",
                  "RowCollapseIconStyle" : "DefaultRowCollapseIconStyle",
                  "RowExpansionIconStyle" : "DefaultRowExpansionIconStyle",
                  "RowFormat_StateParameters" : [ ],
                  "RowHoverStyle" : "DefaultGridAdvancedRowHoverStyle",
                  "RowIconStyle" : "DefaultRowIconStyle",
                  "RowSelectedStyle" : "DefaultGridAdvancedRowSelectedStyle",
                  "RowSelection" : "single",
                  "SelectedRows" : "",
                  "ShowDataLoading" : true,
                  "SortAscendingStyle" : "DefaultSortAscendingStyle",
                  "SortDescendingStyle" : "DefaultSortDescendingStyle",
                  "TableFooterStyle" : "DefaultGridAdvancedFooterStyle",
                  "TableHeaderStyle" : "DefaultGridAdvancedHeaderStyle",
                  "TableWrapperStyle" : "DefaultGridAdvancedWrapperStyle",
                  "ToolbarStyle" : "DefaultToolbarStyle",
                  "TooltipStyle" : "DefaultTooltipStyle",
                  "Top" : 81,
                  "Type" : "treegridadvanced",
                  "UseTheme" : false,
                  "Visible" : true,
                  "Width" : 400,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Tree Grid Advanced"
                },
                "Widgets" : [ ]
              } ]
            } ]
          }, {
            "Properties" : {
              "Area" : "UI",
              "DisplayName" : "container-27",
              "EnableExpandCollapse" : false,
              "ExpandCollapseTabLocation" : "inside",
              "Expanded" : true,
              "Id" : "flexcontainer-27",
              "LastContainer" : true,
              "Overlay" : false,
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "ShowExpandCollapseTab" : false,
              "SourceURL" : "",
              "Style" : "DefaultContainerStyle",
              "StyleProperties" : { },
              "Type" : "flexcontainer",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Responsive Container",
              "align-content" : "flex-start",
              "align-items" : "flex-start",
              "flex-basis" : "auto",
              "flex-direction" : "column",
              "flex-grow" : 1,
              "flex-max-height" : "",
              "flex-max-width" : "",
              "flex-min-height" : "",
              "flex-min-width" : "",
              "flex-shrink" : 1,
              "flex-size" : "default",
              "flex-wrap" : "nowrap",
              "iconClass" : "widgets-flexcontainer",
              "isLocked" : true,
              "justify-content" : "flex-start",
              "positioning" : "responsive",
              "userCannotRemove" : false
            },
            "Widgets" : [ {
              "Properties" : {
                "Area" : "UI",
                "DisplayName" : "container-36",
                "EnableExpandCollapse" : false,
                "ExpandCollapseTabLocation" : "inside",
                "Expanded" : true,
                "Id" : "flexcontainer-36",
                "LastContainer" : false,
                "Overlay" : false,
                "ResponsiveLayout" : false,
                "ShowDataLoading" : true,
                "ShowExpandCollapseTab" : false,
                "SourceURL" : "",
                "Style" : "DefaultContainerStyle",
                "StyleProperties" : { },
                "Type" : "flexcontainer",
                "UseTheme" : true,
                "Visible" : true,
                "Z-index" : 10,
                "__TypeDisplayName" : "Responsive Container",
                "align-content" : "flex-start",
                "align-items" : "flex-end",
                "flex-basis" : "auto",
                "flex-direction" : "row",
                "flex-grow" : 1,
                "flex-max-height" : "72px",
                "flex-max-width" : "",
                "flex-min-height" : "72px",
                "flex-min-width" : "",
                "flex-shrink" : 1,
                "flex-size" : "fixed",
                "flex-wrap" : "nowrap",
                "iconClass" : "widgets-flexcontainer-fixed",
                "isLocked" : false,
                "justify-content" : "flex-start",
                "positioning" : "responsive",
                "userCannotRemove" : false
              },
              "Widgets" : [ {
                "Properties" : {
                  "Area" : "UI",
                  "Counter" : false,
                  "Disabled" : true,
                  "DisplayName" : "ptcs-textfield-38",
                  "Id" : "ptcstextfield-38",
                  "Label" : "選択図面",
                  "LabelAlignment" : "left",
                  "LastContainer" : false,
                  "Left" : 69.03125,
                  "Margin" : "5",
                  "MaxNumberOfCharacters" : 100,
                  "Password" : false,
                  "ReadOnly" : false,
                  "ResponsiveLayout" : false,
                  "ShowClearText" : true,
                  "ShowDataLoading" : true,
                  "TabSequence" : 0,
                  "TextAlignment" : "left",
                  "Top" : 11,
                  "Type" : "ptcstextfield",
                  "UseTheme" : true,
                  "Visible" : true,
                  "Width" : 273,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Text Field"
                },
                "Widgets" : [ ]
              }, {
                "Properties" : {
                  "Alignment" : "left",
                  "AllLabel" : "[[all]]",
                  "Area" : "UI",
                  "AutoSelectFirstRow" : false,
                  "ClearSelectedItemsLabel" : "[[clearSelectedItems]]",
                  "ClearSelectionItem" : true,
                  "ClearSelectionLabel" : "(None)",
                  "Disabled" : false,
                  "DisplayField" : "Identity",
                  "DisplayFieldBaseType" : "STRING",
                  "DisplayName" : "ptcs-dropdown-39",
                  "FilterHintText" : "Filter",
                  "HintText" : "Select...",
                  "Id" : "ptcsdropdown-39",
                  "ItemMeta" : {
                    "type" : "text"
                  },
                  "Label" : "改訂",
                  "LabelAlignment" : "left",
                  "LastContainer" : false,
                  "Left" : 241.03125,
                  "ListFormat_StateParameters" : [ ],
                  "Margin" : "5",
                  "MultiSelect" : false,
                  "ResponsiveLayout" : false,
                  "RowHeight" : 34,
                  "SelectAllLabel" : "[[selectAll]]",
                  "SelectedLabel" : "[[selected]]",
                  "ShowDataLoading" : true,
                  "ShowListFilter" : false,
                  "TabSequence" : 0,
                  "Top" : 16,
                  "Type" : "ptcsdropdown",
                  "UseTheme" : true,
                  "ValueField" : "ID",
                  "Visible" : true,
                  "Width" : 198,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "DropDown"
                },
                "Widgets" : [ ]
              }, {
                "Properties" : {
                  "Area" : "UI",
                  "ButtonType" : "primary",
                  "ContextID" : "",
                  "Disabled" : false,
                  "DisplayName" : "ptcs-button-40",
                  "Id" : "ptcsbutton-40",
                  "Label" : "図面",
                  "LabelAlignment" : "center",
                  "LastContainer" : false,
                  "Left" : 439.03125,
                  "Margin" : "5",
                  "ResponsiveLayout" : false,
                  "ShowDataLoading" : true,
                  "TabSequence" : 0,
                  "Top" : 16,
                  "Type" : "ptcsbutton",
                  "UseTheme" : true,
                  "Visible" : true,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Button"
                },
                "Widgets" : [ ]
              }, {
                "Properties" : {
                  "Area" : "UI",
                  "ButtonType" : "primary",
                  "ContextID" : "",
                  "Disabled" : false,
                  "DisplayName" : "ptcs-button-41",
                  "Id" : "ptcsbutton-41",
                  "Label" : "3Dモデル",
                  "LabelAlignment" : "center",
                  "LastContainer" : false,
                  "Left" : 531.03125,
                  "Margin" : "5",
                  "ResponsiveLayout" : false,
                  "ShowDataLoading" : true,
                  "TabSequence" : 0,
                  "Top" : 21,
                  "Type" : "ptcsbutton",
                  "UseTheme" : true,
                  "Visible" : true,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Button"
                },
                "Widgets" : [ ]
              } ]
            }, {
              "Properties" : {
                "Area" : "UI",
                "DisplayName" : "container-35",
                "EnableExpandCollapse" : false,
                "ExpandCollapseTabLocation" : "inside",
                "Expanded" : true,
                "Id" : "flexcontainer-35",
                "LastContainer" : true,
                "Overlay" : false,
                "ResponsiveLayout" : false,
                "ShowDataLoading" : true,
                "ShowExpandCollapseTab" : false,
                "SourceURL" : "",
                "Style" : "DefaultContainerStyle",
                "StyleProperties" : { },
                "Type" : "flexcontainer",
                "UseTheme" : true,
                "Visible" : true,
                "Z-index" : 10,
                "__TypeDisplayName" : "Responsive Container",
                "align-content" : "flex-start",
                "align-items" : "flex-start",
                "flex-basis" : "auto",
                "flex-direction" : "row",
                "flex-grow" : 1,
                "flex-max-height" : "",
                "flex-max-width" : "",
                "flex-min-height" : "",
                "flex-min-width" : "",
                "flex-shrink" : 1,
                "flex-size" : "default",
                "flex-wrap" : "nowrap",
                "iconClass" : "widgets-flexcontainer",
                "isLocked" : true,
                "justify-content" : "flex-start",
                "positioning" : "responsive",
                "userCannotRemove" : false
              },
              "Widgets" : [ {
                "Properties" : {
                  "Area" : "UI",
                  "DisplayName" : "webframe-51",
                  "Height" : 200,
                  "Id" : "webframe-51",
                  "LastContainer" : false,
                  "Left" : 64,
                  "ResponsiveLayout" : true,
                  "ShowDataLoading" : true,
                  "Top" : 151,
                  "Type" : "webframe",
                  "URL" : "",
                  "Visible" : true,
                  "Width" : 200,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Web Frame"
                },
                "Widgets" : [ ]
              } ]
            }, {
              "Properties" : {
                "Area" : "UI",
                "DisplayName" : "container-37",
                "EnableExpandCollapse" : false,
                "ExpandCollapseTabLocation" : "inside",
                "Expanded" : true,
                "Id" : "flexcontainer-37",
                "LastContainer" : false,
                "Overlay" : false,
                "ResponsiveLayout" : true,
                "ShowDataLoading" : true,
                "ShowExpandCollapseTab" : false,
                "SourceURL" : "",
                "Style" : "DefaultContainerStyle",
                "StyleProperties" : { },
                "Type" : "flexcontainer",
                "UseTheme" : true,
                "Visible" : true,
                "Z-index" : 10,
                "__TypeDisplayName" : "Responsive Container",
                "align-content" : "flex-start",
                "align-items" : "flex-start",
                "flex-basis" : "auto",
                "flex-direction" : "row",
                "flex-grow" : 1,
                "flex-max-height" : "74px",
                "flex-max-width" : "",
                "flex-min-height" : "74px",
                "flex-min-width" : "",
                "flex-shrink" : 1,
                "flex-size" : "fixed",
                "flex-wrap" : "nowrap",
                "iconClass" : "widgets-flexcontainer-fixed",
                "isLocked" : false,
                "justify-content" : "flex-start",
                "positioning" : "responsive",
                "userCannotRemove" : false
              },
              "Widgets" : [ {
                "Properties" : {
                  "Area" : "UI",
                  "AutoScroll" : true,
                  "CellBorderStyle" : "DefaultGridAdvancedCellBorderStyle",
                  "CellValidationErrorStyle" : "DefaultGridAdvancedCellValidationErrorStyle",
                  "CellValidationErrorTooltipStyle" : "DefaultGridAdvancedCellValidationErrorTooltipStyle",
                  "Configuration" : "",
                  "ConfigurationId" : 0,
                  "CookiePersistence" : true,
                  "DataOverflow" : "clipped",
                  "DefaultSelectedRows" : "",
                  "DisplayName" : "gridadvanced-43",
                  "DisplayOnlyMode" : false,
                  "EditButtonsLocation" : "top-right",
                  "EnableAddDeleteButtons" : false,
                  "EnableCallbackOnSelectedRowsChange" : true,
                  "EnableContextMenu" : true,
                  "EnableEditButtons" : false,
                  "EnableFilterEventOnConfigChange" : true,
                  "EnableFooter" : false,
                  "EnableGridReset" : false,
                  "EnableGridSearch" : false,
                  "EnableKeyboardNavigation" : true,
                  "EnableSorting" : false,
                  "FocusStyle" : "DefaultFocusStyle",
                  "GridResetButtonLocation" : "top-right",
                  "GridSearchLocation" : "top-left",
                  "HeaderOverflow" : "tooltip",
                  "Height" : 200,
                  "IDFieldName" : "id",
                  "Id" : "gridadvanced-43",
                  "IsEditable" : false,
                  "LastContainer" : false,
                  "Left" : 94.03125,
                  "MaxHeaderHeight" : 100,
                  "MinRowHeight" : 30,
                  "ResponsiveLayout" : true,
                  "RowAlternateBackgroundStyle" : "DefaultGridAdvancedRowAlternateBackgroundStyle",
                  "RowBackgroundStyle" : "DefaultGridAdvancedRowBackgroundStyle",
                  "RowBorderStyle" : "DefaultGridAdvancedRowBorderStyle",
                  "RowFormat_StateParameters" : [ ],
                  "RowHoverStyle" : "DefaultGridAdvancedRowHoverStyle",
                  "RowSelectedStyle" : "DefaultGridAdvancedRowSelectedStyle",
                  "RowSelection" : "none",
                  "SelectedRows" : "",
                  "ShowDataLoading" : true,
                  "SortAscendingStyle" : "DefaultSortAscendingStyle",
                  "SortDescendingStyle" : "DefaultSortDescendingStyle",
                  "TableFooterStyle" : "DefaultGridAdvancedFooterStyle",
                  "TableHeaderStyle" : "DefaultGridAdvancedHeaderStyle",
                  "TableWrapperStyle" : "DefaultGridAdvancedWrapperStyle",
                  "ToolbarStyle" : "DefaultToolbarStyle",
                  "TooltipStyle" : "DefaultTooltipStyle",
                  "Top" : 51,
                  "Type" : "gridadvanced",
                  "UseTheme" : false,
                  "Visible" : true,
                  "Width" : 400,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Grid Advanced"
                },
                "Widgets" : [ ]
              } ]
            } ]
          } ]
        }, {
          "Properties" : {
            "Area" : "UI",
            "DisplayName" : "ptcs-dynamicpanel-17 #2",
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "Expanded" : true,
            "Id" : "flexcontainer-19",
            "LastContainer" : false,
            "Overlay" : false,
            "ResponsiveLayout" : true,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Responsive Container",
            "align-content" : "flex-start",
            "align-items" : "flex-start",
            "flex-basis" : "auto",
            "flex-direction" : "column",
            "flex-grow" : 1,
            "flex-max-height" : "",
            "flex-max-width" : "",
            "flex-min-height" : "",
            "flex-min-width" : "",
            "flex-shrink" : 1,
            "flex-size" : "default",
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer",
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : true
          },
          "Widgets" : [ {
            "Properties" : {
              "Area" : "UI",
              "DisplayName" : "container-24",
              "EnableExpandCollapse" : false,
              "ExpandCollapseTabLocation" : "inside",
              "Expanded" : true,
              "Id" : "flexcontainer-24",
              "LastContainer" : false,
              "Overlay" : false,
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "ShowExpandCollapseTab" : false,
              "SourceURL" : "",
              "Style" : "DefaultContainerStyle",
              "StyleProperties" : { },
              "Type" : "flexcontainer",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Responsive Container",
              "align-content" : "flex-start",
              "align-items" : "flex-end",
              "flex-basis" : "auto",
              "flex-direction" : "row",
              "flex-grow" : 1,
              "flex-max-height" : "75px",
              "flex-max-width" : "",
              "flex-min-height" : "75px",
              "flex-min-width" : "",
              "flex-shrink" : 1,
              "flex-size" : "fixed",
              "flex-wrap" : "nowrap",
              "iconClass" : "widgets-flexcontainer-fixed",
              "isLocked" : false,
              "justify-content" : "flex-start",
              "positioning" : "responsive",
              "userCannotRemove" : false
            },
            "Widgets" : [ {
              "Properties" : {
                "Alignment" : "left",
                "AllLabel" : "[[all]]",
                "Area" : "UI",
                "AutoSelectFirstRow" : false,
                "ClearSelectedItemsLabel" : "[[clearSelectedItems]]",
                "ClearSelectionItem" : true,
                "ClearSelectionLabel" : "(None)",
                "Disabled" : false,
                "DisplayField" : "Name",
                "DisplayFieldBaseType" : "STRING",
                "DisplayName" : "ptcs-dropdown-25",
                "FilterHintText" : "Filter",
                "HintText" : "Select...",
                "Id" : "ptcsdropdown-25",
                "ItemMeta" : {
                  "type" : "text"
                },
                "Label" : "機種選択",
                "LabelAlignment" : "left",
                "LastContainer" : false,
                "Left" : 144.03125,
                "ListFormat_StateParameters" : [ ],
                "Margin" : "5",
                "MultiSelect" : false,
                "ResponsiveLayout" : false,
                "RowHeight" : 34,
                "SelectAllLabel" : "[[selectAll]]",
                "SelectedLabel" : "[[selected]]",
                "ShowDataLoading" : true,
                "ShowListFilter" : false,
                "TabSequence" : 0,
                "Top" : 26,
                "Type" : "ptcsdropdown",
                "UseTheme" : true,
                "ValueField" : "Name",
                "Visible" : true,
                "Width" : 203,
                "Z-index" : 10,
                "__TypeDisplayName" : "DropDown"
              },
              "Widgets" : [ ]
            }, {
              "Properties" : {
                "Area" : "UI",
                "ButtonType" : "primary",
                "ContextID" : "",
                "Disabled" : false,
                "DisplayName" : "ptcs-button-22",
                "Id" : "ptcsbutton-22",
                "Label" : "選択",
                "LabelAlignment" : "center",
                "LastContainer" : false,
                "Left" : 179.03125,
                "Margin" : "5",
                "ResponsiveLayout" : false,
                "ShowDataLoading" : true,
                "TabSequence" : 0,
                "Top" : 11,
                "Type" : "ptcsbutton",
                "UseTheme" : true,
                "Visible" : true,
                "Z-index" : 10,
                "__TypeDisplayName" : "Button"
              },
              "Widgets" : [ ]
            } ]
          }, {
            "Properties" : {
              "Area" : "UI",
              "DisplayName" : "container-23",
              "EnableExpandCollapse" : false,
              "ExpandCollapseTabLocation" : "inside",
              "Expanded" : true,
              "Id" : "flexcontainer-23",
              "LastContainer" : true,
              "Overlay" : false,
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "ShowExpandCollapseTab" : false,
              "SourceURL" : "",
              "Style" : "DefaultContainerStyle",
              "StyleProperties" : { },
              "Type" : "flexcontainer",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Responsive Container",
              "align-content" : "flex-start",
              "align-items" : "flex-start",
              "flex-basis" : "auto",
              "flex-direction" : "row",
              "flex-grow" : 1,
              "flex-max-height" : "",
              "flex-max-width" : "",
              "flex-min-height" : "",
              "flex-min-width" : "",
              "flex-shrink" : 1,
              "flex-size" : "default",
              "flex-wrap" : "nowrap",
              "iconClass" : "widgets-flexcontainer",
              "isLocked" : true,
              "justify-content" : "flex-start",
              "positioning" : "responsive",
              "userCannotRemove" : false
            },
            "Widgets" : [ {
              "Properties" : {
                "Alignment" : "left",
                "Area" : "UI",
                "AutoSelectFirstRow" : true,
                "ClearSelectedItemsLabel" : "[[clearSelectedItems]]",
                "ClearSelectionItem" : true,
                "ClearSelectionLabel" : "(None)",
                "Disabled" : false,
                "DisplayField" : "Name",
                "DisplayFieldBaseType" : "STRING",
                "DisplayName" : "ptcs-list-44",
                "FilterHintText" : "Filter",
                "Height" : 170,
                "Id" : "ptcslist-44",
                "ItemMeta" : {
                  "type" : "text"
                },
                "Label" : "List",
                "LabelAlignment" : "left",
                "LastContainer" : false,
                "Left" : 74.00567626953125,
                "ListFormat_StateParameters" : [ ],
                "MultiSelect" : false,
                "ResponsiveLayout" : true,
                "RowHeight" : 34,
                "SelectAllLabel" : "[[selectAll]]",
                "ShowDataLoading" : true,
                "ShowListFilter" : false,
                "TabSequence" : 0,
                "Top" : 126.54830169677734,
                "Type" : "ptcslist",
                "UseTheme" : true,
                "ValueField" : "ID",
                "Visible" : true,
                "Width" : 273,
                "Z-index" : 10,
                "__TypeDisplayName" : "List"
              },
              "Widgets" : [ ]
            } ]
          } ]
        } ]
      } ]
    }, {
      "Properties" : {
        "Area" : "UI",
        "AutoEvaluate" : true,
        "DataChangeType" : "ALWAYS",
        "DisplayName" : "GetDWGNo",
        "Expression" : "Output = dwgno !== undefined ? dwgno.slice(0, -3) : \"\";",
        "FireOnFirstValue" : false,
        "Height" : 28,
        "Id" : "expression-49",
        "LastContainer" : false,
        "Left" : null,
        "OutputBaseType" : "STRING",
        "ResponsiveLayout" : false,
        "ShowDataLoading" : true,
        "Top" : null,
        "Type" : "expression",
        "Visible" : true,
        "Width" : 200,
        "Z-index" : 10,
        "__TypeDisplayName" : "Expression",
        "_currentParameterDefs" : [ {
          "BaseType" : "STRING",
          "Description" : "",
          "ParameterName" : "dwgno",
          "bindingDirection" : "Target",
          "bindingType" : "Property",
          "isBindingSource" : false,
          "isBindingTarget" : true,
          "shown" : true
        } ]
      },
      "Widgets" : [ ]
    } ]
  },
  "mashupType" : "mashup"
}]]></mashupContent><preview/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated&#10;" timestamp="2023-08-18T01:06:52.414Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:09:07.047Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:09:39.396Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:11:33.233Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:15:29.745Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:17:40.169Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:19:52.280Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:20:55.553Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:22:16.642Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:22:35.477Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:25:11.664Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:26:01.198Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:29:09.574Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:31:32.991Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:32:07.636Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:32:46.259Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:33:15.547Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:37:10.918Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:38:27.893Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:39:04.528Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:39:55.410Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:40:17.341Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:40:37.018Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:41:30.834Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:42:15.748Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-08-18T01:43:07.995Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:10:51.456Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:16:42.815Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:17:11.165Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:17:59.598Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:19:40.921Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:32:25.651Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:33:28.206Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:34:21.295Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:35:45.723Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:47:34.785Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:48:11.324Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:48:45.247Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:53:55.865Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:56:22.066Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:57:49.192Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T00:59:07.643Z" user="wcadmin"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2023-09-01T08:13:07.495Z" user="pm"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2023-09-01T08:27:48.420Z" user="wcadmin"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="ForceEdit" timestamp="2023-09-01T08:31:29.694Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T08:31:29.772Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T08:44:24.590Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T08:47:26.462Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T08:51:01.831Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T08:51:17.660Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T08:53:53.377Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T09:01:18.827Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T09:02:00.281Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T09:18:36.157Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T09:20:45.785Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T10:04:06.300Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-01T10:17:14.919Z" user="wcadmin"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-09-03T09:13:01.407Z" user="pat"/></ConfigurationChanges></Mashup><Mashup aspect.isFlex="true" aspect.isResponsive="true" aspect.mashupType="mashup" columns="0.0" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-09-03T09:41:58.931Z" name="JE.BomDrawingSearch2.Mash" projectName="JE" rows="0.0" tags=""><Owner name="pat" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables><ConfigurationTable dataShapeName="" description="Mashup Mobile Settings" isHidden="true" isMultiRow="false" name="MobileSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="false" aspect.friendlyName="Disable Zoom" baseType="BOOLEAN" description="Disables zooming in and out within the mashup" name="disableZoom" ordinal="0"/><FieldDefinition aspect.defaultValue="true" aspect.friendlyName="Full Screen Mode" baseType="BOOLEAN" description="Open the mashup in full screen mode" name="fullScreenMode" ordinal="0"/><FieldDefinition aspect.friendlyName="Height" baseType="STRING" description="The height of the mashup page" name="height" ordinal="0"/><FieldDefinition aspect.defaultValue="device-height" aspect.friendlyName="Height Type" baseType="STRING" description="Use the height of the device display, or a custom height (in px)" name="heightType" ordinal="0"/><FieldDefinition aspect.defaultValue="1.0" aspect.friendlyName="Initial Scale" baseType="NUMBER" description="The initial zoom scale when the mashup is loaded for the first time" name="initialScale" ordinal="0"/><FieldDefinition aspect.friendlyName="Shortcut Icon Title" baseType="STRING" description="A title for the mashup shortcut on the iOS home screen" name="iosShortcutIconTitle" ordinal="0"/><FieldDefinition aspect.defaultValue="black-translucent" aspect.friendlyName="Status Bar Appearance" baseType="STRING" description="The style of the iOS status bar" name="iosStatusBarAppearance" ordinal="0"/><FieldDefinition aspect.defaultValue="10.0" aspect.friendlyName="Maximum Scale" baseType="NUMBER" description="The maximum scale that users can zoom out to" name="maximumScale" ordinal="0"/><FieldDefinition aspect.defaultValue="0.1" aspect.friendlyName="Minimum Scale" baseType="NUMBER" description="The minimum scale that users can zoom out to" name="minimumScale" ordinal="0"/><FieldDefinition aspect.friendlyName="Width" baseType="STRING" description="The width of the mashup page" name="width" ordinal="0"/><FieldDefinition aspect.defaultValue="device-width" aspect.friendlyName="Width Type" baseType="STRING" description="Use the width of the device display, or a custom width (in px)" name="widthType" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><disableZoom>false</disableZoom><fullScreenMode>true</fullScreenMode><height><![CDATA[device-height]]></height><heightType><![CDATA[device-height]]></heightType><initialScale>1.0</initialScale><iosShortcutIconTitle/><iosStatusBarAppearance><![CDATA[black-translucent]]></iosStatusBarAppearance><maximumScale>10.0</maximumScale><minimumScale>0.1</minimumScale><width><![CDATA[device-width]]></width><widthType><![CDATA[device-width]]></widthType></Row></Rows></ConfigurationTable></ConfigurationTables><ParameterDefinitions/><Things/><ThingShapes/><ThingTemplates/><mashupContent><![CDATA[{
  "CustomMashupCss" : "",
  "Data" : {
    "Session" : {
      "DataName" : "Session",
      "EntityName" : "",
      "EntityType" : "Session",
      "Id" : "session",
      "Services" : [ {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "SessionInterface",
        "Name" : "GetGlobalSessionValues",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetGlobalSessionValues"
      } ]
    },
    "Things_LeeJE.WindchillAPI_Base" : {
      "DataName" : "Things_LeeJE.WindchillAPI_Base",
      "EntityName" : "LeeJE.WindchillAPI_Base",
      "EntityType" : "Things",
      "Id" : "c7ecdfc7-2374-4d60-b16b-461081abad47",
      "RefreshInterval" : 0,
      "Services" : [ {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "85b78e04-6688-482b-9259-5ed32088c096",
        "Name" : "GetContextList",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetContextList"
      }, {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "9633400c-001b-40a0-85c9-2d346f9deca5",
        "Name" : "GetVariantSpecificationList",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetVariantSpecificationList"
      }, {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "b43160ea-1f2a-4727-838e-0b223d81acd2",
        "Name" : "getPartStructuresByVariantID",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "getPartStructuresByVariantID"
      }, {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "da86459c-e811-4479-9a51-62a05d51d627",
        "Name" : "GetDWGListByDWGNo",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetDWGListByDWGNo"
      }, {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "02cf565a-361b-4cd4-9ae1-995a9ed69d37",
        "Name" : "GetPrimaryByDocId",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetPrimaryByDocId"
      }, {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "342965df-25cb-471d-b4b1-03c3fe9bafe5",
        "Name" : "GetThingViewMediaPath",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetThingViewMediaPath"
      } ]
    },
    "UserExtensions" : {
      "DataName" : "UserExtensions",
      "EntityName" : "",
      "EntityType" : "UserExtensions",
      "Id" : "UserExtensions",
      "Services" : [ {
        "APIMethod" : "post",
        "Characteristic" : "Services",
        "Id" : "UserExtensionInterface",
        "Name" : "GetCurrentUserExtensionProperties",
        "Parameters" : { },
        "RefreshInterval" : 0,
        "Target" : "GetCurrentUserExtensionProperties"
      } ]
    }
  },
  "DataBindings" : [ {
    "Id" : "fb56a5a2-781f-49a5-bdc0-5adfa28c63c2",
    "PropertyMaps" : [ {
      "SourceProperty" : "",
      "SourcePropertyBaseType" : "INFOTABLE",
      "SourcePropertyType" : "InfoTable",
      "TargetProperty" : "Data",
      "TargetPropertyBaseType" : "INFOTABLE",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "AllData",
    "SourceId" : "GetContextList",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "ptcsdropdown-25",
    "TargetSection" : ""
  }, {
    "Id" : "62c84dd7-ba40-4582-b587-fc44f0bc0574",
    "PropertyMaps" : [ {
      "SourceProperty" : "SelectedText",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Property",
      "TargetProperty" : "context",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "Parameter"
    } ],
    "SourceArea" : "UI",
    "SourceDetails" : "",
    "SourceId" : "ptcsdropdown-25",
    "SourceSection" : "",
    "TargetArea" : "Data",
    "TargetId" : "GetVariantSpecificationList",
    "TargetSection" : "Things_LeeJE.WindchillAPI_Base"
  }, {
    "Id" : "52f59591-9a32-4939-a98f-9733f5d2e1ad",
    "PropertyMaps" : [ {
      "SourceProperty" : "",
      "SourcePropertyBaseType" : "INFOTABLE",
      "SourcePropertyType" : "InfoTable",
      "TargetProperty" : "Data",
      "TargetPropertyBaseType" : "INFOTABLE",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "AllData",
    "SourceId" : "GetVariantSpecificationList",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "ptcslist-44",
    "TargetSection" : ""
  }, {
    "Id" : "941e7f6d-e818-4eb0-8e2f-fda4e1b2c3ee",
    "PropertyMaps" : [ {
      "SourceProperty" : "SelectedText",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Property",
      "TargetProperty" : "VariantID",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "Parameter"
    } ],
    "SourceArea" : "UI",
    "SourceDetails" : "",
    "SourceId" : "ptcslist-44",
    "SourceSection" : "",
    "TargetArea" : "Data",
    "TargetId" : "getPartStructuresByVariantID",
    "TargetSection" : "Things_LeeJE.WindchillAPI_Base"
  }, {
    "Id" : "193f46b6-f6f8-4827-8788-8a1279f71ed5",
    "PropertyMaps" : [ {
      "SourceProperty" : "Name",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Field",
      "TargetProperty" : "Text",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "SelectedRows",
    "SourceId" : "GetVariantSpecificationList",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "ptcstextfield-33",
    "TargetSection" : ""
  }, {
    "Id" : "933fa188-5df2-4a7c-b47f-527adff60bbe",
    "PropertyMaps" : [ {
      "SourceProperty" : "",
      "SourcePropertyBaseType" : "INFOTABLE",
      "SourcePropertyType" : "InfoTable",
      "TargetProperty" : "Data",
      "TargetPropertyBaseType" : "INFOTABLE",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "AllData",
    "SourceId" : "getPartStructuresByVariantID",
    "SourceName" : "getPartStructuresByVariantID",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "treegridadvanced-45",
    "TargetSection" : ""
  }, {
    "Id" : "dbcc80ad-bff1-46b1-8071-09e41c2fe7a5",
    "PropertyMaps" : [ {
      "SourceProperty" : "DWGBRNNO",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Field",
      "TargetProperty" : "dwgno",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "SelectedRows",
    "SourceId" : "getPartStructuresByVariantID",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "expression-49",
    "TargetSection" : ""
  }, {
    "Id" : "9b668a7d-263d-4de0-85eb-323aa86950aa",
    "PropertyMaps" : [ {
      "SourceProperty" : "Output",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Property",
      "TargetProperty" : "Text",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "UI",
    "SourceId" : "expression-49",
    "SourceSection" : "",
    "TargetArea" : "UI",
    "TargetId" : "ptcstextfield-38",
    "TargetSection" : ""
  }, {
    "Id" : "8d1d82f9-4958-464e-980a-5ab5846ad0ed",
    "PropertyMaps" : [ {
      "SourceProperty" : "",
      "SourcePropertyBaseType" : "INFOTABLE",
      "SourcePropertyType" : "InfoTable",
      "TargetProperty" : "Data",
      "TargetPropertyBaseType" : "INFOTABLE",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "AllData",
    "SourceId" : "GetDWGListByDWGNo",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "ptcsdropdown-39",
    "TargetSection" : ""
  }, {
    "Id" : "19292062-bd9c-4b73-9b02-4b9c0ce8302f",
    "PropertyMaps" : [ {
      "SourceProperty" : "Output",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Property",
      "TargetProperty" : "objectId",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "Parameter"
    } ],
    "SourceArea" : "UI",
    "SourceId" : "expression-49",
    "SourceSection" : "",
    "TargetArea" : "Data",
    "TargetId" : "GetDWGListByDWGNo",
    "TargetSection" : "Things_LeeJE.WindchillAPI_Base"
  }, {
    "Id" : "fb7eaafd-c8ec-49cd-83cb-15f9530d5633",
    "PropertyMaps" : [ {
      "SourceProperty" : "SelectedText",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Property",
      "TargetProperty" : "objectId",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "Parameter"
    } ],
    "SourceArea" : "UI",
    "SourceDetails" : "",
    "SourceId" : "ptcsdropdown-39",
    "SourceSection" : "",
    "TargetArea" : "Data",
    "TargetId" : "GetPrimaryByDocId",
    "TargetSection" : "Things_LeeJE.WindchillAPI_Base"
  }, {
    "Id" : "ee2e9867-cbc8-492b-934a-1465a2c51a08",
    "PropertyMaps" : [ {
      "SourceProperty" : "PartNumber",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Field",
      "TargetProperty" : "number",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "Parameter"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "SelectedRows",
    "SourceId" : "getPartStructuresByVariantID",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "Data",
    "TargetId" : "GetThingViewMediaPath",
    "TargetSection" : "Things_LeeJE.WindchillAPI_Base"
  }, {
    "Id" : "b7501815-75a7-49d8-8ebf-3420485bceb5",
    "PropertyMaps" : [ {
      "SourceProperty" : "result",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Field",
      "TargetProperty" : "Input2",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "AllData",
    "SourceId" : "GetThingViewMediaPath",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "eventsrouter-53",
    "TargetSection" : ""
  }, {
    "Id" : "ea0d2db3-b227-403e-8528-bed2a9864ddc",
    "PropertyMaps" : [ {
      "SourceProperty" : "result",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Field",
      "TargetProperty" : "Input1",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "Data",
    "SourceDetails" : "AllData",
    "SourceId" : "GetPrimaryByDocId",
    "SourceSection" : "Things_LeeJE.WindchillAPI_Base",
    "TargetArea" : "UI",
    "TargetId" : "eventsrouter-53",
    "TargetSection" : ""
  }, {
    "Id" : "c144c85b-0ec0-4a5d-b0df-bdeba30b7d8c",
    "PropertyMaps" : [ {
      "SourceProperty" : "Output",
      "SourcePropertyBaseType" : "STRING",
      "SourcePropertyType" : "Property",
      "TargetProperty" : "ProductToView",
      "TargetPropertyBaseType" : "STRING",
      "TargetPropertyType" : "property"
    } ],
    "SourceArea" : "UI",
    "SourceId" : "eventsrouter-53",
    "SourceSection" : "",
    "TargetArea" : "UI",
    "TargetId" : "thingview-52",
    "TargetSection" : ""
  } ],
  "DesignTimePermissions" : { },
  "Events" : [ {
    "EventHandlerArea" : "Data",
    "EventHandlerId" : "Things_LeeJE.WindchillAPI_Base",
    "EventHandlerService" : "GetContextList",
    "EventTriggerArea" : "Mashup",
    "EventTriggerEvent" : "Loaded",
    "EventTriggerId" : "mashup-root",
    "EventTriggerSection" : "",
    "Id" : "a38e7b9e-640d-43b5-9326-2d88a6113e31"
  }, {
    "EventHandlerArea" : "Data",
    "EventHandlerId" : "Things_LeeJE.WindchillAPI_Base",
    "EventHandlerService" : "getPartStructuresByVariantID",
    "EventTriggerArea" : "UI",
    "EventTriggerEvent" : "Clicked",
    "EventTriggerId" : "ptcsbutton-34",
    "EventTriggerSection" : "",
    "Id" : "b2aea142-7405-40db-a92a-010fb1d89acd"
  }, {
    "EventHandlerArea" : "Data",
    "EventHandlerId" : "Things_LeeJE.WindchillAPI_Base",
    "EventHandlerService" : "GetVariantSpecificationList",
    "EventTriggerArea" : "UI",
    "EventTriggerEvent" : "Clicked",
    "EventTriggerId" : "ptcsbutton-22",
    "EventTriggerSection" : "",
    "Id" : "0b854864-1e7f-4220-9bd1-0f6db088b15a"
  }, {
    "EventHandlerArea" : "UI",
    "EventHandlerId" : "expression-49",
    "EventHandlerService" : "Evaluate",
    "EventTriggerArea" : "UI",
    "EventTriggerEvent" : "SelectedRowsChanged",
    "EventTriggerId" : "treegridadvanced-45",
    "EventTriggerSection" : "",
    "Id" : "b6a1ad68-6e41-4fd7-a08d-4c19793eb82e"
  }, {
    "EventHandlerArea" : "Data",
    "EventHandlerId" : "Things_LeeJE.WindchillAPI_Base",
    "EventHandlerService" : "GetDWGListByDWGNo",
    "EventTriggerArea" : "UI",
    "EventTriggerEvent" : "Changed",
    "EventTriggerId" : "expression-49",
    "EventTriggerSection" : "",
    "Id" : "82233d95-e2f9-4d1d-8629-e1fa3d75af86"
  }, {
    "EventHandlerArea" : "Data",
    "EventHandlerId" : "Things_LeeJE.WindchillAPI_Base",
    "EventHandlerService" : "GetPrimaryByDocId",
    "EventTriggerArea" : "UI",
    "EventTriggerEvent" : "Clicked",
    "EventTriggerId" : "ptcsbutton-40",
    "EventTriggerSection" : "",
    "Id" : "d5561ec0-c6c1-466b-9cd0-fd461f5a94b7"
  }, {
    "EventHandlerArea" : "Data",
    "EventHandlerId" : "Things_LeeJE.WindchillAPI_Base",
    "EventHandlerService" : "GetThingViewMediaPath",
    "EventTriggerArea" : "UI",
    "EventTriggerEvent" : "Clicked",
    "EventTriggerId" : "ptcsbutton-41",
    "EventTriggerSection" : "",
    "Id" : "158700b2-6bd4-4bc6-9eaa-a3075c8ff01d"
  } ],
  "Reminders" : [ ],
  "RunTimePermissions" : { },
  "UI" : {
    "Properties" : {
      "AddToDashboardButton" : "SimplePlus",
      "AddToDashboardButtonStyle" : "DefaultAddToDashboardButtonStyle",
      "Area" : "Mashup",
      "BGImage" : "",
      "BGImageRepeat" : "no-repeat",
      "BGImageSize" : "auto",
      "Columns" : 0,
      "ConfigureGadgetButton" : "SimpleGear",
      "ConfigureGadgetButtonStyle" : "DefaultConfigureGadgetButtonStyle",
      "DisplayName" : "Mashup",
      "EnableParameterEditing" : false,
      "Height" : 618,
      "Id" : "mashup-root",
      "IgnoreWarningsInViewMashup" : false,
      "IsPrintLayout" : false,
      "Left" : 0,
      "Margin" : "5",
      "MashupResolution" : "1366x768",
      "MashupToEditGadget" : "DefaultMashupToEditGadget",
      "MinHeight" : 0,
      "MinWidth" : 0,
      "ResponsiveLayout" : true,
      "Rows" : 0,
      "ShowDataLoading" : true,
      "Style" : "DefaultMashupStyle",
      "StyleProperties" : {
        "data" : { },
        "meta" : {
          "type" : "WidgetStyler",
          "version" : "1.0"
        }
      },
      "StyleTheme" : "PTC Convergence Theme",
      "Title" : "",
      "TitleBar" : false,
      "TitleBarStyle" : "DefaultTitleBarStyle",
      "TitleBarText" : "Gadget Title Here",
      "Top" : 0,
      "Type" : "mashup",
      "UseMasterTheme" : false,
      "UseTheme" : false,
      "UseThemeForHybrids" : false,
      "Visible" : true,
      "Width" : 1024,
      "Z-index" : 10,
      "__TypeDisplayName" : "Mashup",
      "id_index" : 53,
      "supportsAutoResize" : true
    },
    "Widgets" : [ {
      "Properties" : {
        "Area" : "UI",
        "CollapseTabIcon" : "",
        "DisplayName" : "container-2",
        "EnableContainerUnload" : false,
        "EnableExpandCollapse" : false,
        "ExpandCollapseTabLocation" : "inside",
        "ExpandTabIcon" : "",
        "Expanded" : true,
        "Id" : "flexcontainer-2",
        "LastContainer" : true,
        "LazyLoading" : false,
        "Margin" : "",
        "Overlay" : false,
        "ResponsiveLayout" : true,
        "ShowDataLoading" : true,
        "ShowExpandCollapseTab" : false,
        "SourceURL" : "",
        "Style" : "DefaultContainerStyle",
        "StyleProperties" : { },
        "Type" : "flexcontainer",
        "UseTheme" : true,
        "Visible" : true,
        "Z-index" : 10,
        "__TypeDisplayName" : "Responsive Container",
        "align-content" : "flex-start",
        "align-items" : "flex-start",
        "flex-basis" : "auto",
        "flex-direction" : "row",
        "flex-grow" : 1,
        "flex-max-height" : "",
        "flex-max-width" : "",
        "flex-min-height" : "",
        "flex-min-width" : "",
        "flex-shrink" : 1,
        "flex-size" : "default",
        "flex-wrap" : "nowrap",
        "iconClass" : "widgets-flexcontainer",
        "isLocked" : true,
        "justify-content" : "flex-start",
        "positioning" : "responsive",
        "userCannotRemove" : true
      },
      "Widgets" : [ {
        "Properties" : {
          "AnchorLocation" : "left",
          "AnimationSpeed" : "200ms",
          "Area" : "UI",
          "Behavior" : "push",
          "ClickOutsideToClose" : false,
          "CollapseByDefault" : false,
          "Disabled" : false,
          "DisplayName" : "ptcs-dynamicpanel-17",
          "DynamicPanelType" : "adjustablepanel",
          "FillContainer" : true,
          "Height" : 260,
          "HideDragHandle" : false,
          "HideTriggerButton" : false,
          "Id" : "ptcsdynamicpanel-17",
          "LastContainer" : false,
          "Left" : 199.03125,
          "Margin" : "5",
          "MaxSizeWhenExpanded" : "100%",
          "MinSizeWhenExpanded" : "50",
          "PanelSize" : "380",
          "ResponsiveLayout" : true,
          "ShowDataLoading" : true,
          "SizeWhenCollapsed" : "0",
          "TabSequence" : 0,
          "Top" : 276,
          "TriggerButtonIcon" : "caret",
          "TriggerButtonLocation" : "top",
          "TriggerButtonSide" : "left",
          "TriggerButtonType" : "type1",
          "Type" : "ptcsdynamicpanel",
          "UseTheme" : true,
          "Visible" : true,
          "Width" : 360,
          "Z-index" : 10,
          "__TypeDisplayName" : "Dynamic Panel"
        },
        "Widgets" : [ {
          "Properties" : {
            "Area" : "UI",
            "CollapseTabIcon" : "",
            "DisplayName" : "ptcs-dynamicpanel-17 #1",
            "EnableContainerUnload" : false,
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "ExpandTabIcon" : "",
            "Expanded" : true,
            "Id" : "flexcontainer-18",
            "LastContainer" : false,
            "LazyLoading" : false,
            "Margin" : "",
            "Overlay" : false,
            "ResponsiveLayout" : true,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Responsive Container",
            "align-content" : "flex-start",
            "align-items" : "flex-start",
            "flex-basis" : "auto",
            "flex-direction" : "row",
            "flex-grow" : 1,
            "flex-max-height" : "",
            "flex-max-width" : "",
            "flex-min-height" : "",
            "flex-min-width" : "",
            "flex-shrink" : 1,
            "flex-size" : "default",
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer",
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : true
          },
          "Widgets" : [ {
            "Properties" : {
              "Area" : "UI",
              "CollapseTabIcon" : "",
              "DisplayName" : "container-28",
              "EnableContainerUnload" : false,
              "EnableExpandCollapse" : false,
              "ExpandCollapseTabLocation" : "inside",
              "ExpandTabIcon" : "",
              "Expanded" : true,
              "Id" : "flexcontainer-28",
              "LastContainer" : false,
              "LazyLoading" : false,
              "Margin" : "",
              "Overlay" : false,
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "ShowExpandCollapseTab" : false,
              "SourceURL" : "",
              "Style" : "DefaultContainerStyle",
              "StyleProperties" : { },
              "Type" : "flexcontainer",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Responsive Container",
              "align-content" : "flex-start",
              "align-items" : "flex-start",
              "flex-basis" : "auto",
              "flex-direction" : "column",
              "flex-grow" : 1,
              "flex-max-height" : "",
              "flex-max-width" : "374px",
              "flex-min-height" : "",
              "flex-min-width" : "374px",
              "flex-shrink" : 1,
              "flex-size" : "fixed",
              "flex-wrap" : "nowrap",
              "iconClass" : "widgets-flexcontainer-fixed",
              "isLocked" : false,
              "justify-content" : "flex-start",
              "positioning" : "responsive",
              "userCannotRemove" : false
            },
            "Widgets" : [ {
              "Properties" : {
                "Area" : "UI",
                "CollapseTabIcon" : "",
                "DisplayName" : "container-30",
                "EnableContainerUnload" : false,
                "EnableExpandCollapse" : false,
                "ExpandCollapseTabLocation" : "inside",
                "ExpandTabIcon" : "",
                "Expanded" : true,
                "Id" : "flexcontainer-30",
                "LastContainer" : false,
                "LazyLoading" : false,
                "Margin" : "",
                "Overlay" : false,
                "ResponsiveLayout" : false,
                "ShowDataLoading" : true,
                "ShowExpandCollapseTab" : false,
                "SourceURL" : "",
                "Style" : "DefaultContainerStyle",
                "StyleProperties" : { },
                "Type" : "flexcontainer",
                "UseTheme" : true,
                "Visible" : true,
                "Z-index" : 10,
                "__TypeDisplayName" : "Responsive Container",
                "align-content" : "flex-start",
                "align-items" : "flex-end",
                "flex-basis" : "auto",
                "flex-direction" : "row",
                "flex-grow" : 1,
                "flex-max-height" : "74px",
                "flex-max-width" : "",
                "flex-min-height" : "74px",
                "flex-min-width" : "",
                "flex-shrink" : 1,
                "flex-size" : "fixed",
                "flex-wrap" : "nowrap",
                "iconClass" : "widgets-flexcontainer-fixed",
                "isLocked" : false,
                "justify-content" : "flex-start",
                "positioning" : "responsive",
                "userCannotRemove" : false
              },
              "Widgets" : [ {
                "Properties" : {
                  "Area" : "UI",
                  "Counter" : false,
                  "CriteriaMessage" : "",
                  "CriteriaMessageDetails" : "",
                  "Disabled" : true,
                  "DisplayName" : "ptcs-textfield-33",
                  "Id" : "ptcstextfield-33",
                  "Label" : "選択バリエーション仕様",
                  "LabelAlignment" : "left",
                  "LastContainer" : false,
                  "Left" : 124.03125,
                  "Margin" : "5",
                  "MaxLengthFailureMessage" : "${value} characters is the maximum",
                  "MaxNumberOfCharacters" : 100,
                  "MinLengthFailureMessage" : "${value} characters is the minimum",
                  "Password" : false,
                  "ReadOnly" : false,
                  "RequiredMessage" : "A value is required",
                  "ResponsiveLayout" : false,
                  "ShowClearText" : true,
                  "ShowDataLoading" : true,
                  "ShowValidationCriteria" : false,
                  "ShowValidationFailure" : false,
                  "ShowValidationSuccess" : false,
                  "SuccessMessage" : "",
                  "SuccessMessageDetails" : "",
                  "TabSequence" : 0,
                  "TextAlignment" : "left",
                  "Top" : 26,
                  "Type" : "ptcstextfield",
                  "UseTheme" : true,
                  "ValidationCriteriaIcon" : "cds:icon_info",
                  "ValidationFailureIcon" : "cds:icon_error",
                  "ValidationState" : "undefined",
                  "ValidationSuccessIcon" : "cds:icon_success",
                  "ValueRequired" : false,
                  "Visible" : true,
                  "Width" : 200,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Text Field"
                },
                "Widgets" : [ ]
              }, {
                "Properties" : {
                  "Area" : "UI",
                  "ButtonType" : "primary",
                  "ContextID" : "",
                  "Disabled" : false,
                  "DisplayName" : "ptcs-button-34",
                  "Id" : "ptcsbutton-34",
                  "Label" : "BOM検索",
                  "LabelAlignment" : "center",
                  "LastContainer" : false,
                  "Left" : 219.03125,
                  "Margin" : "5",
                  "MultiLine" : false,
                  "ResponsiveLayout" : false,
                  "ShowDataLoading" : true,
                  "TabSequence" : 0,
                  "Top" : 6,
                  "Type" : "ptcsbutton",
                  "UseTheme" : true,
                  "Visible" : true,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Button"
                },
                "Widgets" : [ ]
              } ]
            }, {
              "Properties" : {
                "Area" : "UI",
                "CollapseTabIcon" : "",
                "DisplayName" : "container-29",
                "EnableContainerUnload" : false,
                "EnableExpandCollapse" : false,
                "ExpandCollapseTabLocation" : "inside",
                "ExpandTabIcon" : "",
                "Expanded" : true,
                "Id" : "flexcontainer-29",
                "LastContainer" : true,
                "LazyLoading" : false,
                "Margin" : "",
                "Overlay" : false,
                "ResponsiveLayout" : false,
                "ShowDataLoading" : true,
                "ShowExpandCollapseTab" : false,
                "SourceURL" : "",
                "Style" : "DefaultContainerStyle",
                "StyleProperties" : { },
                "Type" : "flexcontainer",
                "UseTheme" : true,
                "Visible" : true,
                "Z-index" : 10,
                "__TypeDisplayName" : "Responsive Container",
                "align-content" : "flex-start",
                "align-items" : "flex-start",
                "flex-basis" : "auto",
                "flex-direction" : "row",
                "flex-grow" : 1,
                "flex-max-height" : "",
                "flex-max-width" : "",
                "flex-min-height" : "",
                "flex-min-width" : "",
                "flex-shrink" : 1,
                "flex-size" : "default",
                "flex-wrap" : "nowrap",
                "iconClass" : "widgets-flexcontainer",
                "isLocked" : true,
                "justify-content" : "flex-start",
                "positioning" : "responsive",
                "userCannotRemove" : false
              },
              "Widgets" : [ {
                "Properties" : {
                  "Area" : "UI",
                  "AutoScroll" : true,
                  "CellBorderStyle" : "DefaultGridAdvancedCellBorderStyle",
                  "CellValidationErrorStyle" : "DefaultGridAdvancedCellValidationErrorStyle",
                  "CellValidationErrorTooltipStyle" : "DefaultGridAdvancedCellValidationErrorTooltipStyle",
                  "ColumnFormat" : {
                    "formatInfo" : [ {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "Number",
                      "FormatOptions" : {
                        "FormatString" : "full",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Number",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "Name",
                      "FormatOptions" : {
                        "FormatString" : "full",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Name",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "A.1 (Design)",
                      "FieldName" : "Version",
                      "FormatOptions" : {
                        "FormatString" : "full",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Version",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "Path i.e. /Default/Design",
                      "FieldName" : "FolderLocation",
                      "FormatOptions" : {
                        "FormatString" : "full",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "FolderLocation",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "Usage Link ID",
                      "FieldName" : "ParentId",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "ParentId",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "PartNumber",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "PartNumber",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "200px",
                      "headerTextAlignment" : "left",
                      "hidden" : false,
                      "inLayout" : true
                    }, {
                      "Align" : "left",
                      "AllowEdit" : true,
                      "Description" : "",
                      "FieldName" : "hasChildren",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "BOOLEAN",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "hasChildren",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "TypeIcon.Path",
                      "FieldName" : "TypeIconURL",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "IMAGELINK",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "TypeIconURL",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : false,
                      "inLayout" : true
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "PartUse.Quantity",
                      "FieldName" : "Quantity",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "NUMBER",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Quantity",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : false,
                      "inLayout" : true
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "PartUse.Unit.Display",
                      "FieldName" : "Unit",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Unit",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "Source.Display",
                      "FieldName" : "Source",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Source",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "PartUse.LineNumber",
                      "FieldName" : "LineNumber",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "LineNumber",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "PathId",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "PathId",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "LastModified",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "DATETIME",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "LastModified",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "treeId",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "treeId",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "idPath",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "idPath",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "PartName",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "PartName",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "State.Display",
                      "FieldName" : "State",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "State",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "PVParentTreeId",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "PVParentTreeId",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "CreatedOn",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "DATETIME",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "CreatedOn",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "Type - Number, Name, Version (View)",
                      "FieldName" : "Identity",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Identity",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "PVTreeId",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "PVTreeId",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "oid of part",
                      "FieldName" : "PartId",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "PartId",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "ID",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "ID",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : true,
                      "inLayout" : false
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "DWGBRNNO",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "DWGBRNNO",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : false,
                      "inLayout" : true
                    }, {
                      "Align" : "left",
                      "AllowEdit" : false,
                      "Description" : "",
                      "FieldName" : "Revision",
                      "FormatOptions" : {
                        "FormatString" : "",
                        "formatInfo" : {
                          "StateFormats" : [ ]
                        },
                        "formatText" : "View",
                        "renderer" : "STRING",
                        "roundingEnabled" : true,
                        "showDependentField" : false
                      },
                      "Title" : "Revision",
                      "ValidationExpression" : "",
                      "ValidationMessage" : "",
                      "Width" : "auto",
                      "headerTextAlignment" : "left",
                      "hidden" : false,
                      "inLayout" : true
                    } ]
                  },
                  "Configuration" : "",
                  "ConfigurationId" : 1,
                  "CookiePersistence" : true,
                  "DataOverflow" : "clipped",
                  "DataServiceBindingDef" : {
                    "dataName" : "Things_LeeJE.WindchillAPI_Base",
                    "entityName" : "LeeJE.WindchillAPI_Base",
                    "entityType" : "Things",
                    "sourceId" : "getPartStructuresByVariantID",
                    "target" : "getPartStructuresByVariantID"
                  },
                  "DefaultSelectedRows" : "",
                  "DisableLegacyValidation" : false,
                  "DisplayName" : "treegridadvanced-45",
                  "DisplayOnlyMode" : false,
                  "EditButtonsLocation" : "top-right",
                  "EnableAddDeleteButtons" : false,
                  "EnableCallbackOnSelectedRowsChange" : true,
                  "EnableContainerScroll" : false,
                  "EnableContextMenu" : true,
                  "EnableEditButtons" : false,
                  "EnableFilterEventOnConfigChange" : true,
                  "EnableFooter" : false,
                  "EnableGridReset" : true,
                  "EnableGridSearch" : true,
                  "EnableKeyboardNavigation" : true,
                  "EnableSorting" : false,
                  "ExpandLoadedRows" : true,
                  "ExpandRowOnDoubleClick" : false,
                  "FocusStyle" : "DefaultFocusStyle",
                  "GridResetButtonLocation" : "top-right",
                  "GridSearchLocation" : "top-left",
                  "HasChildrenFieldName" : "hasChildren",
                  "HeaderOverflow" : "tooltip",
                  "Height" : 200,
                  "IDFieldName" : "PVTreeId",
                  "IDPathSeparator" : ":;",
                  "Id" : "treegridadvanced-45",
                  "IncludeRowExpansionParents" : false,
                  "IsEditable" : false,
                  "LastContainer" : false,
                  "Left" : 204,
                  "Margin" : "5",
                  "MaxHeaderHeight" : 100,
                  "MaxRowCacheSize" : 50000,
                  "MinRowHeight" : 30,
                  "ParentIDFieldName" : "PVParentTreeId",
                  "PreserveRowExpansion" : false,
                  "ResponsiveLayout" : true,
                  "RowAlternateBackgroundStyle" : "DefaultGridAdvancedRowAlternateBackgroundStyle",
                  "RowBackgroundStyle" : "DefaultGridAdvancedRowBackgroundStyle",
                  "RowBorderStyle" : "DefaultGridAdvancedRowBorderStyle",
                  "RowCollapseIconStyle" : "DefaultRowCollapseIconStyle",
                  "RowExpansionIconStyle" : "DefaultRowExpansionIconStyle",
                  "RowFormat_StateParameters" : [ ],
                  "RowHoverStyle" : "DefaultGridAdvancedRowHoverStyle",
                  "RowIconStyle" : "DefaultRowIconStyle",
                  "RowSelectedStyle" : "DefaultGridAdvancedRowSelectedStyle",
                  "RowSelection" : "single",
                  "SelectedRows" : "",
                  "ShowDataLoading" : true,
                  "SortAscendingStyle" : "DefaultSortAscendingStyle",
                  "SortDescendingStyle" : "DefaultSortDescendingStyle",
                  "TableFooterStyle" : "DefaultGridAdvancedFooterStyle",
                  "TableHeaderStyle" : "DefaultGridAdvancedHeaderStyle",
                  "TableWrapperStyle" : "DefaultGridAdvancedWrapperStyle",
                  "ToolbarStyle" : "DefaultToolbarStyle",
                  "TooltipStyle" : "DefaultTooltipStyle",
                  "Top" : 81,
                  "Type" : "treegridadvanced",
                  "UseTheme" : false,
                  "Visible" : true,
                  "Width" : 400,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Tree Grid Advanced"
                },
                "Widgets" : [ ]
              } ]
            } ]
          }, {
            "Properties" : {
              "Area" : "UI",
              "CollapseTabIcon" : "",
              "DisplayName" : "container-27",
              "EnableContainerUnload" : false,
              "EnableExpandCollapse" : false,
              "ExpandCollapseTabLocation" : "inside",
              "ExpandTabIcon" : "",
              "Expanded" : true,
              "Id" : "flexcontainer-27",
              "LastContainer" : true,
              "LazyLoading" : false,
              "Margin" : "",
              "Overlay" : false,
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "ShowExpandCollapseTab" : false,
              "SourceURL" : "",
              "Style" : "DefaultContainerStyle",
              "StyleProperties" : { },
              "Type" : "flexcontainer",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Responsive Container",
              "align-content" : "flex-start",
              "align-items" : "flex-start",
              "flex-basis" : "auto",
              "flex-direction" : "column",
              "flex-grow" : 1,
              "flex-max-height" : "",
              "flex-max-width" : "",
              "flex-min-height" : "",
              "flex-min-width" : "",
              "flex-shrink" : 1,
              "flex-size" : "default",
              "flex-wrap" : "nowrap",
              "iconClass" : "widgets-flexcontainer",
              "isLocked" : true,
              "justify-content" : "flex-start",
              "positioning" : "responsive",
              "userCannotRemove" : false
            },
            "Widgets" : [ {
              "Properties" : {
                "Area" : "UI",
                "CollapseTabIcon" : "",
                "DisplayName" : "container-36",
                "EnableContainerUnload" : false,
                "EnableExpandCollapse" : false,
                "ExpandCollapseTabLocation" : "inside",
                "ExpandTabIcon" : "",
                "Expanded" : true,
                "Id" : "flexcontainer-36",
                "LastContainer" : false,
                "LazyLoading" : false,
                "Margin" : "",
                "Overlay" : false,
                "ResponsiveLayout" : false,
                "ShowDataLoading" : true,
                "ShowExpandCollapseTab" : false,
                "SourceURL" : "",
                "Style" : "DefaultContainerStyle",
                "StyleProperties" : { },
                "Type" : "flexcontainer",
                "UseTheme" : true,
                "Visible" : true,
                "Z-index" : 10,
                "__TypeDisplayName" : "Responsive Container",
                "align-content" : "flex-start",
                "align-items" : "flex-end",
                "flex-basis" : "auto",
                "flex-direction" : "row",
                "flex-grow" : 1,
                "flex-max-height" : "83px",
                "flex-max-width" : "",
                "flex-min-height" : "83px",
                "flex-min-width" : "",
                "flex-shrink" : 1,
                "flex-size" : "fixed",
                "flex-wrap" : "nowrap",
                "iconClass" : "widgets-flexcontainer-fixed",
                "isLocked" : false,
                "justify-content" : "flex-start",
                "positioning" : "responsive",
                "userCannotRemove" : false
              },
              "Widgets" : [ {
                "Properties" : {
                  "Area" : "UI",
                  "Counter" : false,
                  "CriteriaMessage" : "",
                  "CriteriaMessageDetails" : "",
                  "Disabled" : true,
                  "DisplayName" : "ptcs-textfield-38",
                  "Id" : "ptcstextfield-38",
                  "Label" : "選択図面",
                  "LabelAlignment" : "left",
                  "LastContainer" : false,
                  "Left" : 69.03125,
                  "Margin" : "5",
                  "MaxLengthFailureMessage" : "${value} characters is the maximum",
                  "MaxNumberOfCharacters" : 100,
                  "MinLengthFailureMessage" : "${value} characters is the minimum",
                  "Password" : false,
                  "ReadOnly" : false,
                  "RequiredMessage" : "A value is required",
                  "ResponsiveLayout" : false,
                  "ShowClearText" : true,
                  "ShowDataLoading" : true,
                  "ShowValidationCriteria" : false,
                  "ShowValidationFailure" : false,
                  "ShowValidationSuccess" : false,
                  "SuccessMessage" : "",
                  "SuccessMessageDetails" : "",
                  "TabSequence" : 0,
                  "TextAlignment" : "left",
                  "Top" : 11,
                  "Type" : "ptcstextfield",
                  "UseTheme" : true,
                  "ValidationCriteriaIcon" : "cds:icon_info",
                  "ValidationFailureIcon" : "cds:icon_error",
                  "ValidationState" : "undefined",
                  "ValidationSuccessIcon" : "cds:icon_success",
                  "ValueRequired" : false,
                  "Visible" : true,
                  "Width" : 273,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Text Field"
                },
                "Widgets" : [ ]
              }, {
                "Properties" : {
                  "Alignment" : "left",
                  "AllLabel" : "[[all]]",
                  "Area" : "UI",
                  "AutoSelectFirstRow" : false,
                  "ClearSelectedItemsLabel" : "[[clearSelectedItems]]",
                  "ClearSelectionItem" : true,
                  "ClearSelectionLabel" : "(None)",
                  "CriteriaMessage" : "",
                  "CriteriaMessageDetails" : "",
                  "Disabled" : false,
                  "DisplayField" : "Identity",
                  "DisplayFieldBaseType" : "STRING",
                  "DisplayName" : "ptcs-dropdown-39",
                  "FilterHintText" : "Filter",
                  "HintText" : "Select...",
                  "Id" : "ptcsdropdown-39",
                  "ItemMeta" : {
                    "type" : "text"
                  },
                  "Label" : "改訂",
                  "LabelAlignment" : "left",
                  "LastContainer" : false,
                  "Left" : 241.03125,
                  "ListFormat_StateParameters" : [ ],
                  "ListMarginTop" : 8,
                  "Margin" : "5",
                  "MultiSelect" : false,
                  "RequiredMessage" : "A selection is required",
                  "ResponsiveLayout" : false,
                  "RowHeight" : 34,
                  "SelectAllLabel" : "[[selectAll]]",
                  "SelectedLabel" : "[[selected]]",
                  "ShowDataLoading" : true,
                  "ShowListFilter" : false,
                  "ShowValidationCriteria" : false,
                  "ShowValidationFailure" : false,
                  "ShowValidationSuccess" : false,
                  "SuccessMessage" : "",
                  "SuccessMessageDetails" : "",
                  "TabSequence" : 0,
                  "Top" : 16,
                  "Type" : "ptcsdropdown",
                  "UseTheme" : true,
                  "ValidationCriteriaIcon" : "cds:icon_info",
                  "ValidationFailureIcon" : "cds:icon_error",
                  "ValidationState" : "undefined",
                  "ValidationSuccessIcon" : "cds:icon_success",
                  "ValueField" : "ID",
                  "ValueRequired" : false,
                  "Visible" : true,
                  "Width" : 120,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "DropDown"
                },
                "Widgets" : [ ]
              }, {
                "Properties" : {
                  "Area" : "UI",
                  "ButtonType" : "primary",
                  "ContextID" : "",
                  "Disabled" : false,
                  "DisplayName" : "ptcs-button-40",
                  "Id" : "ptcsbutton-40",
                  "Label" : "図面",
                  "LabelAlignment" : "center",
                  "LastContainer" : false,
                  "Left" : 439.03125,
                  "Margin" : "5",
                  "MultiLine" : false,
                  "ResponsiveLayout" : false,
                  "ShowDataLoading" : true,
                  "TabSequence" : 0,
                  "Top" : 16,
                  "Type" : "ptcsbutton",
                  "UseTheme" : true,
                  "Visible" : true,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Button"
                },
                "Widgets" : [ ]
              }, {
                "Properties" : {
                  "Area" : "UI",
                  "ButtonType" : "primary",
                  "ContextID" : "",
                  "Disabled" : false,
                  "DisplayName" : "ptcs-button-41",
                  "Id" : "ptcsbutton-41",
                  "Label" : "3Dモデル",
                  "LabelAlignment" : "center",
                  "LastContainer" : false,
                  "Left" : 531.03125,
                  "Margin" : "5",
                  "MultiLine" : false,
                  "ResponsiveLayout" : false,
                  "ShowDataLoading" : true,
                  "TabSequence" : 0,
                  "Top" : 21,
                  "Type" : "ptcsbutton",
                  "UseTheme" : true,
                  "Visible" : true,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Button"
                },
                "Widgets" : [ ]
              } ]
            }, {
              "Properties" : {
                "Area" : "UI",
                "CollapseTabIcon" : "",
                "DisplayName" : "container-35",
                "EnableContainerUnload" : false,
                "EnableExpandCollapse" : false,
                "ExpandCollapseTabLocation" : "inside",
                "ExpandTabIcon" : "",
                "Expanded" : true,
                "Id" : "flexcontainer-35",
                "LastContainer" : true,
                "LazyLoading" : false,
                "Margin" : "",
                "Overlay" : false,
                "ResponsiveLayout" : false,
                "ShowDataLoading" : true,
                "ShowExpandCollapseTab" : false,
                "SourceURL" : "",
                "Style" : "DefaultContainerStyle",
                "StyleProperties" : { },
                "Type" : "flexcontainer",
                "UseTheme" : true,
                "Visible" : true,
                "Z-index" : 10,
                "__TypeDisplayName" : "Responsive Container",
                "align-content" : "flex-start",
                "align-items" : "flex-start",
                "flex-basis" : "auto",
                "flex-direction" : "row",
                "flex-grow" : 1,
                "flex-max-height" : "",
                "flex-max-width" : "",
                "flex-min-height" : "",
                "flex-min-width" : "",
                "flex-shrink" : 1,
                "flex-size" : "default",
                "flex-wrap" : "nowrap",
                "iconClass" : "widgets-flexcontainer",
                "isLocked" : true,
                "justify-content" : "flex-start",
                "positioning" : "responsive",
                "userCannotRemove" : false
              },
              "Widgets" : [ {
                "Properties" : {
                  "AcknowledgeStepText" : "",
                  "AllowCORSCredentials" : false,
                  "AllowClientRedirect" : true,
                  "Area" : "UI",
                  "BackgroundStyle" : "DefaultShapeUnfilledBackgroundStyle",
                  "DataFormatter_StateParameters" : [ ],
                  "DisplayAlternateRep" : false,
                  "DisplayExplodeState" : false,
                  "DisplayFilter" : "{ \"ModelAnnotation\": { \"HiddenByDefault\": true, \"PlanarAnnotation\": true, \"FloatingAnnotation\": false, \"MiscAnnotation\": false, \"ScreenAnnotation\": true } }",
                  "DisplayName" : "thingview-52",
                  "DisplayPlaybackControls" : true,
                  "DisplaySectionCut" : false,
                  "DisplayViewState" : true,
                  "EnablePartDragger" : false,
                  "EnablePartSelection" : true,
                  "EnableWindchillFileCache" : false,
                  "Gnomon" : false,
                  "Height" : 200,
                  "Id" : "thingview-52",
                  "LastContainer" : false,
                  "Left" : 899,
                  "Margin" : "5",
                  "MouseNavigation" : "CREOVIEW",
                  "Orientation" : "",
                  "Orientations" : "ISO1",
                  "PerspectiveHFOV" : 60,
                  "Position" : "",
                  "PreSelectedOccurrencePath" : "",
                  "PrimitivesColor" : "ThingViewDefaultPrimitivesColor",
                  "ProductToView" : "",
                  "ProjectionMode" : "ORTHOGRAPHIC",
                  "ResponsiveLayout" : true,
                  "SelectedParts" : {
                    "dataShape" : {
                      "aspects" : {
                        "isExtension" : true
                      },
                      "avatar" : "",
                      "baseDataShape" : "",
                      "configurationTableDefinitions" : { },
                      "configurationTables" : { },
                      "description" : "Shape represents idpath selection in ThingView",
                      "designTimePermissions" : {
                        "Create" : [ ],
                        "Delete" : [ ],
                        "Metadata" : [ ],
                        "Read" : [ ],
                        "Update" : [ ]
                      },
                      "documentationContent" : "",
                      "effectiveFieldDefinitions" : {
                        "idPath" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "idPath",
                          "ordinal" : 1
                        },
                        "propPath" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "propPath",
                          "ordinal" : 2
                        },
                        "propValue" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "propValue",
                          "ordinal" : 3
                        }
                      },
                      "fieldDefinitions" : {
                        "idPath" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "idPath",
                          "ordinal" : 1
                        },
                        "propPath" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "propPath",
                          "ordinal" : 1
                        },
                        "propValue" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "propValue",
                          "ordinal" : 1
                        }
                      },
                      "homeMashup" : "",
                      "lastModifiedDate" : 1663169269033,
                      "name" : "Selection",
                      "owner" : {
                        "name" : "SuperUser",
                        "type" : "User"
                      },
                      "projectName" : "",
                      "runTimePermissions" : {
                        "permissions" : [ {
                          "EventInvoke" : [ ],
                          "EventSubscribe" : [ ],
                          "PropertyRead" : [ ],
                          "PropertyWrite" : [ ],
                          "ServiceInvoke" : [ ],
                          "resourceName" : "*"
                        } ]
                      },
                      "tags" : [ ],
                      "visibilityPermissions" : {
                        "Visibility" : [ ]
                      }
                    },
                    "rows" : [ ]
                  },
                  "SelectedPartsSelectionMode" : "IDPATH",
                  "SelectionPropertyGroupName" : "",
                  "SelectionPropertyName" : "",
                  "SequenceStepName" : "",
                  "SequenceStepNumber" : "",
                  "ShowDataLoading" : true,
                  "SpinCenter" : false,
                  "ThingViewControls" : true,
                  "Top" : 122.19999694824219,
                  "Type" : "thingview",
                  "Views" : {
                    "dataShape" : {
                      "aspects" : {
                        "isExtension" : true
                      },
                      "avatar" : "",
                      "baseDataShape" : "",
                      "configurationTableDefinitions" : { },
                      "configurationTables" : { },
                      "description" : "Views",
                      "designTimePermissions" : {
                        "Create" : [ ],
                        "Delete" : [ ],
                        "Metadata" : [ ],
                        "Read" : [ ],
                        "Update" : [ ]
                      },
                      "documentationContent" : "Annotations, Viewstates",
                      "effectiveFieldDefinitions" : {
                        "name" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "name",
                          "ordinal" : 1
                        },
                        "partPath" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "partPath",
                          "ordinal" : 4
                        },
                        "type" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "type",
                          "ordinal" : 2
                        },
                        "value" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "value",
                          "ordinal" : 3
                        }
                      },
                      "fieldDefinitions" : {
                        "name" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "name",
                          "ordinal" : 1
                        },
                        "partPath" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "partPath",
                          "ordinal" : 4
                        },
                        "type" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "type",
                          "ordinal" : 2
                        },
                        "value" : {
                          "aspects" : { },
                          "baseType" : "STRING",
                          "description" : "",
                          "name" : "value",
                          "ordinal" : 3
                        }
                      },
                      "homeMashup" : "",
                      "lastModifiedDate" : 1663169269033,
                      "name" : "Views",
                      "owner" : {
                        "name" : "SuperUser",
                        "type" : "User"
                      },
                      "projectName" : "",
                      "runTimePermissions" : {
                        "permissions" : [ {
                          "EventInvoke" : [ ],
                          "EventSubscribe" : [ ],
                          "PropertyRead" : [ ],
                          "PropertyWrite" : [ ],
                          "ServiceInvoke" : [ ],
                          "resourceName" : "*"
                        } ]
                      },
                      "tags" : [ ],
                      "visibilityPermissions" : {
                        "Visibility" : [ ]
                      }
                    },
                    "rows" : [ ]
                  },
                  "Visible" : true,
                  "Width" : 300,
                  "WindchillCacheSize" : 1000,
                  "WindchillSourceData" : true,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "ThingView",
                  "baseUrl" : "",
                  "mapUrl" : "",
                  "markupUrl" : "",
                  "oid" : ""
                },
                "Widgets" : [ ]
              } ]
            }, {
              "Properties" : {
                "Area" : "UI",
                "CollapseTabIcon" : "",
                "DisplayName" : "container-37",
                "EnableContainerUnload" : false,
                "EnableExpandCollapse" : false,
                "ExpandCollapseTabLocation" : "inside",
                "ExpandTabIcon" : "",
                "Expanded" : true,
                "Id" : "flexcontainer-37",
                "LastContainer" : false,
                "LazyLoading" : false,
                "Margin" : "",
                "Overlay" : false,
                "ResponsiveLayout" : true,
                "ShowDataLoading" : true,
                "ShowExpandCollapseTab" : false,
                "SourceURL" : "",
                "Style" : "DefaultContainerStyle",
                "StyleProperties" : { },
                "Type" : "flexcontainer",
                "UseTheme" : true,
                "Visible" : true,
                "Z-index" : 10,
                "__TypeDisplayName" : "Responsive Container",
                "align-content" : "flex-start",
                "align-items" : "flex-start",
                "flex-basis" : "auto",
                "flex-direction" : "row",
                "flex-grow" : 1,
                "flex-max-height" : "74px",
                "flex-max-width" : "",
                "flex-min-height" : "74px",
                "flex-min-width" : "",
                "flex-shrink" : 1,
                "flex-size" : "fixed",
                "flex-wrap" : "nowrap",
                "iconClass" : "widgets-flexcontainer-fixed",
                "isLocked" : false,
                "justify-content" : "flex-start",
                "positioning" : "responsive",
                "userCannotRemove" : false
              },
              "Widgets" : [ {
                "Properties" : {
                  "Area" : "UI",
                  "AutoScroll" : true,
                  "CellBorderStyle" : "DefaultGridAdvancedCellBorderStyle",
                  "CellValidationErrorStyle" : "DefaultGridAdvancedCellValidationErrorStyle",
                  "CellValidationErrorTooltipStyle" : "DefaultGridAdvancedCellValidationErrorTooltipStyle",
                  "Configuration" : "",
                  "ConfigurationId" : 0,
                  "CookiePersistence" : true,
                  "DataOverflow" : "clipped",
                  "DefaultSelectedRows" : "",
                  "DisableLegacyValidation" : false,
                  "DisplayName" : "gridadvanced-43",
                  "DisplayOnlyMode" : false,
                  "EditButtonsLocation" : "top-right",
                  "EnableAddDeleteButtons" : false,
                  "EnableCallbackOnSelectedRowsChange" : true,
                  "EnableContainerScroll" : false,
                  "EnableContextMenu" : true,
                  "EnableEditButtons" : false,
                  "EnableFilterEventOnConfigChange" : true,
                  "EnableFooter" : false,
                  "EnableGridReset" : false,
                  "EnableGridSearch" : false,
                  "EnableKeyboardNavigation" : true,
                  "EnableSorting" : false,
                  "FocusStyle" : "DefaultFocusStyle",
                  "GridResetButtonLocation" : "top-right",
                  "GridSearchLocation" : "top-left",
                  "HeaderOverflow" : "tooltip",
                  "Height" : 200,
                  "IDFieldName" : "id",
                  "Id" : "gridadvanced-43",
                  "IsEditable" : false,
                  "LastContainer" : false,
                  "Left" : 94.03125,
                  "Margin" : "5",
                  "MaxHeaderHeight" : 100,
                  "MinRowHeight" : 30,
                  "ResponsiveLayout" : true,
                  "RowAlternateBackgroundStyle" : "DefaultGridAdvancedRowAlternateBackgroundStyle",
                  "RowBackgroundStyle" : "DefaultGridAdvancedRowBackgroundStyle",
                  "RowBorderStyle" : "DefaultGridAdvancedRowBorderStyle",
                  "RowFormat_StateParameters" : [ ],
                  "RowHoverStyle" : "DefaultGridAdvancedRowHoverStyle",
                  "RowSelectedStyle" : "DefaultGridAdvancedRowSelectedStyle",
                  "RowSelection" : "none",
                  "SelectedRows" : "",
                  "ShowDataLoading" : true,
                  "SortAscendingStyle" : "DefaultSortAscendingStyle",
                  "SortDescendingStyle" : "DefaultSortDescendingStyle",
                  "TableFooterStyle" : "DefaultGridAdvancedFooterStyle",
                  "TableHeaderStyle" : "DefaultGridAdvancedHeaderStyle",
                  "TableWrapperStyle" : "DefaultGridAdvancedWrapperStyle",
                  "ToolbarStyle" : "DefaultToolbarStyle",
                  "TooltipStyle" : "DefaultTooltipStyle",
                  "Top" : 51,
                  "Type" : "gridadvanced",
                  "UseTheme" : false,
                  "Visible" : true,
                  "Width" : 400,
                  "Z-index" : 10,
                  "__TypeDisplayName" : "Grid Advanced"
                },
                "Widgets" : [ ]
              } ]
            } ]
          } ]
        }, {
          "Properties" : {
            "Area" : "UI",
            "CollapseTabIcon" : "",
            "DisplayName" : "ptcs-dynamicpanel-17 #2",
            "EnableContainerUnload" : false,
            "EnableExpandCollapse" : false,
            "ExpandCollapseTabLocation" : "inside",
            "ExpandTabIcon" : "",
            "Expanded" : true,
            "Id" : "flexcontainer-19",
            "LastContainer" : false,
            "LazyLoading" : false,
            "Margin" : "",
            "Overlay" : false,
            "ResponsiveLayout" : true,
            "ShowDataLoading" : true,
            "ShowExpandCollapseTab" : false,
            "SourceURL" : "",
            "Style" : "DefaultContainerStyle",
            "StyleProperties" : { },
            "Type" : "flexcontainer",
            "UseTheme" : true,
            "Visible" : true,
            "Z-index" : 10,
            "__TypeDisplayName" : "Responsive Container",
            "align-content" : "flex-start",
            "align-items" : "flex-start",
            "flex-basis" : "auto",
            "flex-direction" : "column",
            "flex-grow" : 1,
            "flex-max-height" : "",
            "flex-max-width" : "",
            "flex-min-height" : "",
            "flex-min-width" : "",
            "flex-shrink" : 1,
            "flex-size" : "default",
            "flex-wrap" : "nowrap",
            "iconClass" : "widgets-flexcontainer",
            "justify-content" : "flex-start",
            "positioning" : "responsive",
            "userCannotRemove" : true
          },
          "Widgets" : [ {
            "Properties" : {
              "Area" : "UI",
              "CollapseTabIcon" : "",
              "DisplayName" : "container-24",
              "EnableContainerUnload" : false,
              "EnableExpandCollapse" : false,
              "ExpandCollapseTabLocation" : "inside",
              "ExpandTabIcon" : "",
              "Expanded" : true,
              "Id" : "flexcontainer-24",
              "LastContainer" : false,
              "LazyLoading" : false,
              "Margin" : "",
              "Overlay" : false,
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "ShowExpandCollapseTab" : false,
              "SourceURL" : "",
              "Style" : "DefaultContainerStyle",
              "StyleProperties" : { },
              "Type" : "flexcontainer",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Responsive Container",
              "align-content" : "flex-start",
              "align-items" : "flex-end",
              "flex-basis" : "auto",
              "flex-direction" : "row",
              "flex-grow" : 1,
              "flex-max-height" : "75px",
              "flex-max-width" : "",
              "flex-min-height" : "75px",
              "flex-min-width" : "",
              "flex-shrink" : 1,
              "flex-size" : "fixed",
              "flex-wrap" : "nowrap",
              "iconClass" : "widgets-flexcontainer-fixed",
              "isLocked" : false,
              "justify-content" : "flex-start",
              "positioning" : "responsive",
              "userCannotRemove" : false
            },
            "Widgets" : [ {
              "Properties" : {
                "Alignment" : "left",
                "AllLabel" : "[[all]]",
                "Area" : "UI",
                "AutoSelectFirstRow" : false,
                "ClearSelectedItemsLabel" : "[[clearSelectedItems]]",
                "ClearSelectionItem" : true,
                "ClearSelectionLabel" : "(None)",
                "CriteriaMessage" : "",
                "CriteriaMessageDetails" : "",
                "Disabled" : false,
                "DisplayField" : "Name",
                "DisplayFieldBaseType" : "STRING",
                "DisplayName" : "ptcs-dropdown-25",
                "FilterHintText" : "Filter",
                "HintText" : "Select...",
                "Id" : "ptcsdropdown-25",
                "ItemMeta" : {
                  "type" : "text"
                },
                "Label" : "機種選択",
                "LabelAlignment" : "left",
                "LastContainer" : false,
                "Left" : 144.03125,
                "ListFormat_StateParameters" : [ ],
                "ListMarginTop" : 8,
                "Margin" : "5",
                "MultiSelect" : false,
                "RequiredMessage" : "A selection is required",
                "ResponsiveLayout" : false,
                "RowHeight" : 34,
                "SelectAllLabel" : "[[selectAll]]",
                "SelectedLabel" : "[[selected]]",
                "ShowDataLoading" : true,
                "ShowListFilter" : false,
                "ShowValidationCriteria" : false,
                "ShowValidationFailure" : false,
                "ShowValidationSuccess" : false,
                "SuccessMessage" : "",
                "SuccessMessageDetails" : "",
                "TabSequence" : 0,
                "Top" : 26,
                "Type" : "ptcsdropdown",
                "UseTheme" : true,
                "ValidationCriteriaIcon" : "cds:icon_info",
                "ValidationFailureIcon" : "cds:icon_error",
                "ValidationState" : "undefined",
                "ValidationSuccessIcon" : "cds:icon_success",
                "ValueField" : "Name",
                "ValueRequired" : false,
                "Visible" : true,
                "Width" : 203,
                "Z-index" : 10,
                "__TypeDisplayName" : "DropDown"
              },
              "Widgets" : [ ]
            }, {
              "Properties" : {
                "Area" : "UI",
                "ButtonType" : "primary",
                "ContextID" : "",
                "Disabled" : false,
                "DisplayName" : "ptcs-button-22",
                "Id" : "ptcsbutton-22",
                "Label" : "選択",
                "LabelAlignment" : "center",
                "LastContainer" : false,
                "Left" : 179.03125,
                "Margin" : "5",
                "MultiLine" : false,
                "ResponsiveLayout" : false,
                "ShowDataLoading" : true,
                "TabSequence" : 0,
                "Top" : 11,
                "Type" : "ptcsbutton",
                "UseTheme" : true,
                "Visible" : true,
                "Z-index" : 10,
                "__TypeDisplayName" : "Button"
              },
              "Widgets" : [ ]
            } ]
          }, {
            "Properties" : {
              "Area" : "UI",
              "CollapseTabIcon" : "",
              "DisplayName" : "container-23",
              "EnableContainerUnload" : false,
              "EnableExpandCollapse" : false,
              "ExpandCollapseTabLocation" : "inside",
              "ExpandTabIcon" : "",
              "Expanded" : true,
              "Id" : "flexcontainer-23",
              "LastContainer" : true,
              "LazyLoading" : false,
              "Margin" : "",
              "Overlay" : false,
              "ResponsiveLayout" : false,
              "ShowDataLoading" : true,
              "ShowExpandCollapseTab" : false,
              "SourceURL" : "",
              "Style" : "DefaultContainerStyle",
              "StyleProperties" : { },
              "Type" : "flexcontainer",
              "UseTheme" : true,
              "Visible" : true,
              "Z-index" : 10,
              "__TypeDisplayName" : "Responsive Container",
              "align-content" : "flex-start",
              "align-items" : "flex-start",
              "flex-basis" : "auto",
              "flex-direction" : "row",
              "flex-grow" : 1,
              "flex-max-height" : "",
              "flex-max-width" : "",
              "flex-min-height" : "",
              "flex-min-width" : "",
              "flex-shrink" : 1,
              "flex-size" : "default",
              "flex-wrap" : "nowrap",
              "iconClass" : "widgets-flexcontainer",
              "isLocked" : true,
              "justify-content" : "flex-start",
              "positioning" : "responsive",
              "userCannotRemove" : false
            },
            "Widgets" : [ {
              "Properties" : {
                "Alignment" : "left",
                "Area" : "UI",
                "AutoSelectFirstRow" : true,
                "ClearSelectedItemsLabel" : "[[clearSelectedItems]]",
                "ClearSelectionItem" : true,
                "ClearSelectionLabel" : "(None)",
                "CriteriaMessage" : "",
                "CriteriaMessageDetails" : "",
                "Disabled" : false,
                "DisplayField" : "Name",
                "DisplayFieldBaseType" : "STRING",
                "DisplayName" : "ptcs-list-44",
                "FillContainer" : true,
                "FilterHintText" : "Filter",
                "Height" : 170,
                "Id" : "ptcslist-44",
                "ItemMeta" : {
                  "type" : "text"
                },
                "Label" : "List",
                "LabelAlignment" : "left",
                "LastContainer" : false,
                "Left" : 74.00567626953125,
                "ListFormat_StateParameters" : [ ],
                "Margin" : "5",
                "MultiSelect" : false,
                "RequiredMessage" : "A selection is required",
                "ResponsiveLayout" : true,
                "RowHeight" : 34,
                "SelectAllLabel" : "[[selectAll]]",
                "ShowDataLoading" : true,
                "ShowListFilter" : false,
                "ShowValidationCriteria" : false,
                "ShowValidationFailure" : false,
                "ShowValidationSuccess" : false,
                "SuccessMessage" : "",
                "SuccessMessageDetails" : "",
                "TabSequence" : 0,
                "Top" : 126.54830169677734,
                "Type" : "ptcslist",
                "UseTheme" : true,
                "ValidationCriteriaIcon" : "cds:icon_info",
                "ValidationFailureIcon" : "cds:icon_error",
                "ValidationState" : "undefined",
                "ValidationSuccessIcon" : "cds:icon_success",
                "ValueField" : "ID",
                "ValueRequired" : false,
                "Visible" : true,
                "Width" : 273,
                "Z-index" : 10,
                "__TypeDisplayName" : "List"
              },
              "Widgets" : [ ]
            } ]
          } ]
        } ]
      } ]
    }, {
      "Properties" : {
        "Area" : "UI",
        "AutoEvaluate" : true,
        "DataChangeType" : "ALWAYS",
        "DisplayName" : "GetDWGNo",
        "Expression" : "Output = dwgno !== undefined ? dwgno.slice(0, -3) : \"\";",
        "FireOnFirstValue" : false,
        "Height" : 28,
        "Id" : "expression-49",
        "LastContainer" : false,
        "Left" : null,
        "Margin" : "5",
        "OutputBaseType" : "STRING",
        "ResponsiveLayout" : false,
        "ShowDataLoading" : true,
        "Top" : null,
        "Type" : "expression",
        "Visible" : true,
        "Width" : 200,
        "Z-index" : 10,
        "__TypeDisplayName" : "Expression",
        "_currentParameterDefs" : [ {
          "BaseType" : "STRING",
          "Description" : "",
          "ParameterName" : "dwgno",
          "bindingDirection" : "Target",
          "bindingType" : "Property",
          "isBindingSource" : false,
          "isBindingTarget" : true,
          "shown" : true
        } ]
      },
      "Widgets" : [ ]
    }, {
      "Properties" : {
        "Area" : "UI",
        "DataShape" : "",
        "DataType" : "STRING",
        "DisplayName" : "eventThingViewPath",
        "Id" : "eventsrouter-53",
        "LastContainer" : false,
        "Left" : null,
        "Margin" : "5",
        "NumberOfInputs" : "2",
        "ResponsiveLayout" : false,
        "ShowDataLoading" : true,
        "Top" : null,
        "Type" : "eventsrouter",
        "Visible" : true,
        "Z-index" : 10,
        "__TypeDisplayName" : "Events Router"
      },
      "Widgets" : [ ]
    } ]
  },
  "mashupType" : "mashup"
}]]></mashupContent><preview/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated&#10;" timestamp="2023-09-03T08:28:15.726Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-03T08:30:40.926Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-03T08:39:36.354Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-03T08:40:48.110Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-03T08:50:04.348Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-03T08:50:13.053Z" user="wcadmin"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-03T08:53:55.705Z" user="wcadmin"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-09-03T09:13:01.422Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-03T09:27:57.725Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-03T09:40:28.250Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-03T09:41:29.370Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="Mashup : design : updated&#10;" timestamp="2023-09-03T09:41:58.931Z" user="pat"/></ConfigurationChanges></Mashup></Mashups><ScriptFunctionLibraries/><Projects><Project artifactId="" aspect.projectType="Component" dependsOn="{&quot;extensions&quot;:&quot;ptc-thingview-extension:1.71.1,CSVParser_Extensions:4.0.1,PTC-Navigate-View-PLM-App-extension:9.3.4&quot;,&quot;projects&quot;:&quot;&quot;}" description="" documentationContent="" groupId="" homeMashup="" lastModifiedDate="2023-09-03T09:33:55.880Z" minPlatformVersion="" name="JE" packageVersion="1.0.0" projectName="JE" publishResult="" state="DRAFT" tags=""><Owner name="pat" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated&#10;" timestamp="2023-08-18T00:44:47.375Z" user="pm"/><ConfigurationChange changeAction="MODIFY" changeReason="header : dependsOn : updated&#10;" timestamp="2023-09-03T09:03:58.002Z" user="wcadmin"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-09-03T09:13:01.422Z" user="pat"/></ConfigurationChanges></Project></Projects><Users/><DirectoryServices/><Widgets/><MediaEntities/><Groups/><PersistenceProviders/><ModelTags/><LocalizationTables/><Dashboards/><StyleThemes/><DataShapes><DataShape baseDataShape="" description="" documentationContent="" homeMashup="" lastModifiedDate="2023-09-03T09:13:01.407Z" name="GetPdfDrawingLists.DS" projectName="JE" tags=""><Owner name="pat" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><FieldDefinitions><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="DRAWINGNO" ordinal="1"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="ID" ordinal="4"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Name" ordinal="3"/><FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="" name="Number" ordinal="2"/></FieldDefinitions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : name : updated, projectName : updated&#10;" timestamp="2023-08-18T02:46:18.131Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="fields : DRAWINGNO : added, Number : added, Name : added, ID : added&#10;" timestamp="2023-08-18T02:46:43.974Z" user="pat"/><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-09-03T09:13:01.407Z" user="pat"/></ConfigurationChanges></DataShape></DataShapes><Things><Thing description="" documentationContent="" effectiveThingPackage="ConfiguredThing" enabled="true" homeMashup="" identifier="" inheritedValueStream="" lastModifiedDate="2023-09-03T09:13:01.454Z" name="JE.WindchillAPI_Base" projectName="JE" published="false" tags="" thingTemplate="GenericThing" valueStream=""><Owner name="pat" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><ThingShape><PropertyDefinitions><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="ApiTest" ordinal="5"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="https://pp-2210040822yn.portal.ptc.io/Windchill/" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="WindchillUrl" ordinal="2"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="wcadmin" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="WindchillUserId" ordinal="6"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="ptc" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="WindchillUserPassword" ordinal="4"/></PropertyDefinitions><ServiceDefinitions><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="executeThingworxService"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="FilterParentList"><ResultType aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="BOOLEAN" description="" name="Checked1" ordinal="1"/><FieldDefinition baseType="BOOLEAN" description="" name="Checked2" ordinal="2"/><FieldDefinition baseType="BOOLEAN" description="" name="Checked3" ordinal="3"/><FieldDefinition aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="ParentList1" ordinal="4"/><FieldDefinition aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="ParentList2" ordinal="5"/><FieldDefinition aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="ParentList3" ordinal="6"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="Get2DThumbnailURL"><ResultType aspect.dataShape="2DThumbnailURL.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetAttributesList"><ResultType baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetContextList"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetCSRFToken"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetCSVDataFilter"><ResultType aspect.dataShape="CSV.Sample.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="param1" ordinal="1"/><FieldDefinition baseType="STRING" description="" name="param4" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetCSVDataGroup1"><ResultType aspect.dataShape="CSV.Sample.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetCSVDataGroup4"><ResultType aspect.dataShape="CSV.Sample.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetDescribedByDocByObjectId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetDescribedByDocList"><ResultType aspect.dataShape="DescribedByDoc.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetDocLinkByDocID"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="docId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetEcaNumberNameNeeddateByNumber"><ResultType aspect.dataShape="EcaIdNumberNameNeeddate.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetEcaSelectedNumber"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetNavigationCriteria"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="ID" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetParentInfo"><ResultType baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetParentInfoList"><ResultType aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetParentInfosByNumber"><ResultType aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartAttributes"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartAttributesMechanicalPart"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getPartByPartId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartIdByNumber"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartInfo"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartInfoByAttribute"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="2"/><FieldDefinition baseType="STRING" description="" name="PartNumber" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartInfoByNumber"><ResultType aspect.dataShape="PartInfoBasic.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartInfoListByAttributes"><ResultType aspect.dataShape="PartInfoBasic.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="2"/><FieldDefinition baseType="STRING" description="" name="PartNumber" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartInfoSelectedNumber"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartRalatedCadDocSelectedObjectId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartsSelectedObjectId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getPartStructureByPartId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getPartStructureByPartIdCopy"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getPartStructuresByPartId"><ResultType aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartUsedByPartId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPdfDocListByDrawNo"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPdfDrawingList"><ResultType aspect.dataShape="EcaIdNumberNameNeeddate.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetRefDocLinkByDocID"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="docId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetReferencesDocByObjectId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetReferencesDocList"><ResultType aspect.dataShape="ReferencesDoc.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetRelatedCadDocFromPartId"><ResultType aspect.dataShape="RelatedCadDocInfo.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetRepresenIdByPartId"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="PartId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetRepresentationsByobjectId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetThingViewMediaPath"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetValiantPartStructureByPartId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetVariantSpecificationList"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="context" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ImportCSV"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ImportCSVinstDB"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="SK_getPartByPartId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="UpdateApiTest"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="str" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="UpdatePartAttributes"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition></ServiceDefinitions><EventDefinitions/><ServiceMappings/><ServiceImplementations><ServiceImplementation description="" handlerName="Script" name="executeThingworxService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Build Headers
var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["appKey"] = "25cf0909-3844-4213-9645-3465596468e6";
//headerObject["Accept"] = "application/json;odata.metadata=full";
var header = JSON.stringify(headerObject);

//logger.trace("GetPartstructure(header): " + header);

// Build Body
var bodyObject = { str: "ThingWorx Service Test" };
var body = JSON.stringify(bodyObject);

var params = {
	proxyScheme: undefined /* STRING */,
	headers: header /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: "https://pp-2212080214zp.portal.ptc.io:8443/Thingworx/Things/WindchillAPI_Base/Services/UpdateApiTest",
	content: body /* JSON */,
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: undefined /* STRING */,
	domain: undefined /* STRING */,
	username: undefined /* STRING */
};

// result: JSON
var result = Resources["ContentLoaderFunctions"].PostJSON(params);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="FilterParentList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PartStructureDS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "PartStructureDS"
});

if (Checked1 && Checked2 && Checked3) {
    var inter = Resources["InfoTableFunctions"].Intersect({
        columns2:  "Number" /* STRING */,
        columns1: "ID" /* STRING */,
        joinType: undefined /* STRING {"defaultValue":"INNER"} */,
        t1: ParentList1 /* INFOTABLE */,
        t2: ParentList2 /* INFOTABLE */,
        joinColumns1: "ID" /* STRING */,
        joinColumns2: "ID" /* STRING */
    });
    result = Resources["InfoTableFunctions"].Intersect({
        columns2:  "Number" /* STRING */,
        columns1: "ID" /* STRING */,
        joinType: undefined /* STRING {"defaultValue":"INNER"} */,
        t1: inter /* INFOTABLE */,
        t2: ParentList3 /* INFOTABLE */,
        joinColumns1: "ID" /* STRING */,
        joinColumns2: "ID" /* STRING */
    });
} else if (Checked1 && Checked2) {
    result = Resources["InfoTableFunctions"].Intersect({
        columns2:  "Number" /* STRING */,
        columns1: "ID" /* STRING */,
        joinType: undefined /* STRING {"defaultValue":"INNER"} */,
        t1: ParentList1 /* INFOTABLE */,
        t2: ParentList2 /* INFOTABLE */,
        joinColumns1: "ID" /* STRING */,
        joinColumns2: "ID" /* STRING */
    });
} else if (Checked1 && Checked3) {
    result = Resources["InfoTableFunctions"].Intersect({
        columns2:  "Number" /* STRING */,
        columns1: "ID" /* STRING */,
        joinType: undefined /* STRING {"defaultValue":"INNER"} */,
        t1: ParentList1 /* INFOTABLE */,
        t2: ParentList3 /* INFOTABLE */,
        joinColumns1: "ID" /* STRING */,
        joinColumns2: "ID" /* STRING */
    });
} else if (Checked2 && Checked3) {
    result = Resources["InfoTableFunctions"].Intersect({
        columns2:  "Number" /* STRING */,
        columns1: "ID" /* STRING */,
        joinType: undefined /* STRING {"defaultValue":"INNER"} */,
        t1: ParentList2 /* INFOTABLE */,
        t2: ParentList3 /* INFOTABLE */,
        joinColumns1: "ID" /* STRING */,
        joinColumns2: "ID" /* STRING */
    });
} else if (Checked1) {
    result = ParentList1;
} else if (Checked2) {
    result = ParentList2;
} else if (Checked3) {
    result = ParentList3;
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="Get2DThumbnailURL"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetRepresentationsByobjectId({
    objectId: objectId /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "2DThumbnailURL.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(EcaIdNumberNameNeeddate.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.URL = val[i]["TwoDThumbnailURL"]["URL"];
//    obj.Number = val[i]["Number"];
//    obj.Name = val[i]["Name"];
//    obj.NeedDate = val[i]["NeedDate"];    
//    obj.State = val[i]["State"]["Value"];   
    result.AddRow(obj);
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetAttributesList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// /Windchill/sslClientAuth/servlet/rest/tableview/nav.list.part/attributes?wt.effectiveUid=pat
var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	//url: me.WindchillUrl + "sslClientAuth/servlet/rest/tableview/nav.list.part/attributes?wt.effectiveUid=pat",
	url: me.WindchillUrl+ "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')",  //OR:wt.part.WTPart:4609211
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var partInfo = Resources["ContentLoaderFunctions"].GetJSON(params);

//Infotable to hold results
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
  infoTableName: "InfoTable",
  dataShapeName: "PartStructureDS"
});
result.AddRow(partInfo);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetContextList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
//	url: me.WindchillUrl + "servlet/odata/v6/ChangeMgmt/ChangeTasks?$filter=startswith(Number,\'" + number + "\')",
    url: me.WindchillUrl + "servlet/odata/v5/DataAdmin/Containers?%24select=Name&%24count=false",
    timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetCSRFToken"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
    proxyScheme: undefined /* STRING */,
    headers: undefined /* JSON */,
    ignoreSSLErrors: true /* BOOLEAN */,
    useNTLM: undefined /* BOOLEAN */,
    workstation: undefined /* STRING */,
    useProxy: undefined /* BOOLEAN */,
    withCookies: undefined /* BOOLEAN */,
    proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/PTC/GetCSRFToken()" /* STRING */,
    timeout: undefined /* NUMBER */,
    proxyPort: undefined /* INTEGER */,
    password: me.WindchillUserPassword /* STRING */,
    domain: undefined /* STRING */,
    username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response["NonceValue"];
//var result =params;]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetCSVDataFilter"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[if ((param1 !== undefined && param1.length>0) || (param4 !== undefined && param4.length>0)) {
    var query = {
        "sorts": [
            {
                "fieldName": "ID",
                "isAscending": true,
                "isCaseSensitive": true
            }
        ],
        "filters": {
            type: "And",
            filters: [
            ]
        }
    };
    if (param1 !== undefined && param1.length>0) {
        query.filters.filters.push(
                {
                    "fieldName": "Data1",
                    "type": "EQ",
                    "value": param1 
                });
    }
    if (param4 !== undefined && param4.length>0) {
        query.filters.filters.push(
                {
                    "fieldName": "Data4",
                    "type": "EQ",
                    "value": param4 
                });
    }
}
// result: INFOTABLE dataShape: ""
// Warning: Potential Performance issue, since query filter is performed in Memory
let result = Things["CSV.Sample.DT"].QueryDataTableEntries({
	maxItems: undefined /* NUMBER {"defaultValue":500} */,
	values: undefined /* INFOTABLE */,
	query: query /* QUERY */,
	source: undefined /* STRING */,
	tags: undefined /* TAGS */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetCSVDataGroup1"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// result: INFOTABLE dataShape: ""
let result = Things["CSV.Sample.DT"].GetDataTableEntries({
	maxItems: undefined /* NUMBER {"defaultValue":500} */
});
var params = {
  t: result,
    columns: "Data1"
};

// result: INFOTABLE dataShape: "undefined"
result = Resources["InfoTableFunctions"].Distinct(params);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetCSVDataGroup4"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// result: INFOTABLE dataShape: ""
let result = Things["CSV.Sample.DT"].GetDataTableEntries({
	maxItems: undefined /* NUMBER {"defaultValue":500} */
});
var params = {
  t: result,
    columns: "Data4"
};

// result: INFOTABLE dataShape: "undefined"
result = Resources["InfoTableFunctions"].Distinct(params);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetDescribedByDocByObjectId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + objectId + "\')/DescribedBy?$expand=DescribedBy($select=Identity,ID)",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;

//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetDescribedByDocList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
var json =  me.GetDescribedByDocByObjectId({
    objectId: objectId /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "DescribedByDoc.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(DescribedByDoc.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
//logger.warn(JSON.stringify(json));
var val = json["value"];
for (var i = 0; i < val.length; i++) {
    if (val[i]["DescribedBy"]) {
        var obj = {};
        obj.Identity = val[i]["DescribedBy"]["Identity"];   
        obj.ID = val[i]["DescribedBy"]["ID"];     
        result.AddRow(obj);
    }
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetDocLinkByDocID"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/v5/DocMgmt/Documents(\'" + docId + "\')/PrimaryContent",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = "";
if (response.Content) result = response.Content.URL;
//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetEcaNumberNameNeeddateByNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetEcaSelectedNumber({
    number: number /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "EcaIdNumberNameNeeddate.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(EcaIdNumberNameNeeddate.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.ID = val[i]["ID"];
    obj.Number = val[i]["Number"];
    obj.Name = val[i]["Name"];
    obj.NeedDate = val[i]["NeedDate"];    
    obj.State = val[i]["State"]["Value"];   
    result.AddRow(obj);
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetEcaSelectedNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/v6/ChangeMgmt/ChangeTasks?$filter=startswith(Number,\'" + number + "\')",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetNavigationCriteria"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/v3/ProdPlatformMgmt/VariantSpecifications(\'" + ID + "\')/NavigationCriteria",
    timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetParentInfo"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// /Windchill/sslClientAuth/servlet/rest/tableview/nav.list.part/attributes?wt.effectiveUid=pat
////Infotable to hold results
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
  infoTableName: "InfoTable",
  dataShapeName: "PartStructureDS"
});

function getParent(JSONObject) {
    if (JSONObject.value !== undefined && JSONObject.value.length > 0) {      
		result.AddRow(JSONObject.value[0]);
        var parent = me.GetPartUsedByPartId({
            partId: JSONObject.value[0].ID /* STRING */
        });
        getParent(parent);
    }
}

var parent = me.GetPartUsedByPartId({
    partId: partId /* STRING */
});

getParent(parent);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetParentInfoList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// /Windchill/sslClientAuth/servlet/rest/tableview/nav.list.part/attributes?wt.effectiveUid=pat
////Infotable to hold results
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
  infoTableName: "InfoTable",
  dataShapeName: "PartStructureDS"
});

function getParent(JSONObject) {
    if (JSONObject.value !== undefined && JSONObject.value.length > 0) {      
		for (var i=0; i<JSONObject.value.length; i++) {
        	result.AddRow(JSONObject.value[i]);
        }
        var parent = me.GetPartUsedByPartId({
            partId: JSONObject.value[0].ID /* STRING */
        });
        getParent(parent);
    }
}

var parent = me.GetPartUsedByPartId({
    partId: partId /* STRING */
});

getParent(parent);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetParentInfosByNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetPartInfoSelectedNumber({
    number: number /* STRING */
});

var result = me.GetParentInfoList({
	partId: json["value"][0]["ID"] /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartAttributes"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl+ "servlet/odata/ProdMgmt/GetWindchillMetaInfo(EntityName='PTC.ProdMgmt.Part')",  
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var result = Resources["ContentLoaderFunctions"].GetJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartAttributesMechanicalPart"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl+ "servlet/odata/v3/ProdMgmt/GetWindchillMetaInfo(EntityName='PTC.ProdMgmt.MechanicalPart')",  
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var result = Resources["ContentLoaderFunctions"].GetJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="getPartByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[
let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
	url: me.WindchillUrl+ "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')?$select=Name,Number,Version,State,Source,TypeIcon",
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WindchillUserPassword/* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
let result = Resources["ContentLoaderFunctions"].GetJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartIdByNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var json, objId, val, i;
var result;
// オブジェクト番号取得
var getObjectId = function(json) {
    var objectId;
    if ("value" in json) {
        var val = json["value"];
        //logger.trace("value_length:" + val.length);
        for (var i = 0; i < val.length; i++) {
            //if (val[i]["View"] == "E-BOM") {
                objectId = val[i]["ID"];
                break;
            //}
        }
    }
    return objectId;
};

// オブジェクト番号の検索
if (number) {
    // json: JSON
    json =  me.GetPartInfoSelectedNumber({
        number: number /* STRING */
    });
    logger.trace("GetObjectIdFromNumber number:" + number + " json:" + JSON.stringify(json));
    //result = getObjectId(json);
    result = json.value[0].ID;
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartInfo"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["Accept"] = "application/json;odata.metadata=full";
headerObject["Prefer"] = "odata.maxpagesize=10";
//"Prefer" + "odata.maxpagesize=<The number between 1 and 2000>"
var header = JSON.stringify(headerObject);
let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: header /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
	//url: me.WindchillUrl+ "servlet/odata/ProdMgmt/Parts?$select=Name,Number",
	url: me.WindchillUrl+ "servlet/odata/ProdMgmt/Parts?$select=Name,Number&$skiptoken=5",
 	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WindchillUserPassword/* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
let result = Resources["ContentLoaderFunctions"].GetJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartInfoByAttribute"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var query = {
"filters":{
"type": "LT",
"fieldName": "Start_Date",
"value": "2018-11-27T02:55:36Z"
}
};

var result1= Things["WindchillAPI_Base"].QueryDataTableEntries({
values: undefined /* INFOTABLE */,
maxItems: undefined /* NUMBER */,
tags: undefined /* TAGS */,
source: undefined /* STRING */,
query: query /* QUERY */
});


var query1 = {
"filters":{
"type": "GT",
"fieldName": "End_Time",
"value": "2018-11-27T02:55:36Z"
}
};

// Provide your filter using the format as described in the help topic "Query Parameter for Query Services"
var params = {

t: result1 /* INFOTABLE */,

query: query1 /* QUERY */

};
var result2 = Resources["InfoTableFunctions"].Query(params);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartInfoByNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetPartInfoSelectedNumber({
    number: number /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "PartInfoBasic.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(EcaIdNumberNameNeeddate.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.Number = val[i]["Number"];
    obj.Name = val[i]["Name"];
    obj.Version = val[i]["Version"];  
    obj.ID = val[i]["ID"];      
    obj.FolderLocation = val[i]["FolderLocation"];   
    result.AddRow(obj);
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartInfoListByAttributes"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
var json =  me.GetPartInfoByAttribute({
    number: number /* STRING */,
    PartNumber: PartNumber /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "PartInfoBasic.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PartInfoBasic.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
//logger.warn(JSON.stringify(json));

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.Number = val[i]["Number"];
    obj.Name = val[i]["Name"];
    obj.Version = val[i]["Version"];  
    obj.ID = val[i]["ID"];      
    obj.FolderLocation = val[i]["FolderLocation"];   
    result.AddRow(obj);
}

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartInfoSelectedNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/v5/ProdMgmt/Parts?$filter=startswith(Number,\'" + number + "\')",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartRalatedCadDocSelectedObjectId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/v5/ProdMgmt/Parts(\'" + objectId + "\')/PartDocAssociations?&$expand=RelatedCADDoc&$count=false",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;

//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartsSelectedObjectId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + objectId + "\')",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;

//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="getPartStructureByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Build Headers
var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["CSRF_NONCE"] = me.GetCSRFToken();
headerObject["Accept"] = "application/json;odata.metadata=full";
var header = JSON.stringify(headerObject);

// Build Body
var bodyObject = new Object();
var body = JSON.stringify(bodyObject);

var params = {
	proxyScheme: undefined /* STRING */,
	headers: header /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
//	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name,Number,Version,State,Source,TypeIcon),PartUse($select=Quantity,Unit);$levels=max)",
    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part,PartUse;$levels=max)",
	//url: me.WindchillUrl + "servlet/odata/v6/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=*);$levels=max)",
	content: body /* JSON */,
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
var result = Resources["ContentLoaderFunctions"].PostJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="getPartStructureByPartIdCopy"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Build Headers
var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["CSRF_NONCE"] = me.GetCSRFToken();
headerObject["Accept"] = "application/json;odata.metadata=full";
var header = JSON.stringify(headerObject);

// Build Body
var bodyObject = new Object(
{
    "NavigationCriteria" :
{
  "@odata.context": "https://PP-2212080214ZP.portal.ptc.io/Windchill/servlet/odata/v3/NavCriteria/$metadata#NavigationCriterias/$entity",
  "ApplicableType": "PTC.ProdMgmt.Part",
  "ApplicationName": null,
  "ApplyToTopLevelObject": false,
  "Centricity": false,
  "ConfigSpecs": [
    {
      "@odata.type": "#PTC.NavCriteria.WTPartStandardConfigSpec",
      "WorkingIncluded": true,
      "View": "Design",
      "LifeCycleState": null,
      "Variation1": null,
      "Variation2": null
    }
  ],
  "CreatedOn": "2023-07-01T07:27:45Z",
  "Filters": [
    {
      "@odata.type": "#PTC.NavCriteria.OptionFilter",
      "OverrideOptionSetRevision": "OR:com.ptc.windchill.option.model.OptionSet:4444629",
      "OptionFilterConfigSpecs": [
        {
          "@odata.type": "#PTC.NavCriteria.OptionFilterConfigSpec",
          "LifeCycleState": null,
          "LatestActive": true,
          "LifeCycleActive": false,
          "EffActive": false,
          "EffectiveDate": null
        }
      ],
      "FilterMode": {
        "InternalCode": 1,
        "Name": "Standard"
      },
      "ChoiceValues": [
        {
          "ID": "OR:com.ptc.windchill.option.model.Choice:731971",
          "Name": "PRO-S"
        }
      ]
    }
  ],
  "HideUnresolvedDependents": false,
  "LastModified": "2023-07-01T07:27:45Z",
  "Name": "test_lee",
  "SharedToAll": false,
  "UseDefaultForUnresolved": true
}
});

var body = JSON.stringify(bodyObject);

var params = {
	proxyScheme: undefined /* STRING */,
	headers: header /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
//	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name,Number,Version,State,Source,TypeIcon),PartUse($select=Quantity,Unit);$levels=max)",
    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part,PartUse;$levels=max)",
	//url: me.WindchillUrl + "servlet/odata/v6/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=*);$levels=max)",
	content: body /* JSON */,
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
var result = Resources["ContentLoaderFunctions"].PostJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="getPartStructuresByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[
function formatPartStructure(JSONObject) {
    JSONObject.Components.forEach(loopFunction);

    function loopFunction(item) {
        var newTableEntry = {};
        newTableEntry = item; // grab all the "tree" fields
        newTableEntry.Version = item.Part.Version;
        newTableEntry.State = item.Part.State.Display;
        newTableEntry.Source = item.Part.Source.Display;
        newTableEntry.TypeIconURL = item.Part.TypeIcon.Path;
        newTableEntry.Quantity = item.PartUse.Quantity;
        newTableEntry.Unit = item.PartUse.Unit.Display;
        result.AddRow(newTableEntry);
        if (item.Components !== undefined && item.Components.length > 0) {
            formatPartStructure(item);
        }
    }
}

//Infotable to hold results
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
  infoTableName: "InfoTable",
  dataShapeName: "PartStructureDS"
});

if (partId) {
    try {
        // Get Top Node
        var parent =  me.getPartByPartId({
        partId: partId /* STRING */
        });

        // Get Child Node
        var partStructure = me.getPartStructureByPartId({
        	partId: partId /* STRING */
        });    

        //grab some additional fields off the parent
        partStructure.Version = parent.Version;
        partStructure.State = parent.State.Display;
        partStructure.Source = parent.Source.Display;
        partStructure.TypeIconURL = parent.TypeIcon.Path;
        result.AddRow(partStructure); // add the top node by hand
        formatPartStructure(partStructure); // add the children
    } catch (err) {
        throw(err);
    }
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartUsedByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// /Windchill/sslClientAuth/servlet/rest/tableview/nav.list.part/attributes?wt.effectiveUid=pat
var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	//url: me.WindchillUrl + "sslClientAuth/servlet/rest/tableview/nav.list.part/attributes?wt.effectiveUid=pat",
	url: me.WindchillUrl+ "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/UsedBy?$select=ID,Number",  //OR:wt.part.WTPart:4607260
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var result = Resources["ContentLoaderFunctions"].GetJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPdfDocListByDrawNo"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/v5/DocMgmt/Documents?%24filter=startswith(DRAWINGNO,\'" + number + "\')&%24count=false",
//    url: me.WindchillUrl + "servlet/odata/v6/ChangeMgmt/ChangeTasks?$filter=startswith(Number,\'" + number + "\')",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPdfDrawingList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetPdfDocListByDrawNo({
    number: number /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "GetPdfDrawingLists.DS"
};

var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.DRAWINGNO = val[i]["DRAWINGNO"];
    obj.Number = val[i]["Number"];
    obj.Name = val[i]["Name"];
    obj.ID = val[i]["ID"];
    result.AddRow(obj);
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetRefDocLinkByDocID"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/v5/DocMgmt/Documents(\'" + docId + "\')/PrimaryContent",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
//if (response.Content) result = response.Content.URL;
//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetReferencesDocByObjectId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
//	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + objectId + "\')/References?$expand=References($select=Identity,ID)",
    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + objectId + "\')/References?$expand=References",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;

//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetReferencesDocList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetReferencesDocByObjectId({
    objectId: objectId /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "ReferencesDoc.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(ReferencesDoc.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.Identity = val[i]["References"]["Identity"];   
    obj.ID = val[i]["References"]["ID"];     
    result.AddRow(obj);
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetRelatedCadDocFromPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetPartRalatedCadDocSelectedObjectId({
    objectId: objectId /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "RelatedCadDocInfo.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(EcaIdNumberNameNeeddate.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.ID = val[i]["RelatedCADDoc"]["ID"];
    obj.FileName = val[i]["RelatedCADDoc"]["FileName"];
    obj.FolderLocation = val[i]["RelatedCADDoc"]["FolderLocation"];
    obj.AssociationType = val[i]["AssociationType"]["Value"];  
    result.AddRow(obj);
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetRepresenIdByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var json, objId, val, i, partNo;
var result;

// オブジェクト番号の検索
if (PartId) {
    var params = {
        proxyScheme: undefined /* STRING */,
        headers: undefined /* JSON */,
        ignoreSSLErrors: true /* BOOLEAN */,
        useNTLM: undefined /* BOOLEAN */,
        workstation: undefined /* STRING */,
        useProxy: undefined /* BOOLEAN */,
        withCookies: undefined /* BOOLEAN */,
        proxyHost: undefined /* STRING */,
        url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + PartId + "\')/Representations?%24count=false",
        timeout: undefined /* NUMBER */,
        proxyPort: undefined /* INTEGER */,
        password: me.WindchillUserPassword /* STRING */,
        domain: undefined /* STRING */,
        username: me.WindchillUserId /* STRING */
    };
    // response: JSON
    json = Resources["ContentLoaderFunctions"].GetJSON(params);

    logger.trace("Representation json:" + JSON.stringify(json));
    result = json.value[0].ID;
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetRepresentationsByobjectId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/v3/CADDocumentMgmt/CADDocuments(\'" + objectId + "\')/Representations",   
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;

//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetThingViewMediaPath"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var result;
// オブジェクト番号の検索
if (number) {
    // json: JSON
    json =  me.GetPartInfoSelectedNumber({
        number: number /* STRING */
    });
    var partid = json.value[0].ID;
    var repid = me.GetRepresenIdByPartId({
        PartId: partid /* STRING */
    });
    
    result = "/Thingworx/MediaEntities/Lee.Media/Content//Windchill/servlet/odata/v2/Visualization/Representations(\'" + repid + "\')/PTC.Visualization.GetPVZ(IncludeAnnotations=true)";
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetValiantPartStructureByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Build Headers
var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["CSRF_NONCE"] = me.GetCSRFToken();
headerObject["Accept"] = "application/json;odata.metadata=full";
var header = JSON.stringify(headerObject);

// Build Body
var bodyObject = new Object();
var body = JSON.stringify(bodyObject);

var params = {
	proxyScheme: undefined /* STRING */,
	headers: header /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/v5/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name);$levels=max)",
    //    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name,Number),PartUse($select=Quantity,Unit);$levels=max)",
    //	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name,Number,Version,State,Source,TypeIcon),PartUse($select=Quantity,Unit);$levels=max)",
//    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part,PartUse;$levels=max)",
	//url: me.WindchillUrl + "servlet/odata/v6/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=*);$levels=max)",
	content: body /* JSON */,
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
var result = Resources["ContentLoaderFunctions"].PostJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetVariantSpecificationList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/v3/ProdPlatformMgmt/VariantSpecifications?%24select=Name&%24filter=Context%2FName%20eq%20\'" + context + "\'&%24count=false",
    timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ImportCSV"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var result = "";
try {
    var params = {
        path: "dummy_data.csv" /* STRING */,
        columnMappings: "ID;Data1;Data2;Data3;Data4" /* STRING */,
        //columnMappings: undefined,
        hasHeader: true /* BOOLEAN */,
        longitudeField: undefined /* NUMBER */,
        dateFormat: undefined /* STRING */,
        fileRepository: "LIXIL.Repo" /* THINGNAME */,
        latitudeField: undefined /* NUMBER */,
        fieldDelimiter: "," /* STRING */,
        stringDelimiter: "\"" /* STRING */,
        content: "\n" /* STRING */,
        dataShape: "CSV.Sample.DS" /* DATASHAPENAME */
    };

    // result: INFOTABLE
    var dataList = Resources["CSVParserFunctions"].ReadCSVFile(params);
    logger.warn("ImportCSV json: " + dataList.ToJSON());

    Things["CSV.Sample.DT"].AddDataTableEntries({
        sourceType: undefined /* STRING */,
        values: dataList /* INFOTABLE */,
        location: undefined /* LOCATION */,
        source: undefined /* STRING */,
        tags: undefined /* TAGS */
    });
//    for each (var row in dataList.rows) {
//        // result: NUMBER
//let result = Things["Lee.PG"].InstDB({
//	data2: row.Data1 /* STRING */,
//	data1: row.Data1 /* STRING */
//});
//    }    
    result = dataList.getRowCount() + "件登録しました";
} catch(err) {
    result = err + "エラーが発生しました";
    logger.error(me.name+" ImportCSVList : Unable to ImportCSVList Error: " + err);
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ImportCSVinstDB"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var result = "";
try {
    var params = {
        path: "dummy_data.csv" /* STRING */,
        columnMappings: "ID;Data1;Data2;Data3;Data4" /* STRING */,
        //columnMappings: undefined,
        hasHeader: true /* BOOLEAN */,
        longitudeField: undefined /* NUMBER */,
        dateFormat: undefined /* STRING */,
        fileRepository: "LIXIL.Repo" /* THINGNAME */,
        latitudeField: undefined /* NUMBER */,
        fieldDelimiter: "," /* STRING */,
        stringDelimiter: "\"" /* STRING */,
        content: "\n" /* STRING */,
        dataShape: "CSV.Sample.DS" /* DATASHAPENAME */
    };

    // result: INFOTABLE
    var dataList = Resources["CSVParserFunctions"].ReadCSVFile(params);
    logger.warn("ImportCSV json: " + dataList.ToJSON());

//    Things["CSV.Sample.DT"].AddDataTableEntries({
//        sourceType: undefined /* STRING */,
//        values: dataList /* INFOTABLE */,
//        location: undefined /* LOCATION */,
//        source: undefined /* STRING */,
//        tags: undefined /* TAGS */
//    });
    for each (var row in dataList.rows) {
        // result: NUMBER
let result = Things["Lee.PG"].InstDB({
	data2: row.Data1 /* STRING */,
	data1: row.Data1 /* STRING */
});
    }    
    result = dataList.getRowCount() + "件登録しました";
} catch(err) {
    result = err + "エラーが発生しました";
    logger.error(me.name+" ImportCSVList : Unable to ImportCSVList Error: " + err);
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="SK_getPartByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["Accept"] = "application/json;odata.metadata=full";
headerObject["Prefer"] = "odata.maxpagesize=1";
//"Prefer" + "odata.maxpagesize=<The number between 1 and 2000>"
var header = JSON.stringify(headerObject);

let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: header /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
	url: me.WindchillUrl+ "/servlet/odata/v5/ProdMgmt/Parts?$filter=startswith(Number,'PTC-SKIP')&$select=ID,Number,Name&$skip=2",
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WindchillUserPassword/* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
let result = Resources["ContentLoaderFunctions"].GetJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="UpdateApiTest"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.ApiTest = str;]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="UpdatePartAttributes"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Build Headers
var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["CSRF_NONCE"] = me.GetCSRFToken();
headerObject["Accept"] = "application/json;odata.metadata=full";
headerObject["Lixilpartnumber"] = "BBBBB";
headerObject["@odata.type"] = "#PTC.ProdMgmt.MechanicalPart";
var header = JSON.stringify(headerObject);

// Build Body
var bodyObject = new Object();
var body = JSON.stringify(bodyObject);

var params = {
	proxyScheme: undefined /* STRING */,
	headers: header /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts('OR:wt.part.WTPart:5398261')",    
//	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name,Number,Version,State,Source,TypeIcon),PartUse($select=Quantity,Unit);$levels=max)",
//    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part,PartUse;$levels=max)",
	//url: me.WindchillUrl + "servlet/odata/v6/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=*);$levels=max)",
	content: body /* JSON */,
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
var result = Resources["ContentLoaderFunctions"].PostJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></ServiceImplementations><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations><AlertDefinitions name="ApiTest"/><AlertDefinitions name="WindchillUrl"/><AlertDefinitions name="WindchillUserId"/><AlertDefinitions name="WindchillUserPassword"/></AlertConfigurations><ImplementedShapes/><ThingProperties><WindchillUserId><Value><![CDATA[pat]]></Value><Timestamp>2023-08-18T02:22:58.770Z</Timestamp><Quality>GOOD</Quality></WindchillUserId><WindchillUserPassword><Value><![CDATA[ptc]]></Value><Timestamp>1970-01-01T00:00:00.000Z</Timestamp><Quality>UNKNOWN</Quality></WindchillUserPassword><WindchillUrl><Value><![CDATA[https://pp-2212080214zp.portal.ptc.io/Windchill/]]></Value><Timestamp>2023-08-18T02:22:49.981Z</Timestamp><Quality>GOOD</Quality></WindchillUrl><ApiTest><Value/><Timestamp>2023-09-03T09:13:01.626Z</Timestamp><Quality>GOOD</Quality></ApiTest></ThingProperties><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-09-03T09:13:01.454Z" user="pat"/></ConfigurationChanges></Thing><Thing description="" documentationContent="" effectiveThingPackage="ConfiguredThing" enabled="true" homeMashup="" identifier="" inheritedValueStream="" lastModifiedDate="2023-09-03T09:34:09.172Z" name="LeeJE.WindchillAPI_Base" projectName="JE" published="false" tags="" thingTemplate="GenericThing" valueStream=""><Owner name="pat" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTableDefinitions/><ConfigurationTables/><ThingShape><PropertyDefinitions><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="ApiTest" ordinal="5"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="https://pp-2210040822yn.portal.ptc.io/Windchill/" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="WindchillUrl" ordinal="2"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="wcadmin" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="WindchillUserId" ordinal="6"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.defaultValue="ptc" aspect.isPersistent="true" baseType="STRING" category="" description="" isLocalOnly="false" name="WindchillUserPassword" ordinal="4"/></PropertyDefinitions><ServiceDefinitions><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="DownloadContent"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="/test_lee.pdf" baseType="STRING" description="" name="filepath" ordinal="2"/><FieldDefinition baseType="STRING" description="" name="url" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="executeThingworxService"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="FilterParentList"><ResultType aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="BOOLEAN" description="" name="Checked1" ordinal="1"/><FieldDefinition baseType="BOOLEAN" description="" name="Checked2" ordinal="2"/><FieldDefinition baseType="BOOLEAN" description="" name="Checked3" ordinal="3"/><FieldDefinition aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="ParentList1" ordinal="4"/><FieldDefinition aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="ParentList2" ordinal="5"/><FieldDefinition aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="ParentList3" ordinal="6"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="Get2DThumbnailURL"><ResultType aspect.dataShape="2DThumbnailURL.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetAttributesList"><ResultType baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetContextList"><ResultType aspect.dataShape="DropdowntDS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetCSRFToken"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetCSVDataFilter"><ResultType aspect.dataShape="CSV.Sample.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="param1" ordinal="1"/><FieldDefinition baseType="STRING" description="" name="param4" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetCSVDataGroup1"><ResultType aspect.dataShape="CSV.Sample.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetCSVDataGroup4"><ResultType aspect.dataShape="CSV.Sample.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetDescribedByDocByObjectId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetDescribedByDocList"><ResultType aspect.dataShape="DescribedByDoc.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetDocLinkByDocID"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="docId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetDWGListByDWGNo"><ResultType aspect.dataShape="DescribedByDoc.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetEcaNumberNameNeeddateByNumber"><ResultType aspect.dataShape="EcaIdNumberNameNeeddate.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetEcaSelectedNumber"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetNavigationCriteria"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="ID" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetNavigationCriteriaCondByID"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="NaviID" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetParentInfo"><ResultType baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetParentInfoList"><ResultType aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetParentInfosByNumber"><ResultType aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartAttributes"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartAttributesMechanicalPart"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getPartByPartId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartIdByNumber"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartIDByVariantID"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="OR:com.ptc.wpcfg.doc.VariantSpec:5384955" baseType="STRING" description="" name="VariantID" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartInfo"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartInfoByAttribute"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="2"/><FieldDefinition baseType="STRING" description="" name="PartNumber" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartInfoByNumber"><ResultType aspect.dataShape="PartInfoBasic.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getPartInfoByVariantID"><ResultType aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition aspect.defaultValue="OR:com.ptc.wpcfg.doc.VariantSpec:5384955" baseType="STRING" description="" name="VariantID" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartInfoListByAttributes"><ResultType aspect.dataShape="PartInfoBasic.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="2"/><FieldDefinition baseType="STRING" description="" name="PartNumber" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartInfoSelectedNumber"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartRalatedCadDocSelectedObjectId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartsSelectedObjectId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartStructureByNavi"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="2"/><FieldDefinition aspect.defaultValue="OR:com.ptc.wpcfg.doc.VariantSpec:5384955" baseType="STRING" description="" name="VariantID" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getPartStructureByPartId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getPartStructureByPartIdCopy"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getPartStructuresByPartId"><ResultType aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="getPartStructuresByVariantID"><ResultType aspect.dataShape="PartStructureDS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="VariantID" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPartUsedByPartId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPdfDocListByDrawNo"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPdfDrawingList"><ResultType aspect.dataShape="EcaIdNumberNameNeeddate.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetPrimaryByDocId"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetRefDocLinkByDocID"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="docId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetReferencesDocByObjectId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetReferencesDocList"><ResultType aspect.dataShape="ReferencesDoc.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetRelatedCadDocFromPartId"><ResultType aspect.dataShape="RelatedCadDocInfo.DS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetRepresenIdByPartId"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="PartId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetRepresentationsByobjectId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="objectId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetThingViewMediaPath"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetThingViewUrl"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="number" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetValiantPartStructureByPartId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="partId" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetVariantSpecificationList"><ResultType aspect.dataShape="DropdowntDS" baseType="INFOTABLE" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="context" ordinal="2"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ImportCSV"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="ImportCSVinstDB"><ResultType baseType="STRING" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="SK_getPartByPartId"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="UpdateApiTest"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="STRING" description="" name="str" ordinal="1"/></ParameterDefinitions></ServiceDefinition><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="UpdatePartAttributes"><ResultType baseType="JSON" description="" name="result" ordinal="0"/><ParameterDefinitions/></ServiceDefinition></ServiceDefinitions><EventDefinitions/><ServiceMappings/><ServiceImplementations><ServiceImplementation description="" handlerName="Script" name="DownloadContent"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: url,
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// result: BLOB
let blob = Resources["ContentLoaderFunctions"].LoadBinary(params);

Things["SystemRepository"].SaveBinary({
	path: filepath /* STRING */,
	content: blob /* BLOB */
});
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="executeThingworxService"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Build Headers
var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["appKey"] = "25cf0909-3844-4213-9645-3465596468e6";
//headerObject["Accept"] = "application/json;odata.metadata=full";
var header = JSON.stringify(headerObject);

//logger.trace("GetPartstructure(header): " + header);

// Build Body
var bodyObject = { str: "ThingWorx Service Test" };
var body = JSON.stringify(bodyObject);

var params = {
	proxyScheme: undefined /* STRING */,
	headers: header /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: "https://pp-2212080214zp.portal.ptc.io:8443/Thingworx/Things/WindchillAPI_Base/Services/UpdateApiTest",
	content: body /* JSON */,
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: undefined /* STRING */,
	domain: undefined /* STRING */,
	username: undefined /* STRING */
};

// result: JSON
var result = Resources["ContentLoaderFunctions"].PostJSON(params);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="FilterParentList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PartStructureDS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "PartStructureDS"
});

if (Checked1 && Checked2 && Checked3) {
    var inter = Resources["InfoTableFunctions"].Intersect({
        columns2:  "Number" /* STRING */,
        columns1: "ID" /* STRING */,
        joinType: undefined /* STRING {"defaultValue":"INNER"} */,
        t1: ParentList1 /* INFOTABLE */,
        t2: ParentList2 /* INFOTABLE */,
        joinColumns1: "ID" /* STRING */,
        joinColumns2: "ID" /* STRING */
    });
    result = Resources["InfoTableFunctions"].Intersect({
        columns2:  "Number" /* STRING */,
        columns1: "ID" /* STRING */,
        joinType: undefined /* STRING {"defaultValue":"INNER"} */,
        t1: inter /* INFOTABLE */,
        t2: ParentList3 /* INFOTABLE */,
        joinColumns1: "ID" /* STRING */,
        joinColumns2: "ID" /* STRING */
    });
} else if (Checked1 && Checked2) {
    result = Resources["InfoTableFunctions"].Intersect({
        columns2:  "Number" /* STRING */,
        columns1: "ID" /* STRING */,
        joinType: undefined /* STRING {"defaultValue":"INNER"} */,
        t1: ParentList1 /* INFOTABLE */,
        t2: ParentList2 /* INFOTABLE */,
        joinColumns1: "ID" /* STRING */,
        joinColumns2: "ID" /* STRING */
    });
} else if (Checked1 && Checked3) {
    result = Resources["InfoTableFunctions"].Intersect({
        columns2:  "Number" /* STRING */,
        columns1: "ID" /* STRING */,
        joinType: undefined /* STRING {"defaultValue":"INNER"} */,
        t1: ParentList1 /* INFOTABLE */,
        t2: ParentList3 /* INFOTABLE */,
        joinColumns1: "ID" /* STRING */,
        joinColumns2: "ID" /* STRING */
    });
} else if (Checked2 && Checked3) {
    result = Resources["InfoTableFunctions"].Intersect({
        columns2:  "Number" /* STRING */,
        columns1: "ID" /* STRING */,
        joinType: undefined /* STRING {"defaultValue":"INNER"} */,
        t1: ParentList2 /* INFOTABLE */,
        t2: ParentList3 /* INFOTABLE */,
        joinColumns1: "ID" /* STRING */,
        joinColumns2: "ID" /* STRING */
    });
} else if (Checked1) {
    result = ParentList1;
} else if (Checked2) {
    result = ParentList2;
} else if (Checked3) {
    result = ParentList3;
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="Get2DThumbnailURL"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetRepresentationsByobjectId({
    objectId: objectId /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "2DThumbnailURL.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(EcaIdNumberNameNeeddate.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.URL = val[i]["TwoDThumbnailURL"]["URL"];
//    obj.Number = val[i]["Number"];
//    obj.Name = val[i]["Name"];
//    obj.NeedDate = val[i]["NeedDate"];    
//    obj.State = val[i]["State"]["Value"];   
    result.AddRow(obj);
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetAttributesList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// /Windchill/sslClientAuth/servlet/rest/tableview/nav.list.part/attributes?wt.effectiveUid=pat
var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	//url: me.WindchillUrl + "sslClientAuth/servlet/rest/tableview/nav.list.part/attributes?wt.effectiveUid=pat",
	url: me.WindchillUrl+ "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')",  //OR:wt.part.WTPart:4609211
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var partInfo = Resources["ContentLoaderFunctions"].GetJSON(params);

//Infotable to hold results
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
  infoTableName: "InfoTable",
  dataShapeName: "PartStructureDS"
});
result.AddRow(partInfo);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetContextList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
//	url: me.WindchillUrl + "servlet/odata/v6/ChangeMgmt/ChangeTasks?$filter=startswith(Number,\'" + number + "\')",
    url: me.WindchillUrl + "servlet/odata/v5/DataAdmin/Containers?%24select=Name&%24count=false",
    timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
//var result = response;
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(DropdowntDS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "DropdowntDS"
});
for each (var row in response.value) {
    if (row.Name.includes("UEC")) result.AddRow(row);
}
let sort = {
    name: "Name",
    ascending: true
};
result.Sort(sort);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetCSRFToken"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
    proxyScheme: undefined /* STRING */,
    headers: undefined /* JSON */,
    ignoreSSLErrors: true /* BOOLEAN */,
    useNTLM: undefined /* BOOLEAN */,
    workstation: undefined /* STRING */,
    useProxy: undefined /* BOOLEAN */,
    withCookies: undefined /* BOOLEAN */,
    proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/PTC/GetCSRFToken()" /* STRING */,
    timeout: undefined /* NUMBER */,
    proxyPort: undefined /* INTEGER */,
    password: me.WindchillUserPassword /* STRING */,
    domain: undefined /* STRING */,
    username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response["NonceValue"];
//var result =params;]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetCSVDataFilter"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[if ((param1 !== undefined && param1.length>0) || (param4 !== undefined && param4.length>0)) {
    var query = {
        "sorts": [
            {
                "fieldName": "ID",
                "isAscending": true,
                "isCaseSensitive": true
            }
        ],
        "filters": {
            type: "And",
            filters: [
            ]
        }
    };
    if (param1 !== undefined && param1.length>0) {
        query.filters.filters.push(
                {
                    "fieldName": "Data1",
                    "type": "EQ",
                    "value": param1 
                });
    }
    if (param4 !== undefined && param4.length>0) {
        query.filters.filters.push(
                {
                    "fieldName": "Data4",
                    "type": "EQ",
                    "value": param4 
                });
    }
}
// result: INFOTABLE dataShape: ""
// Warning: Potential Performance issue, since query filter is performed in Memory
let result = Things["CSV.Sample.DT"].QueryDataTableEntries({
	maxItems: undefined /* NUMBER {"defaultValue":500} */,
	values: undefined /* INFOTABLE */,
	query: query /* QUERY */,
	source: undefined /* STRING */,
	tags: undefined /* TAGS */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetCSVDataGroup1"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// result: INFOTABLE dataShape: ""
let result = Things["CSV.Sample.DT"].GetDataTableEntries({
	maxItems: undefined /* NUMBER {"defaultValue":500} */
});
var params = {
  t: result,
    columns: "Data1"
};

// result: INFOTABLE dataShape: "undefined"
result = Resources["InfoTableFunctions"].Distinct(params);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetCSVDataGroup4"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// result: INFOTABLE dataShape: ""
let result = Things["CSV.Sample.DT"].GetDataTableEntries({
	maxItems: undefined /* NUMBER {"defaultValue":500} */
});
var params = {
  t: result,
    columns: "Data4"
};

// result: INFOTABLE dataShape: "undefined"
result = Resources["InfoTableFunctions"].Distinct(params);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetDescribedByDocByObjectId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + objectId + "\')/DescribedBy?$expand=DescribedBy($select=Identity,ID)",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;

//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetDescribedByDocList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
var json =  me.GetDescribedByDocByObjectId({
    objectId: objectId /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "DescribedByDoc.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(DescribedByDoc.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
//logger.warn(JSON.stringify(json));
var val = json["value"];
for (var i = 0; i < val.length; i++) {
    if (val[i]["DescribedBy"]) {
        var obj = {};
        obj.Identity = val[i]["DescribedBy"]["Identity"];   
        obj.ID = val[i]["DescribedBy"]["ID"];     
        result.AddRow(obj);
    }
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetDocLinkByDocID"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/v5/DocMgmt/Documents(\'" + docId + "\')/PrimaryContent",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = "";
if (response.Content) result = response.Content.URL;
//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetDWGListByDWGNo"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[
var params = {
    infoTableName : "InfoTable",
    dataShapeName : "DescribedByDoc.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(DescribedByDoc.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
if (objectId !== undefined) {
    var params = {
    	proxyScheme: undefined /* STRING */,
    	headers: undefined /* JSON */,
    	ignoreSSLErrors: undefined /* BOOLEAN */,
    	useNTLM: undefined /* BOOLEAN */,
    	workstation: undefined /* STRING */,
    	useProxy: undefined /* BOOLEAN */,
    	withCookies: undefined /* BOOLEAN */,
    	proxyHost: undefined /* STRING */,
    	url: me.WindchillUrl + "servlet/odata/v5/DocMgmt/Documents/PTC.DocMgmt.DieselDrawing?%24filter=DWGNO%20eq%20(\'" + objectId + "\')&%24count=false",
    	timeout: undefined /* NUMBER */,
    	proxyPort: undefined /* INTEGER */,
    	password: me.WindchillUserPassword /* STRING */,
    	domain: undefined /* STRING */,
    	username: me.WindchillUserId /* STRING */
    };
    
    // response: JSON
    var json = Resources["ContentLoaderFunctions"].GetJSON(params);
    
    //logger.warn(JSON.stringify(json));
    var val = json["value"];
    for (var i = 0; i < val.length; i++) {
            var obj = {};
            obj.Identity = val[i]["Revision"];   
            obj.ID = val[i]["ID"];     
            result.AddRow(obj);
    }
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetEcaNumberNameNeeddateByNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetEcaSelectedNumber({
    number: number /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "EcaIdNumberNameNeeddate.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(EcaIdNumberNameNeeddate.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.ID = val[i]["ID"];
    obj.Number = val[i]["Number"];
    obj.Name = val[i]["Name"];
    obj.NeedDate = val[i]["NeedDate"];    
    obj.State = val[i]["State"]["Value"];   
    result.AddRow(obj);
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetEcaSelectedNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/v6/ChangeMgmt/ChangeTasks?$filter=startswith(Number,\'" + number + "\')",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetNavigationCriteria"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/v3/ProdPlatformMgmt/VariantSpecifications(\'" + ID + "\')/NavigationCriteria",
    timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetNavigationCriteriaCondByID"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/v3/NavCriteria/NavigationCriterias(\'" + NaviID + "\')",
    timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetParentInfo"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// /Windchill/sslClientAuth/servlet/rest/tableview/nav.list.part/attributes?wt.effectiveUid=pat
////Infotable to hold results
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
  infoTableName: "InfoTable",
  dataShapeName: "PartStructureDS"
});

function getParent(JSONObject) {
    if (JSONObject.value !== undefined && JSONObject.value.length > 0) {      
		result.AddRow(JSONObject.value[0]);
        var parent = me.GetPartUsedByPartId({
            partId: JSONObject.value[0].ID /* STRING */
        });
        getParent(parent);
    }
}

var parent = me.GetPartUsedByPartId({
    partId: partId /* STRING */
});

getParent(parent);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetParentInfoList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// /Windchill/sslClientAuth/servlet/rest/tableview/nav.list.part/attributes?wt.effectiveUid=pat
////Infotable to hold results
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
  infoTableName: "InfoTable",
  dataShapeName: "PartStructureDS"
});

function getParent(JSONObject) {
    if (JSONObject.value !== undefined && JSONObject.value.length > 0) {      
		for (var i=0; i<JSONObject.value.length; i++) {
        	result.AddRow(JSONObject.value[i]);
        }
        var parent = me.GetPartUsedByPartId({
            partId: JSONObject.value[0].ID /* STRING */
        });
        getParent(parent);
    }
}

var parent = me.GetPartUsedByPartId({
    partId: partId /* STRING */
});

getParent(parent);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetParentInfosByNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetPartInfoSelectedNumber({
    number: number /* STRING */
});

var result = me.GetParentInfoList({
	partId: json["value"][0]["ID"] /* STRING */
});]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartAttributes"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl+ "servlet/odata/ProdMgmt/GetWindchillMetaInfo(EntityName='PTC.ProdMgmt.Part')",  
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var result = Resources["ContentLoaderFunctions"].GetJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartAttributesMechanicalPart"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl+ "servlet/odata/v3/ProdMgmt/GetWindchillMetaInfo(EntityName='PTC.ProdMgmt.MechanicalPart')",  
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var result = Resources["ContentLoaderFunctions"].GetJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="getPartByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[
let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
	url: me.WindchillUrl+ "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')?$select=Name,Number,Version,State,Source,TypeIcon,DWGBRNNO,Revision",
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WindchillUserPassword/* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
let result = Resources["ContentLoaderFunctions"].GetJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartIdByNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var json, objId, val, i;
var result;
// オブジェクト番号取得
var getObjectId = function(json) {
    var objectId;
    if ("value" in json) {
        var val = json["value"];
        //logger.trace("value_length:" + val.length);
        for (var i = 0; i < val.length; i++) {
            //if (val[i]["View"] == "E-BOM") {
                objectId = val[i]["ID"];
                break;
            //}
        }
    }
    return objectId;
};

// オブジェクト番号の検索
if (number) {
    // json: JSON
    json =  me.GetPartInfoSelectedNumber({
        number: number /* STRING */
    });
    logger.trace("GetObjectIdFromNumber number:" + number + " json:" + JSON.stringify(json));
    //result = getObjectId(json);
    result = json.value[0].ID;
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartIDByVariantID"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
    proxyScheme: undefined /* STRING */,
    headers: undefined /* JSON */,
    ignoreSSLErrors: true /* BOOLEAN */,
    useNTLM: undefined /* BOOLEAN */,
    workstation: undefined /* STRING */,
    useProxy: undefined /* BOOLEAN */,
    withCookies: undefined /* BOOLEAN */,
    proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/v3/ProdPlatformMgmt/VariantSpecifications(\'" + VariantID + "\')/ConfigurableModule?$select=ID" /* STRING */,
    timeout: undefined /* NUMBER */,
    proxyPort: undefined /* INTEGER */,
    password: me.WindchillUserPassword /* STRING */,
    domain: undefined /* STRING */,
    username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response["ID"];]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartInfo"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["Accept"] = "application/json;odata.metadata=full";
headerObject["Prefer"] = "odata.maxpagesize=10";
//"Prefer" + "odata.maxpagesize=<The number between 1 and 2000>"
var header = JSON.stringify(headerObject);
let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: header /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
	//url: me.WindchillUrl+ "servlet/odata/ProdMgmt/Parts?$select=Name,Number",
	url: me.WindchillUrl+ "servlet/odata/ProdMgmt/Parts?$select=Name,Number&$skiptoken=5",
 	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WindchillUserPassword/* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
let result = Resources["ContentLoaderFunctions"].GetJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartInfoByAttribute"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var query = {
"filters":{
"type": "LT",
"fieldName": "Start_Date",
"value": "2018-11-27T02:55:36Z"
}
};

var result1= Things["WindchillAPI_Base"].QueryDataTableEntries({
values: undefined /* INFOTABLE */,
maxItems: undefined /* NUMBER */,
tags: undefined /* TAGS */,
source: undefined /* STRING */,
query: query /* QUERY */
});


var query1 = {
"filters":{
"type": "GT",
"fieldName": "End_Time",
"value": "2018-11-27T02:55:36Z"
}
};

// Provide your filter using the format as described in the help topic "Query Parameter for Query Services"
var params = {

t: result1 /* INFOTABLE */,

query: query1 /* QUERY */

};
var result2 = Resources["InfoTableFunctions"].Query(params);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartInfoByNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetPartInfoSelectedNumber({
    number: number /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "PartInfoBasic.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(EcaIdNumberNameNeeddate.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.Number = val[i]["Number"];
    obj.Name = val[i]["Name"];
    obj.Version = val[i]["Version"];  
    obj.ID = val[i]["ID"];      
    obj.FolderLocation = val[i]["FolderLocation"];   
    result.AddRow(obj);
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="getPartInfoByVariantID"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[//Infotable to hold results
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
  infoTableName: "InfoTable",
  dataShapeName: "PartStructureDS"
});

    try {
        var partId = me.GetPartIDByVariantID({
            VariantID: VariantID /* STRING {"defaultValue":"OR:com.ptc.wpcfg.doc.VariantSpec:5384955"} */
        });
        var parent =  me.getPartByPartId({
        	partId: partId /* STRING */
        });

        //grab some additional fields off the parent
        partStructure.Version = parent.Version;
        partStructure.State = parent.State.Display;
        partStructure.Source = parent.Source.Display;
        partStructure.TypeIconURL = parent.TypeIcon.Path;
        result.AddRow(partStructure); // add the top node by hand
    } catch (err) {
        throw(err);
    }
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartInfoListByAttributes"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
var json =  me.GetPartInfoByAttribute({
    number: number /* STRING */,
    PartNumber: PartNumber /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "PartInfoBasic.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PartInfoBasic.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
//logger.warn(JSON.stringify(json));

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.Number = val[i]["Number"];
    obj.Name = val[i]["Name"];
    obj.Version = val[i]["Version"];  
    obj.ID = val[i]["ID"];      
    obj.FolderLocation = val[i]["FolderLocation"];   
    result.AddRow(obj);
}

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartInfoSelectedNumber"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/v5/ProdMgmt/Parts?$filter=startswith(Number,\'" + number + "\')",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartRalatedCadDocSelectedObjectId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/v5/ProdMgmt/Parts(\'" + objectId + "\')/PartDocAssociations?&$expand=RelatedCADDoc&$count=false",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;

//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartsSelectedObjectId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + objectId + "\')",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;

//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartStructureByNavi"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Build Headers
var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["CSRF_NONCE"] = me.GetCSRFToken();
headerObject["Accept"] = "application/json;odata.metadata=full";
var header = JSON.stringify(headerObject);
var navObj = me.GetNavigationCriteria({
	ID: VariantID /* STRING */
});
//var navObj = me.GetNavigationCriteriaCondByID({
//	NaviID: navInfo.ID /* STRING */
//});

logger.warn(JSON.stringify(navObj));
if (navObj !== undefined) {
    delete navObj["headers"];
    delete navObj["ID"];
    //delete navObj["ApplicationName"];
    delete navObj["@PTC.AppliedContainerContext.LocalTimeZone"];
    for (var i=0; i<navObj.Filters.length; i++) { 
        delete navObj.Filters[i]["DisableRuleChecking"];
    }
    //navStr = JSON.stringify({ "NavigationCriteria" : navObj });
}
// Build Body
var bodyObject = {
    "NavigationCriteria" : navObj
};
var body = JSON.stringify(bodyObject);
if (!partId) {
    partId = me.GetPartIDByVariantID({
        VariantID: VariantID /* STRING {"defaultValue":"OR:com.ptc.wpcfg.doc.VariantSpec:5384955"} */
    });
}
var params = {
	proxyScheme: undefined /* STRING */,
	headers: header /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name,Number,Version,State,Source,TypeIcon,DWGBRNNO,Revision),PartUse($select=Quantity,Unit);$levels=max)",
//    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part,PartUse;$levels=max)",
	//url: me.WindchillUrl + "servlet/odata/v6/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=*);$levels=max)",
	content: body /* JSON */,
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
var result = Resources["ContentLoaderFunctions"].PostJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="getPartStructureByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Build Headers
var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["CSRF_NONCE"] = me.GetCSRFToken();
headerObject["Accept"] = "application/json;odata.metadata=full";
var header = JSON.stringify(headerObject);

// Build Body
var bodyObject = new Object();
var body = JSON.stringify(bodyObject);

var params = {
	proxyScheme: undefined /* STRING */,
	headers: header /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
//	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name,Number,Version,State,Source,TypeIcon),PartUse($select=Quantity,Unit);$levels=max)",
    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part,PartUse;$levels=max)",
	//url: me.WindchillUrl + "servlet/odata/v6/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=*);$levels=max)",
	content: body /* JSON */,
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
var result = Resources["ContentLoaderFunctions"].PostJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="getPartStructureByPartIdCopy"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Build Headers
var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["CSRF_NONCE"] = me.GetCSRFToken();
headerObject["Accept"] = "application/json;odata.metadata=full";
var header = JSON.stringify(headerObject);

// Build Body
var bodyObject = new Object(
{
    "NavigationCriteria" :
{
  "@odata.context": "https://PP-2212080214ZP.portal.ptc.io/Windchill/servlet/odata/v3/NavCriteria/$metadata#NavigationCriterias/$entity",
  "ApplicableType": "PTC.ProdMgmt.Part",
  "ApplicationName": null,
  "ApplyToTopLevelObject": false,
  "Centricity": false,
  "ConfigSpecs": [
    {
      "@odata.type": "#PTC.NavCriteria.WTPartStandardConfigSpec",
      "WorkingIncluded": true,
      "View": "Design",
      "LifeCycleState": null,
      "Variation1": null,
      "Variation2": null
    }
  ],
  "CreatedOn": "2023-07-01T07:27:45Z",
  "Filters": [
    {
      "@odata.type": "#PTC.NavCriteria.OptionFilter",
      "OverrideOptionSetRevision": "OR:com.ptc.windchill.option.model.OptionSet:4444629",
      "OptionFilterConfigSpecs": [
        {
          "@odata.type": "#PTC.NavCriteria.OptionFilterConfigSpec",
          "LifeCycleState": null,
          "LatestActive": true,
          "LifeCycleActive": false,
          "EffActive": false,
          "EffectiveDate": null
        }
      ],
      "FilterMode": {
        "InternalCode": 1,
        "Name": "Standard"
      },
      "ChoiceValues": [
        {
          "ID": "OR:com.ptc.windchill.option.model.Choice:731971",
          "Name": "PRO-S"
        }
      ]
    }
  ],
  "HideUnresolvedDependents": false,
  "LastModified": "2023-07-01T07:27:45Z",
  "Name": "test_lee",
  "SharedToAll": false,
  "UseDefaultForUnresolved": true
}
});

var body = JSON.stringify(bodyObject);

var params = {
	proxyScheme: undefined /* STRING */,
	headers: header /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
//	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name,Number,Version,State,Source,TypeIcon),PartUse($select=Quantity,Unit);$levels=max)",
    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part,PartUse;$levels=max)",
	//url: me.WindchillUrl + "servlet/odata/v6/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=*);$levels=max)",
	content: body /* JSON */,
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
var result = Resources["ContentLoaderFunctions"].PostJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="getPartStructuresByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[
function formatPartStructure(JSONObject) {
    JSONObject.Components.forEach(loopFunction);

    function loopFunction(item) {
        var newTableEntry = {};
        newTableEntry = item; // grab all the "tree" fields
        newTableEntry.Version = item.Part.Version;
        newTableEntry.State = item.Part.State.Display;
        newTableEntry.Source = item.Part.Source.Display;
        newTableEntry.TypeIconURL = item.Part.TypeIcon.Path;
        newTableEntry.Quantity = item.PartUse.Quantity;
        newTableEntry.Unit = item.PartUse.Unit.Display;
        result.AddRow(newTableEntry);
        if (item.Components !== undefined && item.Components.length > 0) {
            formatPartStructure(item);
        }
    }
}

//Infotable to hold results
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
  infoTableName: "InfoTable",
  dataShapeName: "PartStructureDS"
});

if (partId) {
    try {
        // Get Top Node
        var parent =  me.getPartByPartId({
        partId: partId /* STRING */
        });

        // Get Child Node
        var partStructure = me.getPartStructureByPartId({
        	partId: partId /* STRING */
        });    

        //grab some additional fields off the parent
        partStructure.Version = parent.Version;
        partStructure.State = parent.State.Display;
        partStructure.Source = parent.Source.Display;
        partStructure.TypeIconURL = parent.TypeIcon.Path;
        result.AddRow(partStructure); // add the top node by hand
        formatPartStructure(partStructure); // add the children
    } catch (err) {
        throw(err);
    }
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="getPartStructuresByVariantID"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[
function formatPartStructure(JSONObject) {
    JSONObject.Components.forEach(loopFunction);

    function loopFunction(item) {
        var newTableEntry = {};
        newTableEntry = item; // grab all the "tree" fields
        newTableEntry.Version = item.Part.Version;
        newTableEntry.State = item.Part.State.Display;
        newTableEntry.Source = item.Part.Source.Display;
        newTableEntry.TypeIconURL = item.Part.TypeIcon.Path;
        newTableEntry.Quantity = item.PartUse.Quantity;
        newTableEntry.Unit = item.PartUse.Unit.Display;
        newTableEntry.DWGBRNNO = (item.Part.DWGBRNNO || "");
        newTableEntry.Revision = (item.Part.Revision || "");
        result.AddRow(newTableEntry);
        if (item.Components !== undefined && item.Components.length > 0) {
            formatPartStructure(item);
        }
    }
}

//Infotable to hold results
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
  infoTableName: "InfoTable",
  dataShapeName: "PartStructureDS"
});

    try {
        var partId = me.GetPartIDByVariantID({
            VariantID: VariantID /* STRING {"defaultValue":"OR:com.ptc.wpcfg.doc.VariantSpec:5384955"} */
        });
        var parent =  me.getPartByPartId({
        	partId: partId /* STRING */
        });
        
        // Get Child Node
        var partStructure = me.GetPartStructureByNavi({
            VariantID: VariantID /* STRING {"defaultValue":"OR:com.ptc.wpcfg.doc.VariantSpec:5384955"} */,
            partId: partId /* STRING */
        });

        //grab some additional fields off the parent
        partStructure.Version = parent.Version;
        partStructure.State = parent.State.Display;
        partStructure.Source = parent.Source.Display;
        partStructure.TypeIconURL = parent.TypeIcon.Path;
        partStructure.DWGBRNNO = (parent.DWGBRNNO || "");
        partStructure.Revision = (parent.Revision || "");
        result.AddRow(partStructure); // add the top node by hand
        formatPartStructure(partStructure); // add the children
    } catch (err) {
        throw(err);
    }
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPartUsedByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// /Windchill/sslClientAuth/servlet/rest/tableview/nav.list.part/attributes?wt.effectiveUid=pat
var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	//url: me.WindchillUrl + "sslClientAuth/servlet/rest/tableview/nav.list.part/attributes?wt.effectiveUid=pat",
	url: me.WindchillUrl+ "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/UsedBy?$select=ID,Number",  //OR:wt.part.WTPart:4607260
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var result = Resources["ContentLoaderFunctions"].GetJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPdfDocListByDrawNo"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/v5/DocMgmt/Documents?%24filter=startswith(DRAWINGNO,\'" + number + "\')&%24count=false",
//    url: me.WindchillUrl + "servlet/odata/v6/ChangeMgmt/ChangeTasks?$filter=startswith(Number,\'" + number + "\')",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPdfDrawingList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetPdfDocListByDrawNo({
    number: number /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "GetPdfDrawingLists.DS"
};

var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.DRAWINGNO = val[i]["DRAWINGNO"];
    obj.Number = val[i]["Number"];
    obj.Name = val[i]["Name"];
    obj.ID = val[i]["ID"];
    result.AddRow(obj);
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetPrimaryByDocId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var result = "";
if (objectId !== undefined) {
    var params = {
    	proxyScheme: undefined /* STRING */,
    	headers: undefined /* JSON */,
    	ignoreSSLErrors: undefined /* BOOLEAN */,
    	useNTLM: undefined /* BOOLEAN */,
    	workstation: undefined /* STRING */,
    	useProxy: undefined /* BOOLEAN */,
    	withCookies: undefined /* BOOLEAN */,
    	proxyHost: undefined /* STRING */,
    	url: me.WindchillUrl + "servlet/odata/v5/DocMgmt/Documents(\'" + objectId + "\')/PrimaryContent",
    	timeout: undefined /* NUMBER */,
    	proxyPort: undefined /* INTEGER */,
    	password: me.WindchillUserPassword /* STRING */,
    	domain: undefined /* STRING */,
    	username: me.WindchillUserId /* STRING */
    };

    // response: JSON
    var json = Resources["ContentLoaderFunctions"].GetJSON(params);
    //if (json && json.Content) result = (json.Content.URL || "");
    if (json && json.Content && json.Content.URL) {
        //result = "https://pat:ptc@" + result.slice(8);
        me.DownloadContent({
            url: json.Content.URL /* STRING */,
            filepath: "/test_lee.pdf" /* STRING {"defaultValue":"/test_lee.pdf"} */
        });
        result = "https://pp-2305061041bx.portal.ptc.io:8443/Thingworx/FileRepositoryDownloader?download-repository=SystemRepository&download-path=/test_lee.pdf";
        //result = "https://pp-2212080214zp.portal.ptc.io:8443/Thingworx/documents/test_lee.pdf";
        
    }
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetRefDocLinkByDocID"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/v5/DocMgmt/Documents(\'" + docId + "\')/PrimaryContent",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;
//if (response.Content) result = response.Content.URL;
//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetReferencesDocByObjectId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
//	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + objectId + "\')/References?$expand=References($select=Identity,ID)",
    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + objectId + "\')/References?$expand=References",
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;

//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetReferencesDocList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetReferencesDocByObjectId({
    objectId: objectId /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "ReferencesDoc.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(ReferencesDoc.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.Identity = val[i]["References"]["Identity"];   
    obj.ID = val[i]["References"]["ID"];     
    result.AddRow(obj);
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetRelatedCadDocFromPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// json: JSON
json =  me.GetPartRalatedCadDocSelectedObjectId({
    objectId: objectId /* STRING */
});

var params = {
    infoTableName : "InfoTable",
    dataShapeName : "RelatedCadDocInfo.DS"
};

// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(EcaIdNumberNameNeeddate.DS)
var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);

var val = json["value"];
for (var i = 0; i < val.length; i++) {
    var obj = {};
    obj.ID = val[i]["RelatedCADDoc"]["ID"];
    obj.FileName = val[i]["RelatedCADDoc"]["FileName"];
    obj.FolderLocation = val[i]["RelatedCADDoc"]["FolderLocation"];
    obj.AssociationType = val[i]["AssociationType"]["Value"];  
    result.AddRow(obj);
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetRepresenIdByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var json, objId, val, i, partNo;
var result;

// オブジェクト番号の検索
if (PartId) {
    var params = {
        proxyScheme: undefined /* STRING */,
        headers: undefined /* JSON */,
        ignoreSSLErrors: true /* BOOLEAN */,
        useNTLM: undefined /* BOOLEAN */,
        workstation: undefined /* STRING */,
        useProxy: undefined /* BOOLEAN */,
        withCookies: undefined /* BOOLEAN */,
        proxyHost: undefined /* STRING */,
        url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + PartId + "\')/Representations?%24count=false",
        timeout: undefined /* NUMBER */,
        proxyPort: undefined /* INTEGER */,
        password: me.WindchillUserPassword /* STRING */,
        domain: undefined /* STRING */,
        username: me.WindchillUserId /* STRING */
    };
    // response: JSON
    json = Resources["ContentLoaderFunctions"].GetJSON(params);

    logger.trace("Representation json:" + JSON.stringify(json));
    result = json.value[0].ID;
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetRepresentationsByobjectId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
	url: me.WindchillUrl + "servlet/odata/v3/CADDocumentMgmt/CADDocuments(\'" + objectId + "\')/Representations",   
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

//logger.trace("GetPart: " + params.url);

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
var result = response;

//logger.trace("GetPart(response): " + JSON.stringify(result));
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetThingViewMediaPath"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var result;
// オブジェクト番号の検索
if (number) {
    // json: JSON
    json =  me.GetPartInfoSelectedNumber({
        number: number /* STRING */
    });
    var partid = json.value[0].ID;
    var repid = me.GetRepresenIdByPartId({
        PartId: partid /* STRING */
    });
    
    result = "/Thingworx/MediaEntities/Lee.Media/Content//Windchill/servlet/odata/v2/Visualization/Representations(\'" + repid + "\')/PTC.Visualization.GetPVZ(IncludeAnnotations=true)";
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetThingViewUrl"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var result = "";
// オブジェクト番号の検索
if (number) {
    // json: JSON
    json =  me.GetPartInfoSelectedNumber({
        number: number /* STRING */
    });
    var partid = json.value[0].ID;
    var resource = Things["PartStructureAccessAppThing"].GetRepresentableInfoForUniqueResource({
        addtionalAttributesFromSelectedResource: undefined /* STRING */,
        number: "WindchillDemoPartResourceProvider:" + partid /* STRING */,
        userSpecifiedFilterCriteria: undefined /* STRING */,
        resourceDataShape: undefined /* DATASHAPENAME */,
        accessAppConfigThingName: undefined /* STRING */
    });
    result = resource.StructureUrl;
}
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetValiantPartStructureByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Build Headers
var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["CSRF_NONCE"] = me.GetCSRFToken();
headerObject["Accept"] = "application/json;odata.metadata=full";
var header = JSON.stringify(headerObject);

// Build Body
var bodyObject = new Object();
var body = JSON.stringify(bodyObject);

var params = {
	proxyScheme: undefined /* STRING */,
	headers: header /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/v5/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name);$levels=max)",
    //    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name,Number),PartUse($select=Quantity,Unit);$levels=max)",
    //	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name,Number,Version,State,Source,TypeIcon),PartUse($select=Quantity,Unit);$levels=max)",
//    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part,PartUse;$levels=max)",
	//url: me.WindchillUrl + "servlet/odata/v6/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=*);$levels=max)",
	content: body /* JSON */,
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
var result = Resources["ContentLoaderFunctions"].PostJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="GetVariantSpecificationList"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var params = {
	proxyScheme: undefined /* STRING */,
	headers: undefined /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/v3/ProdPlatformMgmt/VariantSpecifications?%24select=Name&%24filter=Context%2FName%20eq%20\'" + context + "\'&%24count=false",
    timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId /* STRING */
};

// response: JSON
var response = Resources["ContentLoaderFunctions"].GetJSON(params);
//var result = response;
// CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(DropdowntDS)
let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
    infoTableName: "InfoTable",
    dataShapeName: "DropdowntDS"
});
for each (var row in response.value) {
	result.AddRow(row);
}

let sort = {
    name: "Name",
    ascending: true
};
result.Sort(sort);

]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ImportCSV"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var result = "";
try {
    var params = {
        path: "dummy_data.csv" /* STRING */,
        columnMappings: "ID;Data1;Data2;Data3;Data4" /* STRING */,
        //columnMappings: undefined,
        hasHeader: true /* BOOLEAN */,
        longitudeField: undefined /* NUMBER */,
        dateFormat: undefined /* STRING */,
        fileRepository: "LIXIL.Repo" /* THINGNAME */,
        latitudeField: undefined /* NUMBER */,
        fieldDelimiter: "," /* STRING */,
        stringDelimiter: "\"" /* STRING */,
        content: "\n" /* STRING */,
        dataShape: "CSV.Sample.DS" /* DATASHAPENAME */
    };

    // result: INFOTABLE
    var dataList = Resources["CSVParserFunctions"].ReadCSVFile(params);
    logger.warn("ImportCSV json: " + dataList.ToJSON());

    Things["CSV.Sample.DT"].AddDataTableEntries({
        sourceType: undefined /* STRING */,
        values: dataList /* INFOTABLE */,
        location: undefined /* LOCATION */,
        source: undefined /* STRING */,
        tags: undefined /* TAGS */
    });
//    for each (var row in dataList.rows) {
//        // result: NUMBER
//let result = Things["Lee.PG"].InstDB({
//	data2: row.Data1 /* STRING */,
//	data1: row.Data1 /* STRING */
//});
//    }    
    result = dataList.getRowCount() + "件登録しました";
} catch(err) {
    result = err + "エラーが発生しました";
    logger.error(me.name+" ImportCSVList : Unable to ImportCSVList Error: " + err);
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="ImportCSVinstDB"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var result = "";
try {
    var params = {
        path: "dummy_data.csv" /* STRING */,
        columnMappings: "ID;Data1;Data2;Data3;Data4" /* STRING */,
        //columnMappings: undefined,
        hasHeader: true /* BOOLEAN */,
        longitudeField: undefined /* NUMBER */,
        dateFormat: undefined /* STRING */,
        fileRepository: "LIXIL.Repo" /* THINGNAME */,
        latitudeField: undefined /* NUMBER */,
        fieldDelimiter: "," /* STRING */,
        stringDelimiter: "\"" /* STRING */,
        content: "\n" /* STRING */,
        dataShape: "CSV.Sample.DS" /* DATASHAPENAME */
    };

    // result: INFOTABLE
    var dataList = Resources["CSVParserFunctions"].ReadCSVFile(params);
    logger.warn("ImportCSV json: " + dataList.ToJSON());

//    Things["CSV.Sample.DT"].AddDataTableEntries({
//        sourceType: undefined /* STRING */,
//        values: dataList /* INFOTABLE */,
//        location: undefined /* LOCATION */,
//        source: undefined /* STRING */,
//        tags: undefined /* TAGS */
//    });
    for each (var row in dataList.rows) {
        // result: NUMBER
let result = Things["Lee.PG"].InstDB({
	data2: row.Data1 /* STRING */,
	data1: row.Data1 /* STRING */
});
    }    
    result = dataList.getRowCount() + "件登録しました";
} catch(err) {
    result = err + "エラーが発生しました";
    logger.error(me.name+" ImportCSVList : Unable to ImportCSVList Error: " + err);
}]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="SK_getPartByPartId"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["Accept"] = "application/json;odata.metadata=full";
headerObject["Prefer"] = "odata.maxpagesize=1";
//"Prefer" + "odata.maxpagesize=<The number between 1 and 2000>"
var header = JSON.stringify(headerObject);

let params = {
	proxyScheme: undefined /* STRING {"defaultValue":"http"} */,
	headers: header /* JSON */,
	ignoreSSLErrors: undefined /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN {"defaultValue":false} */,
	workstation: undefined /* STRING {"defaultValue":""} */,
	useProxy: undefined /* BOOLEAN {"defaultValue":false} */,
	withCookies: undefined /* BOOLEAN {"defaultValue":false} */,
	proxyHost: undefined /* STRING {"defaultValue":""} */,
	url: me.WindchillUrl+ "/servlet/odata/v5/ProdMgmt/Parts?$filter=startswith(Number,'PTC-SKIP')&$select=ID,Number,Name&$skip=2",
	timeout: undefined /* NUMBER {"defaultValue":60} */,
	proxyPort: undefined /* INTEGER {"defaultValue":8080} */,
	password: me.WindchillUserPassword/* STRING */,
	domain: undefined /* STRING {"defaultValue":""} */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
let result = Resources["ContentLoaderFunctions"].GetJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="UpdateApiTest"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[me.ApiTest = str;]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation><ServiceImplementation description="" handlerName="Script" name="UpdatePartAttributes"><ConfigurationTables><ConfigurationTable dataShapeName="" description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[// Build Headers
var headerObject = new Object();
headerObject["Content-Type"] = "application/json";
headerObject["CSRF_NONCE"] = me.GetCSRFToken();
headerObject["Accept"] = "application/json;odata.metadata=full";
headerObject["Lixilpartnumber"] = "BBBBB";
headerObject["@odata.type"] = "#PTC.ProdMgmt.MechanicalPart";
var header = JSON.stringify(headerObject);

// Build Body
var bodyObject = new Object();
var body = JSON.stringify(bodyObject);

var params = {
	proxyScheme: undefined /* STRING */,
	headers: header /* JSON */,
	ignoreSSLErrors: true /* BOOLEAN */,
	useNTLM: undefined /* BOOLEAN */,
	workstation: undefined /* STRING */,
	useProxy: undefined /* BOOLEAN */,
	withCookies: undefined /* BOOLEAN */,
	proxyHost: undefined /* STRING */,
    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts('OR:wt.part.WTPart:5398261')",    
//	url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=Name,Number,Version,State,Source,TypeIcon),PartUse($select=Quantity,Unit);$levels=max)",
//    url: me.WindchillUrl + "servlet/odata/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part,PartUse;$levels=max)",
	//url: me.WindchillUrl + "servlet/odata/v6/ProdMgmt/Parts(\'" + partId + "\')/PTC.ProdMgmt.GetPartStructure?$expand=Components($expand=Part($select=*);$levels=max)",
	content: body /* JSON */,
	timeout: undefined /* NUMBER */,
	proxyPort: undefined /* INTEGER */,
	password: me.WindchillUserPassword /* STRING */,
	domain: undefined /* STRING */,
	username: me.WindchillUserId/* STRING */
};

// result: JSON
var result = Resources["ContentLoaderFunctions"].PostJSON(params);
]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></ServiceImplementations><Subscriptions/></ThingShape><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations><AlertDefinitions name="ApiTest"/><AlertDefinitions name="WindchillUrl"/><AlertDefinitions name="WindchillUserId"/><AlertDefinitions name="WindchillUserPassword"/></AlertConfigurations><ImplementedShapes/><ThingProperties><WindchillUserId><Value><![CDATA[pat]]></Value><Timestamp>2023-08-18T06:02:07.319Z</Timestamp><Quality>GOOD</Quality></WindchillUserId><WindchillUserPassword><Value><![CDATA[ptc]]></Value><Timestamp>1970-01-01T00:00:00.000Z</Timestamp><Quality>UNKNOWN</Quality></WindchillUserPassword><WindchillUrl><Value><![CDATA[https://pp-2212080214zp.portal.ptc.io/Windchill/]]></Value><Timestamp>2023-08-18T06:01:54.481Z</Timestamp><Quality>GOOD</Quality></WindchillUrl><ApiTest><Value/><Timestamp>2023-09-03T09:13:01.626Z</Timestamp><Quality>GOOD</Quality></ApiTest></ThingProperties><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="" timestamp="2023-09-03T09:13:01.422Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetPrimaryByDocId : service updated&#10;" timestamp="2023-09-03T09:15:29.936Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="services : DownloadContent : service updated&#10;" timestamp="2023-09-03T09:17:35.050Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetThingViewMediaPath : service updated&#10;GetThingViewUrl : service added&#10;" timestamp="2023-09-03T09:33:55.739Z" user="pat"/><ConfigurationChange changeAction="MODIFY" changeReason="services : GetThingViewUrl : service updated&#10;" timestamp="2023-09-03T09:34:09.157Z" user="pat"/></ConfigurationChanges></Thing></Things><Logs/><Authenticators/><ThingPackages/><NotificationDefinitions/><ApplicationKeys/><StateDefinitions/><ThingTemplates/><ExtensionPackages/><Organizations/><Menus/><ThingGroups/><Resources/><DataTags/><ThingShapes/><Subsystems/><NotificationContents/></Entities>